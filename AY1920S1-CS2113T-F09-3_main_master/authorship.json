[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d\u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    archiveBaseName \u003d \"eggventory\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "group \u0027seedu.eggventory\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    mainClassName \u003d \"eggventory.Eggventory\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 2,
      "Rishab Patwari": 6,
      "-": 39
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "rootProject.name \u003d \u0027eggventory\u0027"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 1
    }
  },
  {
    "path": "src/main/java/eggventory/Eggventory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * Eggventory is a task list that supports 3 types of classes - Todos, deadlines and events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Tasks can be added, marked as done, searched for, and deleted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Tasks are loaded from and saved to file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class Eggventory {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private static StockType stockType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Eggventory does somethings."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "     * @param filePath which stores path of persistent storage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public Eggventory(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        stockType \u003d storage.load(); //Will always return the right object even if empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        ui.printIntro();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            userInput \u003d ui.read();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                Command command \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                command.execute(stockType, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                if (command.getType() \u003d\u003d CommandType.BYE) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Main function that sets the save path and runs eggventory."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        String filePath \u003d currentDir + \"/data/saved_tasks.txt\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        new Eggventory(filePath).run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 27,
      "Raghav Bhardwaj": 22,
      "Rishab Patwari": 5,
      "-": 3
    }
  },
  {
    "path": "src/main/java/eggventory/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.InsufficientInfoException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Interprets command strings by the user, and converts them to command objects that can be executed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav"
        },
        "content": "    private int processDoAfter(String input) throws BadInputException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        String shortStr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        String[] splitStr;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        shortStr \u003d input.substring(input.indexOf(\"/after\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav"
        },
        "content": "            splitStr \u003d shortStr.split(\" \", 3); //splits into \"/after\" \"x\" and other stuff, where \"x\" is an int"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav"
        },
        "content": "            taskIndex \u003d Integer.parseInt(splitStr[1]); //check if this is an int"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav"
        },
        "content": "            throw new BadInputException(\"Please input the index number of the task that has to be done first.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Processes the contents of an add command (everything after the word \"add\")."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Splits up the input string into an array containing the various attributes of the stock being added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param input String containing the attributes of the stock."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return an array consisting of StockType, StockCode, Quantity and Description."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @throws InsufficientInfoException If any of the required attributes is missed out."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private String[] processAdd(String input) throws InsufficientInfoException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        String[] addInput \u003d input.split(\" \", 4); //There are 4 attributes for now."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        if (addInput.length \u003c 4 | addInput[0].isBlank() | addInput[1].isBlank()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "                | addInput[2].isBlank() | addInput[3].isBlank()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            throw new InsufficientInfoException(\"Please enter stock information after the \u0027add\u0027 command in\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "                    + \" this format:\\nadd \u003cStockType\u003e \u003cStockCode\u003e \u003cQuantity\u003e \u003cDescription\u003e\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return addInput;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Checks if the command keyword (first word is valid)."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Determines what to do with the remaining string depending on the command."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Also handles exceptions for bad description string inputs."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param listInput array containing the command and description from the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return an array where the first item is the command word and the second item is the rest of the text."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @throws BadInputException If the first word is not one of the recognised commands."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @throws InsufficientInfoException If any of the commands had compulsory parameters missed out."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @throws NumberFormatException If non-integer inputs are received for numerical parameters."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private Command handleListInput(String listInput) throws BadInputException,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            InsufficientInfoException, NumberFormatException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        /*TODO: Update parser to handle Stock requests separately to process optional commands"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "          TODO: also split parser up into multiple parser modules depending on the first command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        int afterIndex;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        afterIndex \u003d -1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        if (listInput.contains(\"/after\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raghav"
        },
        "content": "            afterIndex \u003d processDoAfter(listInput);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raghav"
        },
        "content": "            listInput \u003d listInput.replace(\" /after \" + Integer.toString(afterIndex), \"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raghav"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        //Extract the first word."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        //inputArr[0] is the main command word."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        //inputArr[1] is the subsequent command string, and may also be empty."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        String[] inputArr \u003d listInput.split(\" \", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        switch (inputArr[0]) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        //Commands which are single words."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            command \u003d new ListCommand(CommandType.LIST);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            command \u003d new Command(CommandType.BYE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        //Commands which require numerical input."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            command \u003d new DoneCommand(CommandType.DONE, Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            inputArr[1] \u003d inputArr[1].strip(); //Removes whitespace after the integer so that it can parse correctly."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            command \u003d new DeleteCommand(CommandType.DELETE, Integer.parseInt(inputArr[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        //Commands which require string input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        case \"add\": {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                throw new BadInputException(\"\u0027\" + inputArr[0] + \"\u0027 requires 1 or more arguments.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            String[] addInput \u003d processAdd(inputArr[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            command \u003d new AddCommand(CommandType.ADD, addInput[0], addInput[1], Integer.parseInt(addInput[2]),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "                    addInput[3]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                throw new BadInputException(\"\u0027\" + inputArr[0] + \"\u0027 requires 1 or more arguments.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            String description \u003d inputArr[1].trim(); //Might need to catch empty string exceptions?"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            if (!description.isBlank()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                command \u003d new FindCommand(CommandType.FIND, description);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "                command \u003d new Command();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                throw new BadInputException(\"Please enter the search description.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            command \u003d new Command(); //Bad Command"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            throw new BadInputException(\"Sorry, I don\u0027t recognise that input keyword!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Takes command string from the user and passes to the handleListInput method."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Also catches exceptions for invalid commands."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return A command object corresponding to the user\u0027s inputs."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public Command parse(String userInput) throws Exception {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        Command userCommand;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        //TODO: Make this a do-while that waits for a good input?"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            userCommand \u003d handleListInput(userInput);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            throw new NumberFormatException(\"Please input only an integer after the command.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        } catch (Exception e) { // Redundant code, but demonstrates throwing all other exceptions higher"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 98,
      "Raghav Bhardwaj": 32,
      "Deculsion": 4,
      "Raghav": 24
    }
  },
  {
    "path": "src/main/java/eggventory/StockType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * Manages the list of (different types of classes),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * including all the methods to modify the list:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * Adding each of the 3 types, print, delete, mark as done, search."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class StockType {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private ArrayList\u003cStock\u003e stockList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public StockType(ArrayList\u003cStock\u003e savedFile) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        stockList \u003d savedFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public StockType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        stockList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Returns the entire stockList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return the stockList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public ArrayList\u003cStock\u003e getStockList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return stockList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Gets the number of stocks in the stockList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return the number of stocks in the stockList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return stockList.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Adds a stock to the stockList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @return True if item was added successfully."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public boolean addStock(String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        stockList.add(new Stock(stockType, stockCode, quantity, description));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Returns a stock of the user\u0027s choice."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param i the index of the stock selected."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public Stock getStock(int i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return stockList.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Deletes a stock of the user\u0027s choice."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param i the index of the task to be deleted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void deleteStock(int i) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        stockList.remove(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Looks for undone deadlines within the next 5 Days and prints the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private void printReminders() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        Date now \u003d calendar.getTime();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        long millisInFiveDays \u003d 5 * 24 * 60 * 60 * 1000;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        for (Stock stock : stockList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            if (stock instanceof Deadline \u0026\u0026 !stock.getIsDone()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                Deadline deadline \u003d (Deadline) stock;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                long timeDifference \u003d deadline.getDate().getTime().getTime() - now.getTime();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                if (timeDifference \u003c\u003d millisInFiveDays \u0026\u0026 timeDifference \u003e 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                    stock.printTaskDetails();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 14,
      "Raghav Bhardwaj": 73
    }
  },
  {
    "path": "src/main/java/eggventory/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.commands.AddCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Handles reading and writing the stockList to file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Converts save file details into Stocks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public StockType load() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        StockType savedList \u003d new StockType();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        File f \u003d new File(filePath); //Create a File for the given file path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            Scanner s \u003d new Scanner(f); //Create a Scanner using the File as the source"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                String itemRaw \u003d s.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                String[] item \u003d itemRaw.split(\"/\", 0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                AddCommand cmd \u003d new AddCommand(CommandType.ADD, item[0], item[1],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                        Integer.parseInt(item[2]), item[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                cmd.execute(savedList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            System.out.println(\"Save file not found. New list will be created instead.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        //} catch (BadInputException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            //System.out.println(\"Save file format wrong. Please fix it manually or use a new list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            System.out.println(\"Save file cannot be read. Please fix it manually or use a new list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return savedList; //Returns a StockType."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Saves existing StockType to a text file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void save(ArrayList\u003cStock\u003e stockList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        StringBuilder tasksToSave \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        int max \u003d stockList.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        for (int i \u003d 0; i \u003c max; i++) { //index starts from 0."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            tasksToSave.append(stockList.get(i).saveDetailsString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        String taskListToSave \u003d tasksToSave.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            writeToFile(taskListToSave);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            System.out.println(\"Something went wrong saving the file :(\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 1,
      "Raghav Bhardwaj": 78
    }
  },
  {
    "path": "src/main/java/eggventory/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * Manages the UI of Eggventory."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Prints intro and exit messages, and the standard newline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Prints eggventory introduction message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        String logo \u003d \"  _      __    __                     __         ____         _   __         __               \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                + \" | | /| / /__ / /______  __ _  ___   / /____    / __/__ ____ | | / /__ ___  / /____  ______ __\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                + \" | |/ |/ / -_) / __/ _ \\\\/  \u0027 \\\\/ -_) / __/ _ \\\\  / _// _ `/ _ `/ |/ / -_) _ \\\\/ __/ _ \\\\/\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                + \" __/ // /\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                + \" |__/|__/\\\\__/_/\\\\__/\\\\___/_/_/_/\\\\__/  \\\\__/\\\\___/ /___/\\\\_, /\\\\_, /|___/\\\\__/_//_/\\\\__/\\\\___/_/\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                + \"  \\\\_, / \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                + \"                                                  /___//___/                           /___/  \\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        print(\"Hello! I\u0027m Humpty Dumpty\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Primary function that handles printing to the CLI."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param printString String to print (passed in from external objects accessing UI)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void print(String printString) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        printNewLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        String[] linesToPrint \u003d printString.split(\"\\n\", 0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        for (int i \u003d 0; i \u003c linesToPrint.length; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            System.out.println(addIndent() + linesToPrint[i]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        printNewLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Prints error message to CLI."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        print(\"Parser error: \\n\" + e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Prints the EggVentory exit message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        print(\"Bye! Your stocks are safe with me!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public static String addIndent() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return \"        \";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * Prints the standard newline."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private void printNewLine() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        System.out.println(addIndent() + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 37,
      "Raghav Bhardwaj": 32,
      "Rishab Patwari": 10
    }
  },
  {
    "path": "src/main/java/eggventory/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.items.DateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * Command objects for adding Stocks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String stockType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String stockCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private int quantity;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private DateTime[] dateTimes \u003d new DateTime[2];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Initialises all the attributes of the details of the stock to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param type The type of command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param stockType The category/type of the stock."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param stockCode The unique identifier code for the stock."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param quantity The total quantity of the stock."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param description User input description of the task to add."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public AddCommand(CommandType type, String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.stockType \u003d stockType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.stockCode \u003d stockCode;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.quantity \u003d quantity;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Executes the actual adding of stock to the StockType."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param list StockType to add the item to."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param ui Ui object to display output to."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param storage Storage object to handle saving and loading of any data."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        list.addStock(stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        ui.print(\"I have added the following stock to your list:\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                + list.getStock(list.getSize() - 1).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        storage.save(list.getStockList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Executes the actual adding of task to the StockType."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Only to be used by Storage.load() - handles the adding without showing UI output."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * @param list StockType to add the item to."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        list.addStock(stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 8,
      "Raghav Bhardwaj": 53
    }
  },
  {
    "path": "src/main/java/eggventory/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * This is an abstract class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * Command objects are sent from the Parser and executed with StockType or Ui."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Commands include: add, delete, find, list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    protected CommandType type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    //Currently the default constructor is a bad command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.type \u003d CommandType.BAD;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public Command(CommandType type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public CommandType getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Prints the list or saves the list and sends exit message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Might need to separate into bye and list commands."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list, Ui ui, Storage storage) throws BadInputException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        //if (type \u003d\u003d CommandType.REMINDER) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        //    list.printReminders();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        if (type \u003d\u003d CommandType.BYE) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            storage.save(list.getStockList());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            ui.printExitMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 34,
      "Raghav Bhardwaj": 13
    }
  },
  {
    "path": "src/main/java/eggventory/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Command objects for deleting stocks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Requires the index (as listed by the system) of the stock. //TODO: Change this to the stock code."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public DeleteCommand(CommandType type, int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.itemIndex \u003d index - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list, Ui ui, Storage storage) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            Stock item \u003d list.getStock(itemIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            list.deleteStock(itemIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            ui.print(\"Okay! I\u0027ve deleted this stock:\\n\" + item.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            storage.save(list.getStockList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            throw new IndexOutOfBoundsException(\"That stock doesn\u0027t exist! Please check\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "                    + \" the available stocks again: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 8,
      "Raghav Bhardwaj": 29
    }
  },
  {
    "path": "src/main/java/eggventory/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Currently not in use."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * TODO: Modify this into the loan or lost command?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public DoneCommand(CommandType type, int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.itemIndex \u003d index - 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list, Ui ui, Storage storage) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            //list.getStock(itemIndex).markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            ui.print(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                    + list.getStock(itemIndex).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            throw new IndexOutOfBoundsException(\"That task doesn\u0027t exist! Please check\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                    + \" the available tasks again: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 4,
      "Raghav Bhardwaj": 27
    }
  },
  {
    "path": "src/main/java/eggventory/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Command objects for searching for stocks by name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private String search;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public FindCommand(CommandType type, String search) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.search \u003d search;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Allows the user to search for stock descriptions that match a given string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Prints the list of stocks that match. Alternatively prints a message if none are found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        int max \u003d list.getSize();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        for (int i \u003d 0; i \u003c max; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "            if (list.getStock(i).getDescription().contains(search)) { //Only search the description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                // Adding task to print with associated index to final string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                // TODO: Change to stringbuilder - Raghav"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                listString +\u003d (i + 1 + \". \" + list.getStock(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            ui.print(\"Sorry, I could not find any tasks containing the description \\\"\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                    + search + \"\\\".\\nPlease try a different search string.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            ui.print(listString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 21,
      "Raghav Bhardwaj": 25
    }
  },
  {
    "path": "src/main/java/eggventory/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public ListCommand(CommandType type) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        int max \u003d list.getSize();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        if (max \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            ui.print(\"The list is currently empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        for (int i \u003d 0; i \u003c max; i++) { //Index starts from 0."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            // TODO: Change to StringBuilder - Raghav"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "            listString +\u003d (i + 1 + \". \" + list.getStock(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        ui.print(listString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 28
    }
  },
  {
    "path": "src/main/java/eggventory/commands/NumCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Currently not used."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class NumCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private int itemIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public NumCommand(CommandType type, int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.itemIndex \u003d index - 1; //Because of 0-indexing, user\u0027s request for item 1 means item 0."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public int getItemIndex() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return itemIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute(StockType list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 21,
      "Raghav Bhardwaj": 6
    }
  },
  {
    "path": "src/main/java/eggventory/enums/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    ADD, TODO, DEADLINE, EVENT, BYE, LIST, REMINDER, DONE, DELETE, FIND, BAD"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 5
    }
  },
  {
    "path": "src/main/java/eggventory/enums/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 1,
      "Deculsion": 4
    }
  },
  {
    "path": "src/main/java/eggventory/exceptions/BadInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class BadInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public BadInputException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/java/eggventory/exceptions/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " * Unsure of how to use DukeExceptions properly."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/java/eggventory/exceptions/InsufficientInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class InsufficientInfoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public InsufficientInfoException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 1,
      "-": 8
    }
  },
  {
    "path": "src/main/java/eggventory/items/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//TODO: Import an existing datetime class or write a better one."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Stores date and time information by field - day, month, year, hour, minute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Allows printing of a fancy formatted date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Uses a boolean variable to indicate if the date object has been properly initialised."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean valid;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    private Calendar calendar;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * DateTime constructor. Converts input string into attributes of the date and time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateAndTime String representing date and time in format of \"DD/MM/YYYY HHMM\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public DateTime(String dateAndTime) throws BadInputException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] dateTimeToken \u003d dateAndTime.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] dateToken \u003d dateTimeToken[0].split(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            String time \u003d dateTimeToken[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.DATE, Integer.parseInt(dateToken[0])); //day of the month"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.MONTH, Integer.parseInt(dateToken[1]) - 1); // jan is 0, dec is 11"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.YEAR, Integer.parseInt(dateToken[2]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            // set with the first 2 elements - the hour"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(time) / 100);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            // set with the last 2 elements, the minutes"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.MINUTE, Integer.parseInt(time) % 100);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            // set seconds to be 0 by default"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "            this.calendar \u003d calendar;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new BadInputException(\"Improper datetime. Correct format: dd/mm/yyyy hhmm.\\nEnter task again.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the Date in the DateTime object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Time in Calendar-Date format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public Calendar getAt() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        return calendar;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //     * Sets the calendar date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //     * @param date to be set."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //    public void setDate(Date date) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //        at \u003d (date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Returns string of the stored date in the default Date.java format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String returnFormattedDate() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        SimpleDateFormat formatted \u003d new SimpleDateFormat(\"EEE MMM d yyyy K:mm a\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        String output \u003d formatted.format(calendar.getTime());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        return (output);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Datetime in the format of \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        SimpleDateFormat formatted \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        return formatted.format(calendar.getTime());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 1,
      "Raghav Bhardwaj": 2,
      "Deculsion": 6,
      "Rishab Patwari": 17,
      "-": 58
    }
  },
  {
    "path": "src/main/java/eggventory/items/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * In addition to the deadline and done status (inherited from Stock),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * the Deadline has a doByDate that is represented by a date class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * The save and print strings have been overridden to show more information."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private DateTime doByDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Deadline object has a \"by\" string as well as a Date object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public Deadline(String description, DateTime doByDate) throws BadInputException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        super(description, TaskType.DEADLINE); //Using the Stock constructor. isDone is set to false."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.doByDate \u003d  doByDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String getDoByDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return doByDate.returnFormattedDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public Calendar getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return doByDate.getAt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return super.saveDetailsString() + \"/\" + doByDate.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return super.toString() + \" (by: \" + doByDate.returnFormattedDate() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 29,
      "Raghav Bhardwaj": 5,
      "Deculsion": 3,
      "yanprosobo": 4,
      "Rishab Patwari": 1
    }
  },
  {
    "path": "src/main/java/eggventory/items/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * In addition to the deadline and done status (inherited from Stock),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * the Event has a start time (and later, end time) that is represented by a date class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * The save and print strings have been overridden to show more information."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private DateTime eventStartTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private DateTime eventEndTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Deadline object has a \"at\" string as well as a Date objects for start and end times."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public Event(String description, DateTime start, DateTime end) throws BadInputException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        super(description, TaskType.EVENT); //Using the Stock constructor. isDone is set to false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            this.eventStartTime \u003d start;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            this.eventEndTime \u003d end;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new BadInputException(\"Improper datetime. \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    + \"Correct format: event \u003cevent name\u003e /at \u003cevent start time\u003e to \u003cevent end time\u003e\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public Calendar getEndDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        return eventEndTime.getAt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public Calendar getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return eventStartTime.getAt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //    public Date getDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //        return eventStartTime.getAt();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav"
        },
        "content": "    public DateTime getEventStartTimeObj() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        return eventStartTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav"
        },
        "content": "    public DateTime getEventEndTimeObj() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav"
        },
        "content": "        return eventEndTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return super.saveDetailsString() + \"/\" + eventStartTime.toString() + \" to \" + eventEndTime.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return super.toString() + \" (at: \" + eventStartTime.returnFormattedDate()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + \" to \" + eventEndTime.returnFormattedDate() + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 24,
      "Raghav Bhardwaj": 5,
      "Deculsion": 8,
      "yanprosobo": 10,
      "Raghav": 9,
      "Rishab Patwari": 8
    }
  },
  {
    "path": "src/main/java/eggventory/items/Stock.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Represents a stock of a particular item in the inventory."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * A type of stock (eg. 560ohm resistor) may consist of many individual items (multiple resistors),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * but they are all considered interchangeable and are not individually identified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * Within a stock, some of the items may be marked as \u0027on loan\u0027, or \u0027lost\u0027."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * TODO: Finish up the comments on this class after finalising the glossary."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "public class Stock {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String stockType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String stockCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private int quantity;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private int loaned;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    private int lost;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * An stock is first added with its stockType, stockCode, description and quantity."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     * By default the loaned and lost numbers are 0."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public Stock(String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.stockType \u003d stockType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.stockCode \u003d stockCode;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.quantity \u003d quantity;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.loaned \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.lost \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Gets the name of the stock."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return the name of the stock."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Sets the name of the stock."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param description the name of the stock."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Gets the total number of this stock. Includes items lost and on loan."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return total the name of the stock."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public int getQuantity() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return quantity;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Sets the new total number of this stock. To be used by \u0027change\u0027 or \u0027qty\u0027 commands to modify the number."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param newTotal the new total number of items."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void setQuantity(int newTotal) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        this.quantity \u003d newTotal;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Gets the number of this stock that is on loan."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return loaned the number of loaned items."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public int getLoaned() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return loaned;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Sets the number of this stock on loan. To be used by the \u0027loan\u0027 command."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param loaned the number of items on loan."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void setLoaned(int loaned) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.loaned \u003d loaned;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Gets the number of this stock that is lost."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return lost the number of lost items."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public int getLost() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return lost;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Sets the number of this stock that have been lost. To be used by the \u0027lost\u0027 command."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @param lost the number of items lost."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void setLost(int lost) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        this.lost \u003d lost;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Calculates and returns the number of this stock available to the lab (not lost, not on loan)."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return the number of available items."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public int numAvailable() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return (quantity - loaned - lost);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Formats all stock details appropriately for Ui output."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * @return the stock details."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return stockType + \" | \" + stockCode + \" | \" + quantity + \" | \" + description;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        return stockType + \"/\" + stockCode + \"/\" + quantity + \"/\" + description;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    //TODO: Fix methods below for new UI.print() implementation."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Prints the complete details of all the items of this type."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Format example: 560ohm Resistors: 280 available. 100 on loan. 20 lost. (400 total.)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * To be used with the \u0027stock all\u0027 command."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void printAll() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        System.out.println(description + \": \" + numAvailable() + \" available. \" + loaned + \" on loan. \""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "                + lost + \" lost. (\" + quantity + \" total.)\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Prints the name and number of available items. Used as part of printing a list of available items."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Format example: 560ohm Resistors: 280"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * To be used with the \u0027stock\u0027 command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void printAvailable() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.out.println(description + \": \" + numAvailable() + \" available.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Prints the name and number of items on loan. Used as part of printing a list of items on loan."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Format example: 560ohm Resistors: 100"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * To be used with the \u0027stock loan\u0027 command."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void printLoan() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.out.println(description + \": \" + loaned + \" on loan.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Prints the name and number of lost items. Used as part of printing a list of lost items."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * Format example: 560ohm Resistors: 20"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     * To be used with the \u0027stock lost\u0027 command."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public void printLost() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.out.println(description + \": \" + lost + \" lost.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 117,
      "Raghav Bhardwaj": 36,
      "Rishab Patwari": 3
    }
  },
  {
    "path": "src/main/java/eggventory/items/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Task is an abstract class that stores the description and done status of a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Is extended by Todo, Deadline and Event classes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Task constructor sets a blank task by default."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d \"None\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * All tasks contain a description and isDone status, and also belong to a type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        return (isDone ? \"[/] \" : \"[X] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    // TODO: Deprecated, remove in future commit"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printTaskDetails() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method that returns a string with the details for saving to file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a string which contains the details in a fixed format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            taskType \u003d \"D\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (this.type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            taskType \u003d \"T\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            taskType \u003d \"E\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        return taskType + \"/\" + done + \"/\" + description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //Returns string in the style of \"T/1/read book\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Marks the task as done. This occurs one-way; the task cannot be unmarked."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public Calendar getDate() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public Calendar getEndDate() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Formats all task details appropriately for Ui output."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the task details."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            taskType \u003d \"[D] \";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (this.type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            taskType \u003d \"[T] \";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            taskType \u003d \"[E] \";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return taskType + getStatusIcon() + description; //eg. [✓] read book"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 4,
      "Deculsion": 3,
      "Rishab Patwari": 9,
      "-": 92
    }
  },
  {
    "path": "src/main/java/eggventory/items/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * The least detailed task is the todo,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " * which consists of a deadline and done status."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": " * It is effectively the (parent) Stock class with a different print and save string."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private int duration \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        super(description, TaskType.TODO); //Using the Stock constructor. isDone is set to false."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public Todo(String description, int duration) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "        return super.saveDetailsString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        if (duration \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            result \u003d super.toString() + \" (needs \" + duration + \" hours)\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            result \u003d super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rebecca Oei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rebecca Oei": 19,
      "Raghav Bhardwaj": 4,
      "Deculsion": 16
    }
  },
  {
    "path": "src/test/java/eggventory/StockTypeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "class StockTypeTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getStockList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        ArrayList\u003cStock\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testList.add(new Stock(\"Resistor\", \"R50\", 500, \"Test Resistor\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        StockType testStockType \u003d new StockType(testList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(testList, testStockType.getStockList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        StockType testStockType \u003d new StockType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(0,testStockType.getSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStockType.addStock(\"Resistor\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(1,testStockType.getSize());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void addStock() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        StockType testStockType \u003d new StockType();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertTrue(testStockType.addStock(\"Resistor\", \"R50\", 500,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                \"Test Resistor\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getStock() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        StockType testStockType \u003d new StockType();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStockType.addStock(\"Resistor\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test Resistor\", testStockType.getStock(0).getDescription());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void deleteStock() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        ArrayList\u003cStock\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testList.add(new Stock(\"Resistor\", \"R50\", 500, \"Test Resistor\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        StockType testStockType \u003d new StockType(testList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(1,testStockType.getSize());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStockType.deleteStock(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(0,testStockType.getSize());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishab Patwari": 57
    }
  },
  {
    "path": "src/test/java/eggventory/commands/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    private OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    private PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    private StockType testStockType \u003d new StockType();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    private Ui testUi \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    private Storage testStorage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    private String indent \u003d \"        \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //        System.setOut(ps);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //        new AddCommand(CommandType.ADD, \"testStockType\", \"t0000\", 100,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //                \"testDescription\").execute(testStockType, testUi, testStorage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //        assertEquals(indent + \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //                + indent + \"I have added the following stock to your list:\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //                + indent + \"testStockType | t0000 | 100 | testDescription\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        //                + indent + \"____________________________________________________________\\n\", os.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void testExecute() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        StockType testList \u003d new StockType();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new AddCommand(CommandType.ADD, \"testStockType\", \"t0000\", 100,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                \"testDescription\").execute(testList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"testDescription\",testList.getStock(0).getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public void execute_addTodoTask_success() throws BadInputException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        StockType newList \u003d new StockType();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new AddCommand(CommandType.TODO, \"Test TODO\", \"\").execute(newList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        assertEquals(\"Test TODO\", newList.getStock(0).getDescription());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public void execute_addDeadlineTask_success() throws BadInputException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        StockType newList \u003d new StockType();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new AddCommand(CommandType.DEADLINE, \"Test DEADLINE\", \"15/12/2019 1500\").execute(newList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        SimpleDateFormat formatted \u003d new SimpleDateFormat(\"EEE MMM d yyyy K:mm a\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        String startDate \u003d formatted.format(newList.getStock(0).getDate().getTime());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        assertEquals(\"Test DEADLINE\", newList.getStock(0).getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Sun Dec 15 2019 3:00 PM\", startDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    public void execute_addEventTask_success() throws BadInputException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        StockType newList \u003d new StockType();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new AddCommand(CommandType.EVENT, \"Test EVENT\", \"15/12/2019 1500 to 17/12/2019 1500\").execute(newList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        SimpleDateFormat formatted \u003d new SimpleDateFormat(\"EEE MMM d yyyy K:mm a\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        String startDate \u003d formatted.format(newList.getStock(0).getDate().getTime());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        String endDate \u003d formatted.format(newList.getStock(0).getEndDate().getTime());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        assertEquals(\"Test EVENT\", newList.getStock(0).getDescription());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Sun Dec 15 2019 3:00 PM\", startDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Tue Dec 17 2019 3:00 PM\", endDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 15,
      "Rishab Patwari": 61
    }
  },
  {
    "path": "src/test/java/eggventory/commands/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "class CommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    StockType newList \u003d new StockType();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    Storage storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getTypeDefault() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.BAD, new Command().getType());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.TODO, new Command(CommandType.TODO).getType());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.DEADLINE, new Command(CommandType.DEADLINE).getType());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.EVENT, new Command(CommandType.EVENT).getType());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.REMINDER, new Command(CommandType.REMINDER).getType());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.DONE, new Command(CommandType.DONE).getType());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.LIST, new Command(CommandType.LIST).getType());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(CommandType.BYE, new Command(CommandType.BYE).getType());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void execute_printList_empty() throws BadInputException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new Command(CommandType.LIST).execute(newList, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"The list is currently empty.\\n\", os.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void execute_printList_success() throws BadInputException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new AddCommand(CommandType.TODO, \"Test TODO\", \"\").execute(newList, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new Command(CommandType.LIST).execute(newList, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"1. [T] [X] Test TODO\\n\", os.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 8,
      "Rishab Patwari": 45
    }
  },
  {
    "path": "src/test/java/eggventory/commands/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    Storage storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    StockType stockType \u003d new StockType();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    public void execute_Task_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        stockType.addItem(TaskType.TODO, \"Test FIND\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        new FindCommand(CommandType.FIND, \"FIND\").execute(stockType, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "        assertEquals(\"1. [T] \" + stockType.getTask(0).getStatusIcon() + \"Test FIND\", os.toString().trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 26
    }
  },
  {
    "path": "src/test/java/eggventory/commands/NumCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.StockType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "import eggventory.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "class NumCommandTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    Storage storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    StockType newList \u003d new StockType();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void execute_deleteTask_success() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        newList.addItem(TaskType.TODO, \"Test FIND\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        new NumCommand(CommandType.DELETE, 1).execute(newList, ui, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Okay! I\u0027ve deleted this task: Test FIND\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "                + \"The task was not completed.\", os.toString().trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void execute_deleteTask_notFound() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "            newList.addItem(TaskType.TODO, \"Test FIND\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "            new NumCommand(CommandType.DELETE, 2).execute(newList, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void execute_markAsDone_success() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        newList.addItem(TaskType.DEADLINE, \"Test DEADLINE /by 15/12/2019 1500\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        newList.markTaskAsDone(0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(true,newList.getTask(0).getIsDone());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void execute_markAsDone_notFound() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "            newList.addItem(TaskType.DEADLINE, \"Test DEADLINE /by 15/12/2019 1500\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "            newList.markTaskAsDone(1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "            assertEquals(\"Index 1 out of bounds for length 1\", e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav Bhardwaj"
        },
        "content": "    */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav Bhardwaj": 7,
      "Rishab Patwari": 46
    }
  },
  {
    "path": "src/test/java/eggventory/items/StockTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "class StockTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    Stock testStock \u003d new Stock(\"Test\", \"R0000\", 100, \"Test Stock\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test Stock\", testStock.getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void setDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setDescription(\"SetDescription() Test\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"SetDescription() Test\", testStock.getDescription());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getQuantity() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(100,testStock.getQuantity());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void setQuantity() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setQuantity(500);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(500,testStock.getQuantity());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getLoaned() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(0,testStock.getLoaned());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void setLoaned() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setLoaned(50);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(50,testStock.getLoaned());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void getLost() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(0,testStock.getLost());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void setLost() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setLost(50);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(50,testStock.getLost());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void numAvailable() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(100,testStock.numAvailable());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setLoaned(50);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setLost(50);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(0,testStock.numAvailable());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test | R0000 | 100 | Test Stock\", testStock.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void saveDetailsString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test/R0000/100/Test Stock\", testStock.saveDetailsString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void printAll() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.printAll();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test Stock: 100 available. 0 on loan. 0 lost. (100 total.)\\n\", os.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void printAvailable() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.printAvailable();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test Stock: 100 available.\\n\", os.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void printLoan() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setLoaned(50);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.printLoan();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test Stock: 50 on loan.\\n\", os.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    void printLost() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.setLost(50);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        testStock.printLost();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "        assertEquals(\"Test Stock: 50 lost.\\n\", os.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Rishab Patwari"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rishab Patwari": 107
    }
  }
]
