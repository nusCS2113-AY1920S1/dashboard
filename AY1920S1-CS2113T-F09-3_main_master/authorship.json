[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d\u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    archiveBaseName \u003d \"eggventory\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "group \u0027seedu.eggventory\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    mainClassName \u003d \"eggventory.Start\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 8,
      "-": 39
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "rootProject.name \u003d \u0027eggventory\u0027"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 1
    }
  },
  {
    "path": "src/main/java/eggventory/Eggventory.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.parsers.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": " * Eggventory is a task list that supports 3 types of classes - Todos, deadlines and events."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Tasks can be added, marked as done, searched for, and deleted."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Tasks are loaded from and saved to file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Eggventory implements Runnable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private static StockList stockList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private static Cli cli;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Eggventory does somethings."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param filePath which stores path of persistent storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Eggventory(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        cli \u003d new Cli();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        stockList \u003d storage.load(); //Will always return the right object even if empty."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        cli.printIntro();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            userInput \u003d cli.read();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                Command command \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                command.execute(stockList, cli, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                if (command.getType() \u003d\u003d CommandType.BYE) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                cli.printError(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 25,
      "Deculsion": 3,
      "cyanoei": 19,
      "-": 1,
      "patwaririshab": 3
    }
  },
  {
    "path": "src/main/java/eggventory/Start.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Gui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Start {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Main function that sets the save path and runs Eggventory."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Starts the CLI and GUI in separate threads so they can run simultaneously."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String filePath \u003d currentDir + \"/data/saved_tasks.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        Thread cliThread \u003d new Thread(new Eggventory(filePath));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        cliThread.start();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        Application.launch(Gui.class, args);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 20
    }
  },
  {
    "path": "src/main/java/eggventory/StockList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.Property;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.items.StockType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "public class StockList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private ArrayList\u003cStockType\u003e stockList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Constructs a new StockList object using an already existing stockList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param stockList ArrayList\u003c\u003e of StockType objects. There should already be a default \"Uncategorised\" StockType."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public StockList(ArrayList\u003cStockType\u003e stockList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.stockList \u003d stockList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Constructs a new StockList object with one default StockType, \"Uncategorised\"."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public StockList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.stockList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.stockList.add(new StockType(\"Uncategorised\", false));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the whole stockList. Note: technically doing using this method will violate OOP."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public ArrayList\u003cStockType\u003e getList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stockList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Adds a new StockType to the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param name Name of new stocktype being added."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public void addStockType(String name) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        stockList.add(new StockType(name, false));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Prints every stock within stocklist. Should only be called by Ui."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Deletes a StockType object, and all the stocks under it."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param name Name of StockType to be deleted"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return The object if it was deleted, null if nothing waas deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public StockType deleteStockType(String name) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockType deleted;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (StockType stocktype : stockList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            if (stocktype.getName().equals(name)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                deleted \u003d stocktype;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                stockList.remove(stocktype);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                return deleted;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns a stockType from stockList if it exits else retuns a null StockType."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockType The unique string that identifies a stockType"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return stockType of stockList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public StockType getStockType(String stockType) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        StockType nullType \u003d new StockType(\"NULL\", true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (StockType stType : stockList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (stType.getName().equals(stockType)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return stType;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return nullType;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the total number of stockTypes in this stockList. Not to be confused with getStockQuantity."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the number of stockTypes."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getStockTypeQuantity() { //The number of stockTypes in the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stockList.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Adds a Stock to the specified StockType in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param stockType A String matching exactly the StockType to add the new Stock object under."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param stockCode A unique String that identifies the Stock."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param quantity Quantity of the stock."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param description A String describing the nature of the Stock object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public void addStock(String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (StockType listType: stockList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            if (listType.getName().equals(stockType)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                listType.addStock(stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        // \"Uncategorised\" is always the first element on stockList."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        stockList.get(0).addStock(\"Uncategorised\", stockCode, quantity, description);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Deletes a Stock object from a list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param stockCode The unique String that identifies a Stock."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the stock that was deleted, for printing purposes."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Stock deleteStock(String stockCode) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Stock deleted;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (StockType stockType : stockList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            deleted \u003d stockType.deleteStock(stockCode);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (deleted !\u003d  null) { //If something WAS deleted"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return deleted;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Edits a Stock object in a StockList."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param stockCode The unique String that identifies a Stock."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param property The attribute of the Stock that needs to be modified (Note: for now only 1)."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param newValue  The new value of the property we want to edit."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @return the stock before edits, for printing purposes."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public Stock setStock(String stockCode, Property property, String newValue) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        Stock beforeEdits;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        for (StockType stockType : stockList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            beforeEdits \u003d stockType.setStock(stockCode, property, newValue);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            if (beforeEdits !\u003d null) { //The corresponding stockCode was found in the StockList"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                return beforeEdits;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Edits a StockType object in a StockList. Note, the only edit to StockType in this version is to its name."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param stockTypeName The unique String that identifies a StockType."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param newName The newName of the StockType."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @return the stockType before editing, for printing purpose."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public StockType setStockType(String stockTypeName, String newName) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        StockType previous;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        for (StockType stockType : stockList) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            if (stockTypeName.equals(stockType.getName())) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                previous \u003d stockType;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                stockType.setName(newName);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                return previous;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Gets the total number of stocks in this stockList. This sums the number of stocks across stockTypes."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return the total number of stocks."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public int getStockQuantity() { //The number of stocks in the list, across all stockTypes."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        int total \u003d 0;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (StockType stockType : stockList) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            total +\u003d stockType.getQuantity();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return total;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //@@author cyanoei"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Determines if any of the stocks in this stockList have the same stockCode."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockCode the queried stockCode."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return true if a stock in this stockList has that stockCode and false if none of the stocks have this stockCode."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public boolean isExistingStockCode(String stockCode) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (StockType stockType : stockList) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (stockType.isExistingStockCode(stockCode)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     * Prints every stock within stocklist whose stocktype matches query. Should only be called by Cli."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     * @return The string of the stocklist whose stocktype matches query."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String findStock(String query) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String ret \u003d \"\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        for (StockType stocktype : stockList) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            if (stocktype.getName().equals(query)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                if (found \u003d\u003d false) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    ret +\u003d query + \" INVENTORY\\n\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    ret +\u003d \"------------------------\\n\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ret +\u003d stocktype.toString() + \"\\n\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     * Prints all the stocktypes that are currently handled by Eggventory. Should only be called by Cli."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     * @return The string of all the stocktypes"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toStocktypeString() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String ret \u003d \"\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        ret +\u003d \"QUERY INVENTORY\\n\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        for (StockType stocktype : stockList) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ret +\u003d \"------------------------\\n\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ret +\u003d stocktype.getName() + \"\\n\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints every stock within stocklist. Should only be called by Cli."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return The string of the stocklist."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String ret \u003d \"\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        ret +\u003d \"CURRENT INVENTORY\\n\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (StockType stocktype : stockList) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            ret +\u003d \"------------------------\\n\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            ret +\u003d stocktype.toString() + \"\\n\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Saves the list into a String."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return The String that will be directly saved into file."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        String details \u003d \"\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (StockType stocktype : stockList) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            details +\u003d stocktype.saveDetailsString() + \"\\n\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deculsion": 96,
      "yanprosobo": 34,
      "cyanoei": 84,
      "patwaririshab": 37
    }
  },
  {
    "path": "src/main/java/eggventory/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.add.AddStockCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Handles reading and writing the stockList to file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Converts save file details into a StockList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public StockList load() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockList savedList \u003d new StockList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        if (Files.notExists(Paths.get(filePath))) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                Files.createDirectory(Paths.get(\"data/\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                System.out.println(\"Unknown IO error when creating \u0027data/\u0027 folder.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            Scanner s \u003d new Scanner(f); //Create a Scanner using the File as the source"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                String itemRaw \u003d s.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                String[] item \u003d itemRaw.split(\"/\", 0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                AddStockCommand cmd \u003d new AddStockCommand(CommandType.ADD, item[0], item[1],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        Integer.parseInt(item[2]), item[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                /*Todo: In the future, call setMinimum here to update the minimum value (item[4]) instead of defaulting."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    Also applies for other optional params that we may add."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                cmd.execute(savedList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            System.out.println(\"Save file not found. New list will be created instead.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        //} catch (BadInputException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            //System.out.println(\"Save file format wrong. Please fix it manually or use a new list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            System.out.println(\"Save file cannot be read. Please fix it manually or use a new list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return savedList; //Returns a StockList."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Saves existing StockType to a text file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public void save(StockList stockList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            StringBuilder tasksToSave \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            int max \u003d stockList.getQuantity(); //The number of stockTypes in the stockList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            for (int i \u003d 0; i \u003c max; i++) { //Index starts from 0."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                tasksToSave.append(stockList.saveDetailsString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String taskListToSave \u003d stockList.saveDetailsString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            writeToFile(taskListToSave);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            System.out.println(\"Something went wrong saving the file :(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 73,
      "Deculsion": 5,
      "cyanoei": 15
    }
  },
  {
    "path": "src/main/java/eggventory/commands/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * This is an abstract class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": " * Command objects are sent from the Parser and executed with StockType or Cli."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Commands include: add, delete, find, list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected CommandType type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //Currently the default constructor is a bad command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.type \u003d CommandType.BAD;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Command(CommandType type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public CommandType getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the list or saves the list and sends exit message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Might need to separate into bye and list commands."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) throws BadInputException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        if (type \u003d\u003d CommandType.BYE) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            storage.save(list);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.printExitMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 9,
      "Deculsion": 2,
      "cyanoei": 33,
      "patwaririshab": 1
    }
  },
  {
    "path": "src/main/java/eggventory/commands/FindCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Command objects for searching for stocks by name."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String search;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public FindCommand(CommandType type, String search) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.search \u003d search;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Allows the user to search for stock descriptions that match a given string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the list of stocks that match. Alternatively prints a message if none are found."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //int max \u003d list.getQuantity(); Note by Rebs: changed variable name to be more specific."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int max \u003d list.getStockQuantity();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        for (int i \u003d 0; i \u003c max; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (list.getStock(i).getDescription().contains(search)) { //Only search the description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                // Adding task to print with associated index to final string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                // TODO: Change to stringbuilder - Raghav"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                listString +\u003d (i + 1 + \". \" + list.toString() + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            output \u003d \"Sorry, I could not find any tasks containing the description \\\"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    + search + \"\\\".\\nPlease try a different search string.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            output \u003d listString;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 21,
      "Deculsion": 4,
      "cyanoei": 23,
      "patwaririshab": 5
    }
  },
  {
    "path": "src/main/java/eggventory/commands/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String query;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public ListCommand(CommandType type, String query) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (this.query.equals(\"stock\")) { //list stock command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            //Outstanding case when list is empty"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            int max \u003d list.getStockQuantity();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            String listString \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            if (max \u003d\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                output \u003d \"The list is currently empty.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                cli.print(output);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            listString \u003d list.toString(); //Should contain all the stockTypes already, need not iterate."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            output \u003d listString;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } else if (this.query.equals(\"stocktype\")) { //list stocktype command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            String listString \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            listString \u003d list.toStocktypeString(); //Should contain all the stockTypes already, need not iterate."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            output \u003d listString;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } else { // list \u003cstocktype\u003e command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            String listString \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            listString \u003d list.findStock(this.query);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            output \u003d listString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            if (listString.equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                cli.print(\"Invalid command: No such stocktype. list stock / list stocktype/ list \u003cstocktype\u003e\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                cli.print(output);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 20,
      "Deculsion": 1,
      "yanprosobo": 23,
      "cyanoei": 4,
      "patwaririshab": 4
    }
  },
  {
    "path": "src/main/java/eggventory/commands/add/AddStockCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.items.DateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": " * Command objects for adding Stocks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class AddStockCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String stockType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String stockCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private int quantity;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private DateTime[] dateTimes \u003d new DateTime[2];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Initialises all the attributes of the details of the stock to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param type The type of command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param stockType The category/type of the stock."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param stockCode The unique identifier code for the stock."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param quantity The total quantity of the stock."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param description User input description of the task to add."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public AddStockCommand(CommandType type, String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.stockType \u003d stockType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.stockCode \u003d stockCode;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.quantity \u003d quantity;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Executes the actual adding of stock to the StockType."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param list StockType to add the item to."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param cli Cli object to display output to."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param storage Storage object to handle saving and loading of any data."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (list.isExistingStockCode(stockCode)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d String.format(\"Sorry, the stock code \\\"%s\\\" is already assigned to a stock in the system. \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + \"Please enter a different stock code.\", stockCode);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            list.addStock(stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            storage.save(list);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d String.format(\"Nice! I have successfully added the stock: StockType: %s StockCode: %s \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + \"Quantity: %d Description: %s\", stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Executes the actual adding of task to the StockType."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Only to be used by Storage.load() - handles the adding without showing UI output."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param list StockType to add the item to."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public void execute(StockList list) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        list.addStock(stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 51,
      "Deculsion": 3,
      "cyanoei": 16,
      "patwaririshab": 2
    }
  },
  {
    "path": "src/main/java/eggventory/commands/add/AddStockTypeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "public class AddStockTypeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private CommandType type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Creates a new StockType in a StorageList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param type The type of command this is."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param name Name of StockType to add."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public AddStockTypeCommand(CommandType type, String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Executes actual adding of StockType."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param list StockType to add the item to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param cli Cli object to display output to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param storage Storage object to handle saving and loading of any data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        list.addStockType(name);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        output \u003d String.format(\"Nice! I have successfully added the stocktype: %s\", name);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        cli.print(output);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 4,
      "Deculsion": 36
    }
  },
  {
    "path": "src/main/java/eggventory/commands/delete/DeleteStockCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "package eggventory.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Command objects for deleting stocks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Requires the index (as listed by the system) of the stock. //TODO: Change this to the stock code."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class DeleteStockCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private String stockCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public DeleteStockCommand(CommandType type, String stockCode) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.stockCode \u003d stockCode;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Stock deleted \u003d list.deleteStock(stockCode);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (deleted \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d String.format(\"Sorry, I cannot find the stock that stock code \\\"%s\\\" refers to. \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + \"Please try again.\", stockCode);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d String.format(\"I deleted the following stock: StockType: %s StockCode: %s Quantity: %d \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + \"Description: %s\", deleted.getStockType(), stockCode,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    deleted.getQuantity(), deleted.getDescription());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            storage.save(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 18,
      "Deculsion": 3,
      "cyanoei": 21
    }
  },
  {
    "path": "src/main/java/eggventory/commands/delete/DeleteStockTypeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "package eggventory.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.items.StockType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class DeleteStockTypeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String stockTypeName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public DeleteStockTypeCommand(CommandType type, String stockTypeName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.stockTypeName \u003d stockTypeName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (stockTypeName.equals(\"Uncategorised\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d \"Sorry, Uncategorised is the default category, and cannot be deleted.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        StockType deleted \u003d list.deleteStockType(stockTypeName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (deleted \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d String.format(\"Sorry, I cannot find the stock type \\\"%s\\\" refers to. \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + \"Please try again.\", stockTypeName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d String.format(\"I deleted the following stockType: %s. \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + \"I also deleted the following stocks of that type: \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + deleted.toString(), stockTypeName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            storage.save(list);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 5,
      "cyanoei": 41
    }
  },
  {
    "path": "src/main/java/eggventory/commands/edit/EditStockCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "package eggventory.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.Property;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": " * Command objects for editing stocks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": " * Requires the stockCode (as listed by the system) of the stock."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "public class EditStockCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private String stockCode;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private Property property; //Stores the property you want to edit"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private String newValue; //Stores the newValue you want"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Initializes all the attributes of the details of the stock to be edited."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param type The type of command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param stockCode The unique String that identifies a Stock."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param property The property of the Stock that is to be changed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param newValue The newValue of the property."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public EditStockCommand(CommandType type, String stockCode, Property property, String newValue) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        this.stockCode \u003d stockCode;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        this.property \u003d property;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        this.newValue \u003d newValue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Executes the actual editing of the stock\u0027s property."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param list StockList containing all the StockTypes."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param cli  Cli object to display output to."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param storage  Storage object to handle saving and loading of any data."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @return String of the output, for JUnit testing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (property \u003d\u003d Property.STOCKCODE \u0026\u0026 list.isExistingStockCode(newValue)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            output \u003d String.format(\"Sorry, the stock code \\\"%s\\\" is already assigned to a stock in the system. \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    + \"Please enter a different stock code.\", newValue);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            cli.print(output);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        Stock edited \u003d list.setStock(stockCode, property, newValue);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        output \u003d String.format(\"Awesome! I have successfully updated the following stock: %s | %s | %d | %s\\n\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                edited.getStockType(), edited.getStockCode(), edited.getQuantity(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                edited.getDescription());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        storage.save(list);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        cli.print(output);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 8,
      "patwaririshab": 53
    }
  },
  {
    "path": "src/main/java/eggventory/commands/edit/EditStockTypeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "package eggventory.commands.edit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.items.StockType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": " * Edits the attributes of StockType."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "public class EditStockTypeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private String stockType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private String newName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Initializes the attributes of StockType."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param type The type of Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param stockType The String that uniquely identifies a StockType."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param newValue The new value of the property of StockType."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public EditStockTypeCommand(CommandType type, String stockType, String newValue) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        this.stockType \u003d stockType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        this.newName \u003d newValue;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Executes the actual edit of the StockType attribute."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param list The StockList containing all the StockType."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param cli Cli object instance to display output to."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param storage Storage object to handle saving and loading of any data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        StockType edited \u003d list.setStockType(stockType, newName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        output \u003d String.format(\"Awesome! I have successfully updated the following stockType name: %s\\n\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                edited.getName());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        storage.save(list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        cli.print(output);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patwaririshab": 47
    }
  },
  {
    "path": "src/main/java/eggventory/commands/help/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "package eggventory.commands.help;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String options;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public HelpCommand(CommandType type) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.options \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public HelpCommand(CommandType type, String options) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        super(type);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String execute(StockList list, Cli cli, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String filename;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (this.options \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            filename \u003d \"\\\\src\\\\main\\\\java\\\\eggventory\\\\commands\\\\help\\\\Help.txt\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Path filePath \u003d Paths.get(System.getProperty(\"user.dir\"), filename);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                output \u003d Files.readString(filePath); //default UTF-8 charset."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                cli.print(output);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                cli.print(\"Error in reading help.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            switch (this.options) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                filename \u003d \"\\\\src\\\\main\\\\java\\\\eggventory\\\\commands\\\\help\\\\Helpadd.txt\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    Path filePath \u003d Paths.get(System.getProperty(\"user.dir\"), filename);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    output \u003d Files.readString(filePath); //default UTF-8 charset."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    cli.print(output);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    cli.print(\"Error in reading Helpadd.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"edit\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                filename \u003d \"\\\\src\\\\main\\\\java\\\\eggventory\\\\commands\\\\help\\\\Helpedit.txt\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    Path filePath \u003d Paths.get(System.getProperty(\"user.dir\"), filename);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    output \u003d Files.readString(filePath); //default UTF-8 charset."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    cli.print(output);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    cli.print(\"Error in reading Helpedit.txt\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                filename \u003d \"\\\\src\\\\main\\\\java\\\\eggventory\\\\commands\\\\help\\\\Helpdelete.txt\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    Path filePath \u003d Paths.get(System.getProperty(\"user.dir\"), filename);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    output \u003d Files.readString(filePath); //default UTF-8 charset."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    cli.print(output);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    cli.print(\"Error in reading Helpdelete.txt\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                cli.print(\"Your help command is not defined. Please enter \u0027help\u0027 for reference.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 79
    }
  },
  {
    "path": "src/main/java/eggventory/enums/CommandType.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    ADD, BYE, LIST, DONE, DELETE, FIND, EDIT, BAD, HELP"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 4,
      "patwaririshab": 1
    }
  },
  {
    "path": "src/main/java/eggventory/enums/Property.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "package eggventory.enums;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "public enum Property {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    STOCKCODE, QUANTITY, LOANED, LOST, DESCRIPTION, MINIMUM;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "patwaririshab": 5
    }
  },
  {
    "path": "src/main/java/eggventory/exceptions/BadInputException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class BadInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public BadInputException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/java/eggventory/exceptions/InsufficientInfoException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class InsufficientInfoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public InsufficientInfoException(String s) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 1,
      "-": 8
    }
  },
  {
    "path": "src/main/java/eggventory/items/CollectiveStock.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " Child of the Stock class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * A CollectiveStock (eg. 330ohm resistor) may consist of many individual items (multiple resistors),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * but they are all considered interchangeable and are not individually identified."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class CollectiveStock extends Stock {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * A stock is first added with its stockType, stockCode, description and quantity."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * By default the loaned and lost numbers are 0."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockType The category the stock belongs to."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockCode The unique code that identifies the stock. (eg. 500ohm resistors are called \u0027R500\u0027)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param quantity  The quantity (number of items) of this stock."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param description The name of the stock. (eg. 500ohm resistor, mini breadboard)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public CollectiveStock(String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //For now, all the methods we need are implemented by the Stock class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 25
    }
  },
  {
    "path": "src/main/java/eggventory/items/DateTime.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//TODO: Import an existing datetime class or write a better one."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Stores date and time information by field - day, month, year, hour, minute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Allows printing of a fancy formatted date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Uses a boolean variable to indicate if the date object has been properly initialised."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean valid;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Calendar calendar;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * DateTime constructor. Converts input string into attributes of the date and time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateAndTime String representing date and time in format of \"DD/MM/YYYY HHMM\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public DateTime(String dateAndTime) throws BadInputException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] dateTimeToken \u003d dateAndTime.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] dateToken \u003d dateTimeToken[0].split(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            String time \u003d dateTimeToken[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.DATE, Integer.parseInt(dateToken[0])); //day of the month"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.MONTH, Integer.parseInt(dateToken[1]) - 1); // jan is 0, dec is 11"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.YEAR, Integer.parseInt(dateToken[2]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            // set with the first 2 elements - the hour"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(time) / 100);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            // set with the last 2 elements, the minutes"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.MINUTE, Integer.parseInt(time) % 100);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            // set seconds to be 0 by default"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            this.calendar \u003d calendar;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new BadInputException(\"Improper datetime. Correct format: dd/mm/yyyy hhmm.\\nEnter task again.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the Date in the DateTime object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Time in Calendar-Date format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public Calendar getAt() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return calendar;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //     * Sets the calendar date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //     * @param date to be set."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //    public void setDate(Date date) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //        at \u003d (date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Returns string of the stored date in the default Date.java format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String returnFormattedDate() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        SimpleDateFormat formatted \u003d new SimpleDateFormat(\"EEE MMM d yyyy K:mm a\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String output \u003d formatted.format(calendar.getTime());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return (output);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Datetime in the format of \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        SimpleDateFormat formatted \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return formatted.format(calendar.getTime());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 2,
      "Deculsion": 6,
      "-": 60,
      "cyanoei": 3,
      "patwaririshab": 13
    }
  },
  {
    "path": "src/main/java/eggventory/items/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * An item of unique stock. Has its own index (unique among items of that stock), loan and lost status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private boolean loaned;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private boolean lost;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Item constructor. By default the item is neither on loan nor lost."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param index The unique index of the item."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Item(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        loaned \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        lost \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the unique index of the item."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return The index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns true if the item is on loan, false if it is not."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return The loan status."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public boolean isLoaned() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return loaned;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Updates the loan status of the item."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param loaned Whether the item is on loan."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void setLoaned(boolean loaned) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.loaned \u003d loaned;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns true if the item is lost, false if it is not."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return The lost status."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public boolean isLost() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return lost;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Updates the lost status of the item."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param lost Whether the item is lost."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void setLost(boolean lost) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.lost \u003d lost;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns the status of the item if on loan."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return a string (for printing) indicating if it is on loan."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String loanedString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (isLoaned()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"on loan\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"-\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns the status of the item if lost."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return a string (for printing) indicating if it is lost."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String lostString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (isLost()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"lost\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"-\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns the status of the item if on loan."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return a string (for printing) indicating if it is on loan."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String loanedSaveString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (isLoaned()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns the status of the item if lost."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return a string (for printing) indicating if it is lost."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String lostSaveString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (isLost()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Formats item details appropriately for Cli output. (Only for output of a single UniqueStock.)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the item details string."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return index + \" | \" + loanedString() + \" | \" + lostString();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Formats all item details appropriately to be saved to file. Less detailed than the printing string."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the string to save."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return index + \" | \" + loanedSaveString() + \" | \" + lostSaveString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 1,
      "cyanoei": 126
    }
  },
  {
    "path": "src/main/java/eggventory/items/Stock.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.Property;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * An abstract class representing a type of item that the lab keeps and is able to loan out."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Children classes are CollectiveStock and UniqueStock."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * A stock is first added with its stockType, stockCode, description and quantity."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Within a stock, some of the items may be marked as \u0027on loan\u0027, or \u0027lost\u0027."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * TODO: Finish up the comments on this class after finalising the glossary."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Stock {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String stockType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String stockCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected int quantity;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int loaned;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int lost;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private int minimum; //Minimum quantity the lab should maintain."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //private int loanLimit; //Maximum quantity an individual can loan. To implement in the future."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * An stock is first added with its stockType, stockCode, description and quantity."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * By default the loaned and lost numbers are 0. They can be updated later."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * By default the minimum quantity is 0. This can be updated later."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockType The category the stock belongs to."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockCode The unique code that identifies the stock. (eg. 500ohm resistors are called \u0027R500\u0027)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param quantity The quantity (number of items) of this stock."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param description The name of the stock. (eg. 500ohm resistor, mini breadboard."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Stock(String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.stockType \u003d stockType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.stockCode \u003d stockCode;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.quantity \u003d quantity;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.loaned \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.lost \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.minimum \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the stock type (category) of the stock."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the stock type."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getStockType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stockType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //Should not allow updating of stockType for now (so no setter)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /** Gets the stock code."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the stock code."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getStockCode() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stockCode;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Changes the stock code (if there was an error in entry)."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockCode the new stock code"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void setStockCode(String stockCode) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.stockCode \u003d stockCode;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the name of the stock."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the name of the stock."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Sets the name of the stock."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param description the name of the stock."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //Note: The access to the quantity attribute might have to be changed in the future."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the total number of this stock. Includes items lost and on loan."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return total the total quantity of that stock."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public int getQuantity() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return quantity;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Sets the new total number of this stock. To be used by \u0027change\u0027 or \u0027qty\u0027 commands to modify the number."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param newTotal the new total number of items."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    protected void setQuantity(int newTotal) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.quantity \u003d newTotal;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the number of this stock that is on loan."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return loaned the number of loaned items."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getLoaned() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return loaned;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Sets the number of this stock on loan. To be used by the \u0027loan\u0027 command."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param loaned the number of items on loan."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void setLoaned(int loaned) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.loaned \u003d loaned;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the number of this stock that is lost."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return lost the number of lost items."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getLost() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return lost;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Sets the number of this stock that have been lost. To be used by the \u0027lost\u0027 command."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param lost the number of items lost."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void setLost(int lost) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.lost \u003d lost;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the minimum quantity of stock that the lab wishes to maintain."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return The minimum quantity."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getMinimum() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return minimum;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Updates the minimum quantity of stock that the lab wishes to maintain. To be implemented in the future."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param minimum The minimum quantity."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void setMinimum(int minimum) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.minimum \u003d minimum;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Calculates and returns the number of this stock available to the lab (not lost, not on loan)."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the number of available items."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int numAvailable() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return (quantity - loaned - lost);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Formats all stock details appropriately for Cli output. Should only be called by Cli and StockType."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the stock details string."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return stockType + \" | \" + stockCode + \" | \" + quantity + \" | \" + description;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Formats all stock details appropriately to be saved to file."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the string to save."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stockType + \"/\" + stockCode + \"/\" + quantity + \"/\" + description + \"/\" + minimum;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    //TODO: Fix methods below for new UI.print() implementation."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the complete details of all the items of this type."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Format example: 560ohm Resistors: 280 available. 100 on loan. 20 lost. (400 total.)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * To be used with the \u0027stock all\u0027 command."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printAll() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        System.out.println(description + \": \" + numAvailable() + \" available. \" + loaned + \" on loan. \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                + lost + \" lost. (\" + quantity + \" total.)\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the name and number of available items. Used as part of printing a list of available items."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Format example: 560ohm Resistors: 280"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * To be used with the \u0027stock\u0027 command."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printAvailable() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.out.println(description + \": \" + numAvailable() + \" available.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the name and number of items on loan. Used as part of printing a list of items on loan."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Format example: 560ohm Resistors: 100"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * To be used with the \u0027stock loan\u0027 command."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printLoan() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.out.println(description + \": \" + loaned + \" on loan.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the name and number of lost items. Used as part of printing a list of lost items."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Format example: 560ohm Resistors: 20"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * To be used with the \u0027stock lost\u0027 command."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printLost() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.out.println(description + \": \" + lost + \" lost.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 33,
      "cyanoei": 176,
      "patwaririshab": 6
    }
  },
  {
    "path": "src/main/java/eggventory/items/StockType.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.Property;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deculsion"
        },
        "content": " * Manages the list of (different types of classes),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deculsion"
        },
        "content": " * including all the methods to modify the list:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deculsion"
        },
        "content": " * Adding each of the 3 types, print, delete, mark as done, search."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deculsion"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "public class StockType {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private ArrayList\u003cStock\u003e stocks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //private int quantity;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //private boolean isUniqueStock;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Creates a new StockType object. This overload should only be called from a Storage class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param name A unique name identifying the StockType."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param savedFile A fully constructed ArrayList of Stock objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public StockType(String name, ArrayList\u003cStock\u003e savedFile) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        stocks \u003d savedFile;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //quantity \u003d savedFile.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //isUniqueStock \u003d isUniqueStock();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Creates a new StockType object. StockType should only be instantiated from a StockList class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param name A unique name identifying the StockType."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param isUniqueStock true if the Stock objects are a UniqueStock."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public StockType(String name, boolean isUniqueStock) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.stocks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //this.quantity \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //this.isUniqueStock \u003d isUniqueStock;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Creates a new StockType object. StockType should only be instantiated from a StockList class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param name A unique name identifying the StockType."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public StockType(String name) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        this.stocks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //this.quantity \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //this.isUniqueStock \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Determines whether this StockType is a collection of UniqueStock or CollectiveStock."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        private boolean isUniqueStock() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                if (stock instanceof CollectiveStock) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Adds a stock to the stockList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return True if item was added successfully."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public boolean addStock(String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        stocks.add(new CollectiveStock(stockType, stockCode, quantity, description));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        //this.quantity++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Deletes a stock of the user\u0027s choice."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param stockCode The code of the stock to be deleted."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return true if some stockCode was found and the corresponding stock removed. false if none were found."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public Stock deleteStock(String stockCode) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        //While this is nice, we are unable to print a confirmation message of the stock deleted."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        //stocks.removeIf(stock -\u003e stock.getStockCode().equals(stockCode));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        Stock deletedStock;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            if (stockCode.equals(stock.getStockCode())) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                deletedStock \u003d stock; //Not sure if this is a copy or not. Assumes unique stockCodes."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                stocks.remove(stock);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                return deletedStock;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        //this.quantity--;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Accesses and sets a new stockCode of a stock."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param oldStockCode The current stockcode referring to this stock."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param newStockCode The new stockcode to change to."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public void setStockCode(String oldStockCode, String newStockCode) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            if (stock.getStockCode().equals(oldStockCode)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                stock.setStockCode(newStockCode);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Accesses and sets the quantity of a Stock."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param stockCode StockCode of the stock to change"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param quantity New quantity of the stock to change"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public void setStockQuantity(String stockCode, int quantity) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            if (stock.getStockCode().equals(stockCode)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                stock.setQuantity(quantity);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Accesses and sets the description of a Stock."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param stockCode StockCode of the stock to change"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @param description New description of the stock to change"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public void setStockDescription(String stockCode, String description) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            if (stock.getStockCode().equals(stockCode)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                stock.setDescription(description);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns the entire stockList."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the stockList."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public ArrayList\u003cStock\u003e getStockList() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stocks;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Returns a stock of the user\u0027s choice."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param i the index of the stock selected."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Stock getStock(int i) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stocks.get(i);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Returns a stock of the user\u0027s choice."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param stockCode String which uniquely identifies a Stock."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @return If Stock exits, the Stock otherwise null."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public Stock getStock(String stockCode) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        for (Stock stock: stocks) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            if (stockCode.equals(stock.getStockCode())) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                return stock;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the total number of stocks."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the number of stocks in this stockType."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public int getQuantity() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return stocks.size();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Gets the name of this stockType."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the name."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Updates the name of the StockType."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param newName String which uniquely identifies a StockType."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void setName(String newName) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        this.name \u003d newName;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Updates the values of properties of a Stock."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param stockCode String which uniquely identifies a Stock."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param property The attribute of a Stock we want to update."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param newValue The new value of the attribute to be updated."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @return The unedited Stock, for printing purpose."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public Stock setStock(String stockCode, Property property, String newValue) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        Stock uneditedStock;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        for (Stock stock: stocks) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            if (stockCode.equals(stock.getStockCode())) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                uneditedStock \u003d stock;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                switch (property) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                case STOCKCODE:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    stock.setStockCode(newValue);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                case QUANTITY:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    stock.setQuantity(Integer.parseInt(newValue));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                case LOANED:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    stock.setLoaned(Integer.parseInt(newValue));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                case LOST:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    stock.setLost(Integer.parseInt(newValue));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                case DESCRIPTION:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    stock.setDescription(newValue);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                case MINIMUM:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    stock.setMinimum(Integer.parseInt(newValue));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                return uneditedStock;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //@@author cyanoei"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Determines if any of the stocks in this stockType have the same stockCode."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockCode the queried stockCode."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return true if a stock in this stockType has that stockCode and false if none of the stocks have this stockCode."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public boolean isExistingStockCode(String stockCode) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (stock.getStockCode().equals(stockCode)) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return false; //If none of the stocks had the same code."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * A string of all the stock objects within this stocktype. Should only be called by Cli and StockList."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return A string list of all the stock objects and their details."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        String ret \u003d \"\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            ret +\u003d String.format(\"%d. \", i++) + stock.toString() + \"\\n\";"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * Creates a String of all Stock objects under this StockType."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     * @return The String of all Stock objects."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        String details \u003d \"\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        for (Stock stock : stocks) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            details +\u003d stock.saveDetailsString() + \"\\n\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 1,
      "Deculsion": 159,
      "cyanoei": 60,
      "patwaririshab": 61
    }
  },
  {
    "path": "src/main/java/eggventory/items/UniqueStock.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * A child of the Stock class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * A UniqueStock is a group of many items (eg. Arduino Uno) that share the same stockCode, description etc.,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * but are also tracked individually (eg. Arduino Uno #31)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * UniqueStock contains and manages a list (uniqueStockList) of its individual items."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class UniqueStock extends Stock {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private ArrayList\u003cItem\u003e uniqueStockList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * A stock is first added with its stockType, stockCode, description and quantity."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * For Unique stock, the quantity determines the number of Item objects created."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * By default, the index numbers of each UniqueStock are set as 1-quantity for now."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * By default, the loaned and lost numbers are 0."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockType   The category the stock belongs to."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param stockCode   The unique code that identifies the stock. (eg. 500ohm resistors are called \u0027R500\u0027)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param quantity    The quantity (number of items) of this stock."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param description The name of the stock. (eg. 500ohm resistor, mini breadboard)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public UniqueStock(String stockType, String stockCode, int quantity, String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super(stockType, stockCode, quantity, description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (int i \u003d 0; i \u003c quantity; i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            uniqueStockList.add(new Item(i + 1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Adds multiple unique items of this stock."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param addQuantity The number of unique stocks being added."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void addUniqueMultiple(int addQuantity) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int oldTotal \u003d uniqueStockList.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (int i \u003d 0; i \u003c addQuantity; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            uniqueStockList.add(new Item(oldTotal + i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super.setQuantity(oldTotal + addQuantity); //Updates the quantity"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Adds one item of a UniqueStock to the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param index The index number assigned to the item."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void addUnique(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        uniqueStockList.add(new Item(index));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super.setQuantity(super.getQuantity() + 1); //Increment quantity."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Removes one item of a UniqueStock from the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param index The index number assigned to the item."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void deleteUnique(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int size \u003d uniqueStockList.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int targetItem \u003d -1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (uniqueStockList.get(i).getIndex() \u003d\u003d index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                targetItem \u003d i;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (targetItem \u003d\u003d -1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            System.out.println(\"Sorry, that is not a valid index.\"); //Do something better than this. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            uniqueStockList.remove(targetItem);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        super.setQuantity(super.getQuantity() - 1); //Decrement quantity."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //Note: toString works as per normal, treating UniqueStock as a CollectiveStock."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //TODO: Provide a \u0027detailed\u0027 version of the print string to show individual items."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printUniqueStocks() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "       /*"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "           A header with all the usual info, maybe using toString."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "           return getStockType() + \"/\" + getStockCode() + \"/\" + getQuantity() +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                    \"/\" + getDescription() + \"/\" + getMinimum();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "           A list of all the items and their statuses. Using a for loop."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "           for (int i \u003d 0; i \u003c uniqueStockList.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "               System.out.println(uniqueStockList.get(i).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "           }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //TODO: Update both print and save method in Item class, and iterate through all of them here."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //  Should be similar to StockType printing methods."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Formats all stock details appropriately to be saved to file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the string to save."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String saveDetailsString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return getStockType() + \"/\" + getStockCode() + \"/\" + getQuantity()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"/\" + getDescription() + \"/\" + getMinimum();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        way to access individual stock"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        get/set id"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        add stock"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            update total quantity ++"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        update loan/lost status"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            update total loan/lost by +/-"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        delete stock"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            update total quantity --"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            check if min, give warning."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 120
    }
  },
  {
    "path": "src/main/java/eggventory/parsers/ParseAdd.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.add.AddStockCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.commands.add.AddStockTypeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.exceptions.InsufficientInfoException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "public class ParseAdd {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Processes the contents of an add stock command (everything after the words \"add\" and \"stock\")."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Splits up the input string into an array containing the various attributes of the stock being added."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Ignores leading/trailing whitespace between the first word and subsequent string,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * and between all commands\u0027 arguments."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param input String containing the attributes of the stock."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return an array consisting of StockType, StockCode, Quantity and Description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws InsufficientInfoException If any of the required attributes is missed out."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Command processAddStock(String input) throws InsufficientInfoException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] addInput \u003d input.split(\" +\", 4); //There are 4 attributes for now."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        if (addInput.length \u003c 4) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new InsufficientInfoException(\"Please enter stock information after the \u0027add\u0027 command in\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                    + \" this format:\\nadd stock \u003cStockType\u003e \u003cStockCode\u003e \u003cQuantity\u003e \u003cDescription\u003e\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } else if (addInput[0].isBlank() | addInput[1].isBlank() | addInput[2].isBlank() | addInput[3].isBlank()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new InsufficientInfoException(\"Please enter stock information after the \u0027add\u0027 command in\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                    + \" this format:\\nadd stock \u003cStockType\u003e \u003cStockCode\u003e \u003cQuantity\u003e \u003cDescription\u003e\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return new AddStockCommand(CommandType.ADD, addInput[0], addInput[1],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                Integer.parseInt(addInput[2]), addInput[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Processes the contents of an add stocktype command (everything after the words \"add\" and \"stocktype\")."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Splits up the input string into an array containing the various attributes of the stocktype being added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param input the user input describing the stockType to be added."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return the command to execute."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws InsufficientInfoException if there are insufficient details provided."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Command processAddStockType(String input) throws InsufficientInfoException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        String[] addInput \u003d input.split(\" +\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        if (addInput[0].isBlank()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            throw new InsufficientInfoException(\"Please enter stock information after the \u0027add\u0027 command in\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                    + \" this format:\\nadd stocktype \u003cStockType\u003e\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        return new AddStockTypeCommand(CommandType.ADD, addInput[0]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Processes a user command that began with the word \"add\"."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Used to differentiate between the different elements the user is able to add (stock, stocktype, loan),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * and create a command object to execute the adding of the element."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param inputString The input that was given after the word add."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *                    Describes what the user wants to add, and any other details."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return a Command object which will execute the desired command. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws InsufficientInfoException if not all compulsory attributes were specified."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Command parse(String inputString) throws InsufficientInfoException, BadInputException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] addInput \u003d inputString.split(\" +\", 2); //Obtains the first word of the input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Command addCommand;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        switch (addInput[0]) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        case \"stock\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            addCommand \u003d processAddStock(addInput[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        case \"stocktype\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            addCommand \u003d processAddStockType(addInput[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new BadInputException(\"Unexpected value: \" + addInput[0]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return addCommand;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 2,
      "Deculsion": 17,
      "cyanoei": 75
    }
  },
  {
    "path": "src/main/java/eggventory/parsers/ParseDelete.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.commands.delete.DeleteStockCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.commands.delete.DeleteStockTypeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.exceptions.InsufficientInfoException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "public class ParseDelete {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Processes a user command that began with the word \"add\"."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Used to differentiate between the different elements the user is able to add (stock, stocktype, loan),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * and create a command object to execute the adding of the element."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param inputString The input that was given after the word add."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *                    Describes what the user wants to add, and any other details."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return a Command object which will execute the desired command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws InsufficientInfoException if not all compulsory attributes were specified."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Command parse(String inputString) throws InsufficientInfoException, BadInputException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] deleteInput \u003d inputString.split(\" +\", 2); //Obtains the first word of the input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Command deleteCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        switch (deleteInput[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        case \"stock\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            deleteInput[1] \u003d deleteInput[1].strip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            deleteCommand \u003d new DeleteStockCommand(CommandType.DELETE, deleteInput[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        case \"stocktype\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            deleteCommand \u003d new DeleteStockTypeCommand(CommandType.DELETE, deleteInput[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new BadInputException(\"Unexpected value: \" + deleteInput[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return deleteCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deculsion": 6,
      "cyanoei": 37
    }
  },
  {
    "path": "src/main/java/eggventory/parsers/ParseEdit.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.commands.edit.EditStockCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.commands.edit.EditStockTypeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.Property;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.exceptions.InsufficientInfoException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "public class ParseEdit {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private Command processEditStock(String input) throws InsufficientInfoException, BadInputException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String[] addInput \u003d input.split(\" +\", 3); //\u003cstockCode\u003e \u003cproperty\u003e \u003cnewValue\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        if (addInput.length \u003c 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            throw new InsufficientInfoException(\"Please enter the edit information after the \u0027edit\u0027 command in\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    + \"this format:\\nedit Stock \u003cstockCode\u003e \u003cproperty\u003e \u003cnewValue\u003e\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        } else if (addInput[0].isBlank() | addInput[1].isBlank() | addInput[2].isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            throw new InsufficientInfoException(\"Please enter the edit information after the \u0027edit\u0027 command in\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                    + \"this format:\\nedit Stock \u003cstockCode\u003e \u003cproperty\u003e \u003cnewValue\u003e\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String stockCode \u003d addInput[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        switch (addInput[1]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"stockCode\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            return new EditStockCommand(CommandType.EDIT, stockCode, Property.STOCKCODE, addInput[2]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"quantity\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            return new EditStockCommand(CommandType.EDIT, stockCode,Property.QUANTITY, addInput[2]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"loaned\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            return new EditStockCommand(CommandType.EDIT, stockCode,Property.LOANED, addInput[2]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"lost\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            return new EditStockCommand(CommandType.EDIT, stockCode,Property.LOST, addInput[2]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"description\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            return new EditStockCommand(CommandType.EDIT, stockCode,Property.DESCRIPTION, addInput[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"minimum\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            return new EditStockCommand(CommandType.EDIT, stockCode,Property.MINIMUM, addInput[2]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            throw new BadInputException(\"The property you are trying to edit does not exist.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private Command processEditStockType(String input) throws InsufficientInfoException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String[] addInput \u003d input.split(\" +\", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return new EditStockTypeCommand(CommandType.EDIT, addInput[0], addInput[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * Parses the second word in edit command to determine whether edit stock or edit stocktype."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @param inputString String input stating the details of the edit command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @return The editCommand corresponding to either editStock or editStockType depending on the input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @throws InsufficientInfoException Exception when input has less parameters than required."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     * @throws BadInputException Exception when error in the command attribute (not stock or stocktype)."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public Command parse(String inputString) throws InsufficientInfoException, BadInputException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String[] addInput \u003d inputString.split(\" +\", 2); // \u003cstock/stocktype\u003e \u003c...\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        Command editCommand;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        switch (addInput[0]) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"stock\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            editCommand \u003d processEditStock(addInput[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"stocktype\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            editCommand \u003d processEditStockType(addInput[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            throw new BadInputException(\"Unexpected value:\" + addInput[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return editCommand;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deculsion": 6,
      "patwaririshab": 63
    }
  },
  {
    "path": "src/main/java/eggventory/parsers/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.FindCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import eggventory.commands.help.HelpCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.exceptions.BadInputException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.exceptions.InsufficientInfoException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Interprets command strings by the user, and converts them to command objects that can be executed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private ParseAdd addParser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private ParseDelete deleteParser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private ParseEdit editParser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Parser object contains submodules for parsing commands with many different options."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        addParser \u003d new ParseAdd();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        deleteParser \u003d new ParseDelete();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        editParser \u003d new ParseEdit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Checks if the command keyword (first word is valid)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Determines what to do with the remaining string depending on the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Also handles exceptions for bad description string inputs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @param listInput array containing the command and description from the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return a Command object which will execute the user\u0027s command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws BadInputException If the first word is not one of the recognised commands."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws InsufficientInfoException If any of the commands had compulsory parameters missed out."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @throws NumberFormatException If non-integer inputs are received for numerical parameters."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Command handleListInput(String listInput) throws BadInputException,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            InsufficientInfoException, NumberFormatException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        listInput \u003d listInput.strip(); //Remove leading/trailing whitespace."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Extract the first word."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //inputArr[0] is the main command word."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //inputArr[1] is the subsequent command string, and may also be empty."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String[] inputArr \u003d listInput.split(\" +\", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        switch (inputArr[0]) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Commands which are single words."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            if (inputArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                throw new BadInputException(\"Usage of list: list stock, list stocktypes or list \u003cstocktype\u003e\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                command \u003d new ListCommand(CommandType.LIST, inputArr[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            command \u003d new Command(CommandType.BYE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "            inputArr[1] \u003d inputArr[1].strip(); //Removes whitespace after the stockCode so that it can parse correctly."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            command \u003d deleteParser.parse(inputArr[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Commands which require string input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        case \"add\": {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) { //User command only said \"add\" and nothing else."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                //Instead of BadInputException, we should be returning a helpCommand."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                throw new BadInputException(\"\u0027\" + inputArr[0] + \"\u0027 requires 1 or more arguments.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d addParser.parse(inputArr[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                throw new BadInputException(\"\u0027\" + inputArr[0] + \"\u0027 requires 1 or more arguments.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            String description \u003d inputArr[1].trim(); //Might need to catch empty string exceptions?"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            if (!description.isBlank()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "                command \u003d new FindCommand(CommandType.FIND, description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                command \u003d new Command();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                throw new BadInputException(\"Please enter the search description.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        case \"edit\": {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                throw new BadInputException(\"\u0027\" + inputArr[0] + \"\u0027 requires 1 or more arguments.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                command \u003d editParser.parse(inputArr[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        case \"help\": {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                //display general help"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                command \u003d new HelpCommand(CommandType.HELP);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                //display full help."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                command \u003d new HelpCommand(CommandType.HELP, inputArr[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            command \u003d new Command(); //Bad Command"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            throw new BadInputException(\"Sorry, I don\u0027t recognise that input keyword!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Takes command string from the user and passes to the handleListInput method."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Also catches exceptions for invalid commands."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * @return A command object corresponding to the user\u0027s inputs."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Command parse(String userInput) throws Exception {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        Command userCommand;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //TODO: Make this a do-while that waits for a good input?"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "            userCommand \u003d handleListInput(userInput);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            throw new NumberFormatException(\"Please input only an integer after the command.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } catch (Exception e) { // Redundant code, but demonstrates throwing all other exceptions higher"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 21,
      "Deculsion": 5,
      "yanprosobo": 16,
      "cyanoei": 88,
      "patwaririshab": 8
    }
  },
  {
    "path": "src/main/java/eggventory/ui/Cli.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": " * Manages the UI of Eggventory."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " * Prints intro and exit messages, and the standard newline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Cli {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Cli() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Prints eggventory introduction message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String logo \u003d \"  _      __    __                     __         ____         _   __         __               \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                + \" | | /| / /__ / /______  __ _  ___   / /____    / __/__ ____ | | / /__ ___  / /____  ______ __\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                + \" | |/ |/ / -_) / __/ _ \\\\/  \u0027 \\\\/ -_) / __/ _ \\\\  / _// _ `/ _ `/ |/ / -_) _ \\\\/ __/ _ \\\\/\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                + \" __/ // /\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                + \" |__/|__/\\\\__/_/\\\\__/\\\\___/_/_/_/\\\\__/  \\\\__/\\\\___/ /___/\\\\_, /\\\\_, /|___/\\\\__/_//_/\\\\__/\\\\___/_/\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                + \"  \\\\_, / \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                + \"                                                  /___//___/                           /___/  \\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        print(\"Hello! I\u0027m Humpty Dumpty\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Primary function that handles printing to the CLI."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param printString String to print (passed in from external objects accessing UI)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    public String print(String printString) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        output \u003d addIndent() + line + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String[] linesToPrint \u003d printString.split(\"\\n\", 0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        for (int i \u003d 0; i \u003c linesToPrint.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "            output +\u003d (addIndent() + linesToPrint[i]) + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        output +\u003d addIndent() + line + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //    public PrintType printCommand(PrintType printType, String ... statement) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //        String output;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //        switch(printType){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //            case SUCCESS_ADD_COMMAND:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //                output \u003d (addIndent() + \"Nice! I have successfully added the stock: StockType: \" + statement[0]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //                System.out.println(output);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //                return PrintType.SUCCESS_ADD_COMMAND;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //            case FAIL_ADD_COMMAND:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //                output \u003d (addIndent() + \"Sorry! There seems to be an error: StockType\" + statement[0] );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //                System.out.println(output);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //            default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //                output \u003d \"Nothing done\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Prints error message to CLI."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        print(\"Parser error: \\n\" + e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     * Prints the EggVentory exit message."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        print(\"Bye! Your stonks are safe with me!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static String addIndent() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return \"        \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Prints the standard newline."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private void printNewLine() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        System.out.println(addIndent() + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 31,
      "cyanoei": 34,
      "patwaririshab": 34
    }
  },
  {
    "path": "src/main/java/eggventory/ui/Gui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.parsers.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.control.TableView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.control.TableColumn;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.control.cell.PropertyValueFactory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Gui extends Application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private TextField inputField;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private TextArea outputField;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private TableView outputTable;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private ScrollPane outputTableScroll;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Prints eggventory introduction message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String logo \u003d \"  _      __    __                     __         ____         _   __         __               \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                + \" | | /| / /__ / /______  __ _  ___   / /____    / __/__ ____ | | / /__ ___  / /____  ______ __\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                + \" | |/ |/ / -_) / __/ _ \\\\/  \u0027 \\\\/ -_) / __/ _ \\\\  / _// _ `/ _ `/ |/ / -_) _ \\\\/ __/ _ \\\\/\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                + \" __/ // /\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                + \" |__/|__/\\\\__/_/\\\\__/\\\\___/_/_/_/\\\\__/  \\\\__/\\\\___/ /___/\\\\_, /\\\\_, /|___/\\\\__/_//_/\\\\__/\\\\___/_/\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                + \"  \\\\_, / \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                + \"                                                  /___//___/                           /___/  \\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        outputField.appendText(logo + \"Hello! I\u0027m Humpty Dumpty\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(this.getClass().getResource(\"/Gui.fxml\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            Stage ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            ap.show();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String currentDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String filePath \u003d currentDir + \"/data/saved_tasks.txt\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        Cli cli \u003d new Cli();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        StockList stockList \u003d storage.load();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        printIntro();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        // Event handler for user pressing enter in the text input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        inputField.setOnKeyPressed(new EventHandler\u003cKeyEvent\u003e() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            public void handle(KeyEvent keyEvent) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    String userInput \u003d inputField.getText();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    inputField.setText(\"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    outputField.appendText(\"\\n\" + userInput);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        Command command \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        command.execute(stockList, cli, storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        //drawTable(stockList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        if (command.getType() \u003d\u003d CommandType.BYE) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                            System.exit(0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        printError(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Can be called to redraw the table output as and when needed. Takes in a StockList object"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * that it uses to redraw the entire table."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param stockList Input StockList object to be used to draw the table."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void drawTable(StockList stockList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        TableColumn\u003cString, Stock\u003e stockTypeCol \u003d new TableColumn\u003c\u003e(\"Stock Type\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        stockTypeCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"stockType\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        TableColumn\u003cString, Stock\u003e stockCodeCol \u003d new TableColumn\u003c\u003e(\"Stock Code\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        stockCodeCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"stockCode\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        TableColumn\u003cInteger, Stock\u003e quantityCol \u003d new TableColumn\u003c\u003e(\"Quantity\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        quantityCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"quantity\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        TableColumn\u003cString, Stock\u003e descriptionCol \u003d new TableColumn\u003c\u003e(\"Description\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        descriptionCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"description\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        /*for (int i \u003d 0; i \u003c stockList.getStockQuantity(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            for (int i \u003d 0; i \u003c stockList.getStockType().getQuantity(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                outputTable.getItems().add(stockList.getStockType())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        // TODO: Can add more columns for loaned, lost, and minimum later..."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        outputTable.getColumns().removeAll();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        outputTable.getColumns().addAll(stockTypeCol, stockCodeCol, quantityCol, descriptionCol);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * Prints text output in the outputField TextArea to essentially replace the Cli.print()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * command."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     * @param printString The raw String to be printed out, after some extra formatting."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void print(String printString) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        output \u003d addIndent() + line + \"\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String[] linesToPrint \u003d printString.split(\"\\n\", 0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        for (int i \u003d 0; i \u003c linesToPrint.length; i++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            output +\u003d (addIndent() + linesToPrint[i]) + \"\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        output +\u003d addIndent() + line + \"\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        //outputField.setText(outputField.getText() + \"\\n\" + output);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        //outputField.setScrollTop(Integer.MAX_VALUE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        outputField.appendText(\"\\n\" + output);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        print(\"Parser error: \\n\" + e);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static String addIndent() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return \"        \";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 152
    }
  },
  {
    "path": "src/main/resources/Gui.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.control.Separator?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.control.TableView?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003cStage title\u003d\"Eggventory\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        \u003cScene fill\u003d\"RED\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            \u003cAnchorPane prefHeight\u003d\"800.0\" prefWidth\u003d\"720.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "               \u003cVBox prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" spacing\u003d\"5.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                  \u003cchildren\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                     \u003cScrollPane fx:id\u003d\"outputTableScroll\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"400.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        \u003ccontent\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                           \u003cTableView fx:id\u003d\"outputTable\" editable\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"648.0\" prefWidth\u003d\"685.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        \u003c/content\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                     \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                     \u003cSeparator prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                     \u003cTextArea fx:id\u003d\"outputField\" editable\u003d\"false\" focusTraversable\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"250.0\" prefWidth\u003d\"710.0\" wrapText\u003d\"true\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                           \u003cFont name\u003d\"Monospaced Bold\" size\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                     \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                     \u003cTextField fx:id\u003d\"inputField\" promptText\u003d\"Enter your commands here...\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        \u003cfont\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                           \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        \u003c/font\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                     \u003c/TextField\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                  \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "               \u003c/VBox\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "               \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            \u003c/padding\u003e\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "\u003c/Stage\u003e"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 46
    }
  },
  {
    "path": "src/test/java/eggventory/StockTypeTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "package eggventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.enums.Property;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.items.Stock;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.items.StockType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "class StockTypeTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getStockList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        ArrayList\u003cStock\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testList.add(new Stock(\"Resistor\", \"R50\", 500, \"Test Resistor\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockType testStockType \u003d new StockType(\"Resistor\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        testStockType.addStock(\"Resistor\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(testList, testStockType.getStockList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    void getQuantity() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockType testStockType \u003d new StockType(\"Resistor\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(0,testStockType.getQuantity());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStockType.addStock(\"Resistor\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(1,testStockType.getQuantity());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void addStock_Success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockType testStockType \u003d new StockType(\"Resistor\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertTrue(testStockType.addStock(\"Resistor\", \"R50\", 500,\"Test Resistor\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getStock() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockType testStockType \u003d new StockType(\"Resistor\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStockType.addStock(\"Resistor\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"Test Resistor\", testStockType.getStock(0).getDescription());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void deleteStock() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        ArrayList\u003cStock\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testList.add(new Stock(\"Resistor\", \"R50\", 500, \"Test Resistor\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockType testStockType \u003d new StockType(\"Resistor\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        testStockType.addStock(\"Resistor\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        assertEquals(1,testStockType.getQuantity());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        testStockType.deleteStock(\"R50\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        assertEquals(0,testStockType.getQuantity());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setStock_StockCode_Success() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        StockType testStockType \u003d new StockType(\"testList\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStockType.addStock(\"testList\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStockType.setStock(\"R50\", Property.STOCKCODE, \"R500\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"R500\",testStockType.getStock(\"R500\").getStockCode());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(null, testStockType.getStock(\"R50\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setStock_Quantity_Success() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        StockType testStockType \u003d new StockType(\"testList\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStockType.addStock(\"testList\", \"R50\", 500, \"Test Resistor\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStockType.setStock(\"R50\", Property.QUANTITY, \"1950\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(1950, testStockType.getStock(\"R50\").getQuantity());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setStock_Loaned_Success() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setStock_Lost_Success() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setStock_Description_Success() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setStock_Minimum_Success() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deculsion": 13,
      "cyanoei": 3,
      "patwaririshab": 81
    }
  },
  {
    "path": "src/test/java/eggventory/commands/CommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "class CommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    StockList newList \u003d new StockList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    Cli cli \u003d new Cli();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    Storage storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getTypeDefault() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(CommandType.BAD, new Command().getType());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(CommandType.DONE, new Command(CommandType.DONE).getType());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(CommandType.LIST, new Command(CommandType.LIST).getType());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(CommandType.BYE, new Command(CommandType.BYE).getType());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void execute_printList_empty() throws BadInputException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        new Command(CommandType.LIST).execute(newList, cli, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"The list is currently empty.\\n\", os.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void execute_printList_success() throws BadInputException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        new AddCommand(CommandType.TODO, \"Test TODO\", \"\").execute(newList, cli, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        new Command(CommandType.LIST).execute(newList, cli, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"1. [T] [X] Test TODO\\n\", os.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 10,
      "Deculsion": 2,
      "patwaririshab": 37
    }
  },
  {
    "path": "src/test/java/eggventory/commands/FindCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "class FindCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    Cli cli \u003d new Cli();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    Storage storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    StockList stockList \u003d new StockList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void execute_Task_success() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        stockType.addItem(TaskType.TODO, \"Test FIND\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        new FindCommand(CommandType.FIND, \"FIND\").execute(stockType, cli, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        assertEquals(\"1. [T] \" + stockType.getTask(0).getStatusIcon() + \"Test FIND\", os.toString().trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 24,
      "Deculsion": 2
    }
  },
  {
    "path": "src/test/java/eggventory/commands/add/AddStockCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package eggventory.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class AddStockCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //    private OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    //    private PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private StockList testStockList \u003d new StockList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private Cli testCli \u003d new Cli();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private Storage testStorage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    private String indent \u003d \"        \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //        System.setOut(ps);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //                new AddCommand(CommandType.ADD, \"testStockType\", \"t0000\", 100,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        //                        \"testDescription\").execute( testStockType, testCli, testStorage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //        assertEquals(indent + \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //                + indent + \"I have added the following stock to your list:\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //                + indent + \"testStockType | t0000 | 100 | testDescription\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //                + indent + \"____________________________________________________________\\n\", os.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void testExecute_AddStock_Success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockList testList \u003d new StockList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testList.addStockType(\"testStockType\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String output \u003d new AddStockCommand(CommandType.ADD, \"testStockType\", \"t0000\", 100,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                \"testDescription\").execute(testList, testCli, testStorage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //Check whether a stock is added to the list correctly"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"testStockType\", testList.getStockType(\"testStockType\").getName());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //Check whether the"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        //Check whether execute sends correct message to print"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(String.format(\"Nice! I have successfully added the stock: StockType: %s StockCode: %s \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "                + \"Quantity: %d Description: %s\",\"testStockType\", \"t0000\", 100, \"testDescription\"), output);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //@@author cyanoei"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    void testExecute_AddDuplicateStock_Error() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        StockList testList \u003d new StockList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockType \u003d \"Uncategorised\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockCode \u003d \"R5\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int testQuantity \u003d 1000;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testDescription \u003d \"A resistor\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Add an existing stock to the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        testList.addStock(testStockType, testStockCode, testQuantity, testDescription);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Add another stock with the same stock code. The other attributes can be different."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output \u003d new AddStockCommand(CommandType.ADD, testStockType, testStockCode, 10,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                \"Another resistor\").execute(testList, testCli, testStorage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        //Check whether execute prints the error message to CLI."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(String.format(\"Sorry, the stock code \\\"%s\\\" is already assigned to a stock in the system. \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"Please enter a different stock code.\", testStockCode), output);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 8,
      "Deculsion": 2,
      "cyanoei": 23,
      "patwaririshab": 36
    }
  },
  {
    "path": "src/test/java/eggventory/commands/add/AddStockTypeCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "package eggventory.commands.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "class AddStockTypeCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private StockList testStockList \u003d new StockList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private Cli testCli \u003d new Cli();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    private Storage testStorage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    void testExecute_AddStocktypeSuccess() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        StockList testList \u003d new StockList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        testList.addStockType(\"testStockType\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        String output \u003d new AddStockTypeCommand(CommandType.ADD, \"testStockType\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                .execute(testList, testCli, testStorage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deculsion"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "        assertEquals(\"Nice! I have successfully added the stocktype: testStockType\", output);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deculsion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 3,
      "Deculsion": 24
    }
  },
  {
    "path": "src/test/java/eggventory/commands/delete/DeleteStockCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "package eggventory.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class DeleteStockCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private StockList testStockList \u003d new StockList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Cli testCli \u003d new Cli();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Storage testStorage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private String indent \u003d \"        \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    void testExecute_DeleteStock_Success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        StockList testList \u003d new StockList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockType \u003d \"Uncategorised\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockCode \u003d \"R5\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int testQuantity \u003d 1000;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testDescription \u003d \"A resistor\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        testList.addStock(testStockType, testStockCode, testQuantity, testDescription);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output \u003d new DeleteStockCommand(CommandType.DELETE, testStockCode)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                .execute(testList, testCli, testStorage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(String.format(\"I deleted the following stock: StockType: %s StockCode: %s Quantity: %d \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                        + \"Description: %s\", testStockType, testStockCode,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                testQuantity, testDescription), output);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    void testExecute_DeleteNonexistentStock_Error() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        StockList testList \u003d new StockList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockType \u003d \"Uncategorised\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockCode \u003d \"R5\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int testQuantity \u003d 1000;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testDescription \u003d \"A resistor\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output \u003d new DeleteStockCommand(CommandType.DELETE, testStockCode)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                .execute(testList, testCli, testStorage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(String.format(\"Sorry, I cannot find the stock that stock code \\\"%s\\\" refers to. \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"Please try again.\", testStockCode), output);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 53
    }
  },
  {
    "path": "src/test/java/eggventory/commands/delete/DeleteStockTypeCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "package eggventory.commands.delete;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.StockList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import eggventory.ui.Cli;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import eggventory.enums.CommandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "public class DeleteStockTypeCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private StockList testStockList \u003d new StockList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private Cli testCli \u003d new Cli();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    private Storage testStorage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    void testExecute_deleteStocktypeNotFound_errorMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output \u003d new DeleteStockTypeCommand(CommandType.DELETE, \"nonexistentStockType\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                .execute(testStockList, testCli, testStorage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(\"Sorry, I cannot find the stock type \\\"nonexistentStockType\\\" refers to. \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"Please try again.\", output);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    void testExecute_deleteUncategorised_errorMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output \u003d new DeleteStockTypeCommand(CommandType.DELETE, \"Uncategorised\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                .execute(testStockList, testCli, testStorage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(\"Sorry, Uncategorised is the default category, and cannot be deleted.\", output);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    void testExecute_deleteStockType_success() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockType \u003d \"Resistor\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testStockCode \u003d \"R5\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        int testQuantity \u003d 1000;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String testDescription \u003d \"A resistor\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        testStockList.addStockType(testStockType);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        testStockList.addStock(testStockType, testStockCode, testQuantity, testDescription);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        String output \u003d new DeleteStockTypeCommand(CommandType.DELETE, testStockType)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                .execute(testStockList, testCli, testStorage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(String.format(\"I deleted the following stockType: %s. \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                + \"I also deleted the following stocks of that type: \\n\" + \"1. %s | %s | %d | %s\\n\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "                testStockType, testStockType, testStockCode, testQuantity, testDescription), output);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cyanoei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 5,
      "cyanoei": 50
    }
  },
  {
    "path": "src/test/java/eggventory/items/StockTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "package eggventory.items;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "class StockTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    Stock testStock \u003d new Stock(\"Test\", \"R0000\", 100, \"Test Stock\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    OutputStream os \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    PrintStream ps \u003d new PrintStream(os);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"Test Stock\", testStock.getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setDescription(\"SetDescription() Test\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"SetDescription() Test\", testStock.getDescription());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getQuantity() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(100,testStock.getQuantity());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setQuantity() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setQuantity(500);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(500,testStock.getQuantity());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getLoaned() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(0,testStock.getLoaned());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setLoaned() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setLoaned(50);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(50,testStock.getLoaned());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void getLost() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(0,testStock.getLost());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void setLost() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setLost(50);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(50,testStock.getLost());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void numAvailable() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(100,testStock.numAvailable());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setLoaned(50);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setLost(50);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(0,testStock.numAvailable());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"Test | R0000 | 100 | Test Stock\", testStock.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void saveDetailsString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cyanoei"
        },
        "content": "        assertEquals(\"Test/R0000/100/Test Stock/0\", testStock.saveDetailsString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void printAll() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.printAll();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"Test Stock: 100 available. 0 on loan. 0 lost. (100 total.)\\n\", os.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void printAvailable() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.printAvailable();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"Test Stock: 100 available.\\n\", os.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void printLoan() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setLoaned(50);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.printLoan();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"Test Stock: 50 on loan.\\n\", os.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    void printLost() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.setLost(50);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        testStock.printLost();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "        assertEquals(\"Test Stock: 50 lost.\\n\", os.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "patwaririshab"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cyanoei": 1,
      "patwaririshab": 106
    }
  }
]
