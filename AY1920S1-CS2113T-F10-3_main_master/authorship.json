[
  {
    "path": "src/main/java/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Parser that parses input from the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method that parses input from the user and executes processes based on the input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param storage Storage for the Tasklist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Returns boolean variable to indicate when to stop parsing for input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException if input is not valid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean parse(String input, TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isBye(input)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                //print bye message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.byeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.getIn().close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isList(input)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                //print out current list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.printList(tasklist, \"list\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isDone(input)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                processDone(input, tasklist, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isDeadline(input)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                processDeadline(input, tasklist, ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isTodo(input)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                processTodo(input, tasklist, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isEvent(input)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ProcessEvent(input, tasklist, ui);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (IsDoAfter(input)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                ProcessDoAfter(input, tasklist, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                Storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isDelete(input)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                processDelete(input, tasklist, ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            } else if (isFind(input)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                processFind(input, tasklist, ui);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            } else if (isDone(input)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                processDone(input, tasklist, ui);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            } else if (isDeadline(input)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                processDeadline(input, tasklist, ui);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            } else if (isTodo(input)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                processTodo(input, tasklist, ui);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            else if (isDelete(input)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                processDelete(input, tasklist, ui);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isFind(input)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                processFind(input, tasklist, ui);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isWithinPeriodTask(input)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                processWithin(input, tasklist, ui);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }else if (isSnooze(input)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                processSnooze(input, tasklist, ui);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//            }else if (isPostpone(input)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//                processPostpone(input, tasklist, ui);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            }else if (isReschedule(input)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                processReschedule(input, tasklist, ui);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            else if (isViewSchedule(input)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                processViewSchedule(input, tasklist, ui);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                //storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }else if(isEdit(input)){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                processEdit(input,tasklist,ui);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the find command and outputs a list of tasks containing the word."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processFind(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList findlist \u003d new TaskList();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Task tasks : tasklist.returnArrayList()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                if (tasks.getDescription().contains(splitspace[1])) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                    findlist.addTask(tasks);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printList(findlist, \"find\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The content to find cannot be empty.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * Processes the View Schedule command and outputs the schedule for the specific date entered in the input."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    private static void processViewSchedule(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            TaskList findlist \u003d new TaskList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 3);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            for (Task tasks : tasklist.returnArrayList()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                if (tasks.giveTask().contains(splitspace[2])) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                    findlist.addTask(tasks);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            ArrayList\u003cString\u003e time \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            for(Task tasks: findlist.returnArrayList()){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                String[] splitcolon \u003d tasks.giveTask().split(\":\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                String[] splitspaces \u003d splitcolon[1].split(\" \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                time.add(splitspaces[2]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            Collections.sort(time);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            TaskList finalList \u003d new TaskList();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            for(int i \u003d 0; i \u003c time.size(); i \u003d i + 1){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                for(Task tasks: findlist.returnArrayList()){"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                    if(tasks.giveTask().contains(time.get(i))){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                        finalList.addTask(tasks);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            ui.printList(finalList, \"View Schedule\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The content to find cannot be empty.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the delete command."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processDelete(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            int numdelete \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            String task \u003d tasklist.get(numdelete).giveTask();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            tasklist.deleteTask(numdelete);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printDeleteMessage(task, tasklist);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to delete.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the done command and sets the task specified as done."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processDone(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            int numdone \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            tasklist.get(numdone).setDone();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printDoneMessage(numdone, tasklist);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to indicate as done.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the deadline command and adds a deadline to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processDeadline(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskDescription, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            tasklist.addTask(deadline);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printAddedMessage(deadline, tasklist);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the todo command and adds a todo to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processTodo(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            Todo todotoadd \u003d new Todo(splitspace[1]);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            tasklist.addTask(todotoadd);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printAddedMessage(todotoadd, tasklist);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * Processes the DoAfter command and adds a task, which has to be done after another task or a specific date and time, to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void ProcessDoAfter(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskTime.contains(\"/\")) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            DoAfterTasks After \u003d new DoAfterTasks(taskDescription, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            tasklist.addTask(After);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            ui.printAddedMessage(After, tasklist);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                DoAfterTasks After \u003d new DoAfterTasks(taskDescription, taskTime);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                tasklist.addTask(After);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "                ui.printAddedMessage(After, tasklist);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            ui.exceptionMessage(\"     \\u2639 OOPS!!! The description of a DoAfter cannot be empty.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        catch (ParseException e){"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            ui.exceptionMessage(\"     \\u2639 OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static void ProcessEvent(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            Event event \u003d new Event(input, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            tasklist.addTask(event);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printAddedMessage(event, tasklist);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the within command and adds a withinPeriodTask to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processWithin(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitand \u003d splittime[1].split(\"and \", 2);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskstart \u003d splitand[0];"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskend \u003d splitand[1];"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            Date formattedtimestart \u003d dataformat.parse(taskstart);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            Date formattedtimeend \u003d dataformat.parse(taskend);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            WithinPeriodTask withinPeriodTask \u003d new WithinPeriodTask(taskDescription, dataformat.format(formattedtimestart), dataformat.format(formattedtimeend));"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            tasklist.addTask(withinPeriodTask);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printAddedMessage(withinPeriodTask, tasklist);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The description of a withinPeriodTask cannot be empty.\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "     * Process the snooze command and automatically postpone the selected deadline task by 1 hour."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processSnooze(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            int nsnooze \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            if(tasklist.get(nsnooze).getType().equals(\"D\")){"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                String taskTime \u003d tasklist.get(nsnooze).getBy();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                calendar.setTime(formattedtime);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                calendar.add(Calendar.HOUR_OF_DAY,1);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                tasklist.get(nsnooze).setBy(dataformat.format(newDate));"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.printSnoozeMessage(tasklist.get(nsnooze));"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Please select a deadline type task to snooze.\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to snooze.\");"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        }catch (ParseException e) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "     * Process the postpone command and postpone the selected deadline task by required number of hours."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processPostpone(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splittime \u003d splitspace[1].split(\" \", 2);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            int npostpone \u003d Integer.parseInt(splittime[0]) - 1;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            int delaytime \u003d Integer.parseInt(splittime[1]);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            if(tasklist.get(npostpone).getType().equals(\"D\")){"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                String taskTime \u003d tasklist.get(npostpone).getBy();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                calendar.setTime(formattedtime);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                calendar.add(Calendar.HOUR_OF_DAY,delaytime);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                tasklist.get(npostpone).setBy(dataformat.format(newDate));"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.printPostponeMessage(tasklist.get(npostpone));"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Please select a deadline type task to postpone.\");"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to postpone. Format:\u0027postpone \u003cindex\u003e \u003cno.of hours to postpone\u003e\u0027\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        }catch (ParseException e) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong. Format:\u0027postpone \u003cindex\u003e \u003cno.of hours to postpone\u003e\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processReschedule(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splittime \u003d splitspace[1].split(\" \", 2);"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            int nreschedule \u003d Integer.parseInt(splittime[0]) - 1;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "            String delay \u003d splittime[1];"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            if(tasklist.get(nreschedule).getType().equals(\"D\")){"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(delay);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "                String newschedule \u003d dataformat.format(formattedtime);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                tasklist.get(nreschedule).setBy(newschedule);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.printRescheduleMessage(tasklist.get(nreschedule));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if(tasklist.get(nreschedule).getType().equals(\"E\")){"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(delay);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                String newschedule \u003d dataformat.format(formattedtime);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                tasklist.get(nreschedule).setAt(newschedule);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.printRescheduleMessage(tasklist.get(nreschedule));"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Please select a deadline or event type task to reschedule.\");"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to reschedule. Format:\u0027postpone \u003cindex\u003e \u003cthe new scheduled time in dd/mm/yyyy HHmm\u003e\u0027\");"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        }catch (ParseException e) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong. Format:\u0027postpone \u003cindex\u003e \u003cthe new scheduled time in dd/mm/yyyy HHmm\u003e\");"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static void processEdit(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitedit \u003d splitspace[1].split(\" d/\", 2);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int nedit \u003d Integer.parseInt(splitedit[0]) - 1;"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String description \u003d splitedit[1];"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasklist.get(nedit).setDescription(description);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printEditMessage(tasklist.get(nedit));"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }catch(ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isBye(String input) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.equals(\"bye\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isList(String input) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.equals(\"list\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isDone(String input) {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"done\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isDeadline(String input) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"deadline\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isTodo(String input) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"todo\");"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isEvent(String input) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"event\");"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean IsDoAfter(String input){"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"DoAfter\");"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isDelete(String input) {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"delete\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isFind(String input) {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"find\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isWithinPeriodTask(String input) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"within\");"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isSnooze(String input) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"snooze\");"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    private static boolean isPostpone(String input) {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        return input.startsWith(\"postpone\");"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isReschedule(String input) {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.startsWith(\"reschedule\");"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    private static boolean isViewSchedule(String input) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "        return input.startsWith(\"View Schedule\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static boolean isEdit(String input) {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"edit\");"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 33,
      "Shriya Saxena": 72,
      "-": 382,
      "leowyh": 2
    }
  },
  {
    "path": "src/main/java/task/DoAfterTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": " * Task containing information of a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "public class DoAfterTasks extends Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    //protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * Creates a DoAfterTasks instance and initialises the required attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * @param description Description of the DoAfterTasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * @param after Time of the DoAfterTasks in format \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public DoAfterTasks(String description, String after) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        this.after \u003d after;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "        this.type \u003d \"A\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * Returns a string status of the Event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     * @return The task\u0027s status icon, description and eventtime."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "        return \"[A]\" + super.giveTask() + \"(after: \" + after + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shriya Saxena": 20,
      "-": 12
    }
  },
  {
    "path": "src/main/java/task/PaymentDetails.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class PaymentDetails implements Serializable{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    String item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    double cost;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a PaymentDetails instance and initiates the required attributes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param item Item that was bought."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param cost Cost of the item in dollars."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public PaymentDetails(String item, double cost){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 19
    }
  },
  {
    "path": "src/main/java/task/PaymentForm.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class PaymentForm extends Task implements Serializable{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    ArrayList\u003cPaymentDetails\u003e paymentslist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    double totalexpense;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public PaymentForm(String description, ArrayList\u003cPaymentDetails\u003e paymentslist, double totalexpense){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.paymentslist \u003d paymentslist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.totalexpense \u003d totalexpense;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 15
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * The parent Task class containing the description of the task and its done status."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "    protected String after;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String period;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Task instance and initialises the required attributes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Formats the representation of the Task to be printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task\u0027s status icon, description and deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gives the status icon of the Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The status icon of the Task based on isDone."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets as done the isDone attribute."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets a new value to the by attribute."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets a new value to the at attribute."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Sets a new value to the description attribute."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the description of the Task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task Description."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the type of the Task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task type."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType(){ return this.type; }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the deadline of the Task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task by."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getBy(){ return this.by; }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the period of the Task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task at."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getAt(){ return this.at; }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shriya Saxena": 1,
      "lijiayu980606": 8,
      "-": 86
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Ui to interact with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    Scanner in;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Ui instance with a scanner to read user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Reads input from the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Input from the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints starting message for the Duke program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public void startMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d line"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                + line;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints ending message for the Duke program."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        String output \u003d line + \"     Bye. Hope to see you again soon!\\n\" + line;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the list of tasks or the matching list of tasks depending on the command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param list TaskList of the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param command Command given by the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printList(TaskList list, String command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        int listsize \u003d list.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        // prints list or matching tasks in list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(line + \"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Shriya Saxena"
        },
        "content": "            if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.print(line + \"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c listsize; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            int listnum \u003d i + 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(\"     \" + listnum + \".\" + list.get(i).giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate deletion of a Task from the TaskList and the number of Tasks left."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Representation of the Task that is deleted."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printDeleteMessage(String task, TaskList tasklist) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Noted. I\u0027ve removed this task: \\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"     Now you have \" + tasklist.size() + \" tasks in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task is done."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param numdone Index of the Task in the TaskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printDoneMessage(int numdone, TaskList tasklist) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + tasklist.get(numdone).giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task being added and the number of Tasks in the TaskList."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printAddedMessage(Task task, TaskList tasklist) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve added this task:  \\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        int tasksize \u003d tasklist.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"     Now you have \" + tasksize + \" tasks in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task being snoozed."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Task to be snoozed."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public void printSnoozeMessage(Task task) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve snoozed this task:  \\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task being postponed."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Task to be postponed."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printPostponeMessage(Task task) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve postponed this task:  \\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task being rescheduled."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Task to be snoozed."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printRescheduleMessage(Task task) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve rescheduled this task:  \\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void printEditMessage(Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve edited this task:  \\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the message for the exception thrown."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    public void exceptionMessage(String message) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the scanned input."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Scanned input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public Scanner getIn() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.in;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Shriya Saxena": 1,
      "lijiayu980606": 6,
      "-": 152,
      "leowyh": 2
    }
  }
]
