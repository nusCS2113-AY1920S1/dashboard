[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    archiveBaseName \u003d \"alphanus\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    mainClassName \u003d \"AlphaNUS\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    main {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        resources {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            srcDirs \u003d [\u0027src/main/java/\u0027]"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 6,
      "-": 40,
      "leowyh": 11
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "rootProject.name \u003d \u0027alphanus\u0027"
      }
    ],
    "authorContributionMap": {
      "leowyh": 1
    }
  },
  {
    "path": "src/main/java/AlphaNUS.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import command.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import project.Fund;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * \u003ch1\u003eAlphaNUS\u003c/h1\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * AlphaNUS is a program that tracks a list of tasks given by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * @author Leow Yong Heng"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class AlphaNUS {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static TaskList tasklist;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static Fund fund;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    private static ArrayList\u003cString\u003e commandList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    private static Set\u003cString\u003e dict;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a AlphaNUS instance and initialises the required attributes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public AlphaNUS() throws AlphaNUSException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        fund \u003d storage.readFromFundFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        commandList \u003d storage.readFromCommandsFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        dict \u003d storage.readFromDictFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Method to run the AlphaNUS instance and take in the inputs of the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ui.startMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            isExit \u003d parser.parse(input, tasklist, ui, fund, storage, commandList, dict);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * The main method of the AlphaNUS program, which instantiates a AlphaNUS instance with the filepath to the storage."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static void main(String[] args) throws AlphaNUSException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        new AlphaNUS().run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 3,
      "lijiayu980606": 6,
      "-": 2,
      "leowyh": 48,
      "E0373902": 3
    }
  },
  {
    "path": "src/main/java/command/BeforeAfterCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0373902"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import project.ProjectManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class BeforeAfterCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Stores the projectmap before the current command is executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param storage Storage that stores the projectmap before the current command is executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException if the file cannot be written to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public static void beforedoCommand(Storage storage, ProjectManager projectManager) throws AlphaNUSException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        storage.writeToUndoFile(projectManager.projectmap);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Stores the projectmap after the current command is executed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param storage Storage that stores the projectmap after the current command is executed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException if the file cannot be written to."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public static void afterCommand(Storage storage, ProjectManager projectManager) throws AlphaNUSException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        storage.writeToRedoFile(projectManager.projectmap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E0373902"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "leowyh": 4,
      "E0373902": 22
    }
  },
  {
    "path": "src/main/java/command/Instruction.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "karansarat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Instruction {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isBye(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.equals(\"bye\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isList(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.equals(\"list\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDone(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"done task\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean isTodo(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"add todo\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDeadline(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"add deadline\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDoAfter(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"DoAfter\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean isDeletePayment(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"delete payment\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isFind(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"find\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean isFindTask(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"find task\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public  boolean isListTasks(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"list tasks\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isWithinPeriodTask(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"within\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isSnooze(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"snooze\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isPostpone(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"postpone\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public  boolean isDeleteTask(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"delete task\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isReschedule(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"reschedule\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isViewSchedule(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"view schedule\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isReminder(String input) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"reminder\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isEdit(String input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"edit\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean isAddPayment(String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"add payment\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean isAddPayee(String input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"add payee\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isListPayments(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"list payments\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isListPayees(String input) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"list payees\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean isDeletePayee(String input) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"delete payee\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean istotalcost(String input)  {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"total cost\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public boolean isHistory(String input) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return input.startsWith(\"history\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean isListProjects(String input) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.equals(\"list projects\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public boolean isAddProject(String input) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return input.startsWith(\"add project\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public boolean isDeleteProject(String input) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return input.startsWith(\"delete project\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public boolean isGoToProject(String input) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"goto\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean isSetFund(String input) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"set fund\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean isAddFund(String input) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"add fund\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isAssignFund(String input) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"assign fund\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean isReduceBudget(String input) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"reduce budget\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isShowFund(String input) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"show fund\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean isResetFund(String input) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"change fund\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean isShowBudget(String input) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return input.startsWith(\"show budget\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isViewhistory(String input) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"view history\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDeletehistory(String input) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"delete history\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public boolean isUndo(String input) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return input.startsWith(\"undo\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public boolean isRedo(String input) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return input.startsWith(\"redo\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean isHelp(String input) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.equals(\"help\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean isLoad(String input) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.equals(\"load\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 84,
      "lijiayu980606": 43,
      "leowyh": 21,
      "E0373902": 25
    }
  },
  {
    "path": "src/main/java/command/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import project.Fund;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Parser that parses input from the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static Instruction instr \u003d new Instruction();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Process process \u003d new Process();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Parser() throws AlphaNUSException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method that parses input from the user and executes processes based on the input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param storage Storage for the Tasklist."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param list CommandList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Returns boolean variable to indicate when to stop parsing for input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException if input is not valid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public boolean parse(String input, TaskList tasklist, Ui ui, Fund fund,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                                Storage storage, ArrayList\u003cString\u003e list, Set\u003cString\u003e dict) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            input \u003d trimInput(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (instr.isBye(input)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                storage.writeToProjectsFile(process.projectManager.projectmap);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                storage.writeToFundFile(fund);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                storage.writeToDictFile(dict);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                storage.writeTocurrentprojectnameFile(process.projectManager.currentprojectname);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.byeMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.getIn().close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else if (instr.isUndo(input)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.undo(storage, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (instr.isLoad(input)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                process.backupProjects(ui, fund, storage, list);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else if (instr.isRedo(input)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.redo(storage, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else if (instr.isViewhistory(input)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.viewhistory(input, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else if (instr.isHistory(input)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.history(ui,storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (instr.isListProjects(input)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                process.listProjects(ui);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else if (instr.isAddProject(input)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                process.addProject(input, ui, fund, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else if (instr.isDeleteProject(input)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.deleteProject(input, ui, storage, fund);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            } else if (instr.isGoToProject(input)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                process.goToProject(input, ui);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isList(input)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.printList(tasklist, \"list\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isDone(input)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.done(input, tasklist, ui);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isTodo(input)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.addTodo(input, tasklist, ui);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isDeadline(input)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.addDeadline(input, tasklist, ui);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                //storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isDoAfter(input)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.doAfter(input, tasklist, ui);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                //Storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (instr.isDeletePayment(input)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.deletePayment(input, ui, storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                //storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isFind(input)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.findPayee(input, storage, ui);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isFindTask(input)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.findTask(input, tasklist, ui);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }  else if (instr.isListTasks(input)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.listTasks(input, tasklist, ui);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isListPayments(input)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.listPayments(input, storage, ui);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isListPayees(input)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.listPayees(input, storage, ui);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isWithinPeriodTask(input)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.within(input, tasklist, ui);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isSnooze(input)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.snooze(input, tasklist, ui);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isPostpone(input)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.postpone(input, tasklist, ui);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isReschedule(input)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.reschedule(input, tasklist, ui);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isDeleteTask(input)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.deleteTask(input, tasklist, ui);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isViewSchedule(input)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.viewSchedule(input, tasklist, ui);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isEdit(input)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.edit(input,ui);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (instr.isAddPayment(input)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.addPayment(input, ui, storage, dict);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (instr.isAddPayee(input)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.addPayee(input, ui, storage);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (instr.isDeletePayee(input)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.deletePayee(input, ui, storage);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.istotalcost(input)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.totalCost(input, ui, storage);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isSetFund(input)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.setFund(input, ui, fund);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isAddFund(input)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.addFund(input, ui, fund);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isAssignFund(input)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                process.assignFund(input, ui, fund);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isReduceBudget(input)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.reduceBudget(input, ui, fund);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isShowFund(input)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.showFund(input, ui, fund);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isResetFund(input)) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.resetFund(input, ui, fund);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isShowBudget(input)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.showBudget(input, ui);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (instr.isHelp(input)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ui.printHelpMessage();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (instr.isReminder(input)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.reminder(ui, storage);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                process.commandHistory(input, ui, storage);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                throw new AlphaNUSException(\"\\t\" + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (AlphaNUSException | NullPointerException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(e.getMessage());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Remove whitespace in front and back of input."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from user."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns trimmed input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private String trimInput(String input) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.trim();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "karansarat": 30,
      "lijiayu980606": 40,
      "-": 37,
      "leowyh": 37,
      "E0373902": 41
    }
  },
  {
    "path": "src/main/java/command/Process.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "karansarat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.CommandFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.PaymentManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.Payments;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import project.Fund;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Project;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.ProjectManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.DoAfterTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.WithinPeriodTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Process {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private CommandFormat commandformat \u003d new CommandFormat();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private payment.Status status;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static final int MAX_FUND \u003d 500000;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static final int MIN_FUND \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    Process() throws AlphaNUSException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Trims leading and trailing whitespace of an array of strings."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param arr The array of Strings to clean."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @return cleanArr The array of Strings after cleaning."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    private String[] cleanStrStr(String[] arr) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String[] cleanArr \u003d arr.clone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            cleanArr[i] \u003d arr[i].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return cleanArr;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* Project *\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the list project command to list all existing projects in the projectmap."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public void listProjects(Ui ui) throws AlphaNUSException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cProject\u003e projectslist \u003d projectManager.listProjects();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if (projectslist.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.printNoProjectMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ui.printProjectsList(projectslist, projectManager.currentprojectname);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the add project command to add a new project to the projectmap."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void addProject(String input, Ui ui, Fund fund, Storage storage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            BeforeAfterCommand.beforedoCommand(storage, projectManager);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitproject \u003d input.split(\"pr/\", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            splitproject \u003d cleanStrStr(splitproject);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitamount \u003d splitproject[1].split(\"am/\", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            splitamount \u003d cleanStrStr(splitamount);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            //input validity check"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (splitamount.length !\u003d 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Incorrect input\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Correct Format: \" + commandformat.addProjectFormat());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String projectname \u003d splitamount[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String inputamount \u003d splitamount[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (projectname.isEmpty()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Project name cannot be empty!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Correct Format: \" + commandformat.addProjectFormat());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } //TODO refactor"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (projectManager.projectmap.containsKey(projectname)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Project already exists!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } //TODO refactor"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (inputamount.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Project newProject \u003d projectManager.addProject(projectname);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                int projectsize \u003d projectManager.projectmap.size();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ui.printAddProject(newProject, projectsize);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                double projectamount \u003d Double.parseDouble(inputamount);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                if (projectamount \u003c MIN_FUND) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value. \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                } else if (projectamount \u003e MAX_FUND) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value of no more than 500,000. \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                if (fund.getFundRemaining() \u003e\u003d projectamount) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    fund.takeFund(projectamount);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    Project newProject \u003d projectManager.addProject(projectname, projectamount);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    int projectsize \u003d projectManager.projectmap.size();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    ui.printAddProject(newProject, projectsize);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    BeforeAfterCommand.afterCommand(storage, projectManager);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    ui.exceptionMessage(\"     :( OOPS!!! There is not enough fund. \""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                            + \"Please decrease the amount of fund assigned\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (NumberFormatException | AlphaNUSException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.exceptionMessage(\"\\t\" + \"Amount of funds should be a number!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.exceptionMessage(\"\\t\" + \"Incorrect input format\\n\" + \"\\t\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    + \"Correct Format: \" + commandformat.addProjectFormat());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the delete project command to delete a project from the projectmap."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void deleteProject(String input, Ui ui, Storage storage, Fund fund) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            BeforeAfterCommand.beforedoCommand(storage, projectManager);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] split \u003d input.split(\"pr/\", 2);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            split \u003d cleanStrStr(split);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Incorrect input\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Correct Format: \" + commandformat.deleteProjectFormat());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } //TODO refactor"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String projectname \u003d split[1];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (projectname.isEmpty()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Project name cannot be empty!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Correct Format: \" + commandformat.deleteProjectFormat());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } //TODO refactor"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (!projectManager.projectmap.containsKey(projectname)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.println(\"\\t\" + \"Project does not exist!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } //TODO refactor"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            double budget \u003d projectManager.projectmap.get(projectname).budget;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fund.retrieveFund(budget);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            Project deletedProject \u003d projectManager.deleteProject(projectname);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int projectsize \u003d projectManager.projectmap.size();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.printDeleteProject(deletedProject, projectsize, fund);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            BeforeAfterCommand.afterCommand(storage, projectManager);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (AlphaNUSException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"\\t\" + \"☹ OOPS!!! Wrong input format!\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"\\n\\tCorrect input format is: delete project pr/PROJECT_NAME\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the goto project command to set a project in the projectmap"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * as the current project that the user is working on."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    //@return Returns the Project object of the project that was gone to."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void goToProject(String input, Ui ui) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            split \u003d cleanStrStr(split);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.exceptionMessage(\"\\t\" + \"Incorrect input format\\n\" + \"\\t\" "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    + \"Correct Format: \" + commandformat.gotoProjectFormat());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } //TODO refactor"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            int projectindex \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (projectManager.projectmap.isEmpty()) { //TODO refactor"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ui.printNoProjectMessage();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } //TODO refactor"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String currentprojectname \u003d projectManager.gotoProject(projectindex);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.printGoToProject(currentprojectname);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"\\t\" + \"Please make sure that the index is an Integer\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"\\t\" + \"Correct Format: \" + commandformat.gotoProjectFormat());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"\\t\" + \"No existing project with that index\\n\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"\\t\" + \"Correct Format: \" + commandformat.gotoProjectFormat());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the set fund command to set a fund to all projects."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Command format: set fund am/AMOUNT_OF_FUND."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund  the total fund the that the organisation owns"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setFund(String input, Ui ui, Fund fund) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"am/\", 2);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Double amount \u003d Double.parseDouble(split[1]);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (amount \u003c MIN_FUND) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value. \");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (amount \u003e MAX_FUND) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value of no more than 500,000. \");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (fund.getFund() \u003d\u003d 0.0) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    fund.setFund(amount);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    ui.printSetFundMessage(fund);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    ui.exceptionMessage(\"     :( OOPS!!! The fund is set already. \""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                            + \"Please use change fund command to modify instead.\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The amount of fund must be \""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"a positive number and mustser not be empty!\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the add fund command to add fund value to all projects"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Command format: add fund add/AMOUNT_OF_FUND."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund  the total fund the that the organisation owns"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addFund(String input, Ui ui, Fund fund) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"add/\", 2);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Double amount \u003d Double.parseDouble(split[1]);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (amount \u003c MIN_FUND) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value. \");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (amount \u003e MAX_FUND) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value of no more than 500,000. \");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (fund.getFund() + amount \u003e\u003d MAX_FUND) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( Oops!!! The total fund will be above the limit. You can still add \""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                        + (MAX_FUND - fund.getFund()) + \"dollars to your current fund!\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                fund.addFund(amount);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printAddFundMessage(fund, amount);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The amount of fund must be\" "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"a positive number and mustser not be empty!\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the add fund command to add fund value to specific project."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Command Format: assign fund pr/PROJECT_NAME am/AMOUNT_OF_FUND."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund  the total fund the that the organisation owns"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void assignFund(String input, Ui ui, Fund fund) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"pr/| am/\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String projectname \u003d split[1];"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Double amount \u003d Double.parseDouble(split[2]);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (!projectManager.projectmap.containsKey(projectname)) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                System.out.println(\"\\t\" + \"Project does not exist!\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (amount \u003c MIN_FUND) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value. \");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (amount \u003e MAX_FUND) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value of no more than 500,000. \");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (fund.getFundRemaining() \u003e\u003d amount) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    fund.takeFund(amount);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    projectManager.assignBudget(projectname, amount);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    ui.printAssignFundMessage(fund, amount, projectManager.projectmap.get(projectname));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    ui.exceptionMessage(\"     :( OOPS!!! There is not enough fund. \""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                            + \"Please decrease the amount of fund assigned)\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Please input the correct command \""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                            + \"format (refer to user guide)\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! There is no project with that name yet, \""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                            + \"please add the project first!\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The amount of fund must be\" "
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"a positive number and must not be empty!\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Show the current fund status."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund  the total fund the that the organisation owns"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void showFund(String input, Ui ui, Fund fund) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(Ui.line);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(Ui.line);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the change fund command to add fund value to all projects."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * TODO future implementation: user need to key in password to enable this action."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Command format: change fund new/AMOUNT_OF_FUND."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund the total fund the that the organisation owns"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void resetFund(String input, Ui ui, Fund fund) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"new/\", 2);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Double newFund \u003d Double.parseDouble(split[1]);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (newFund \u003c MIN_FUND) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value. \");"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (newFund \u003e MAX_FUND) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please enter a positive value of no more than 500,000. \");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (fund.getFundTaken() \u003e newFund) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( Oops!!! new fund should not be more than the sum of assigned budgets!\\n \""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                        + \"   You have assigned \" + (fund.getFundTaken()) + \" dollars to your projects!\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                fund.setFund(newFund);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printResetFundMessage(fund, newFund);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The amount of fund must be a positive\" "
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"number and must not be empty!\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the backup command to load sample data from storage for PE testing."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund the total fund the that the organisation owns."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage Storage for managing data to be stored on local disk."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param commandlist History of commands."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws AlphaNUSException for reading errors from json file"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void backupProjects(Ui ui, Fund fund, Storage storage, ArrayList\u003cString\u003e commandlist)"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                                throws AlphaNUSException {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Fund backupfund \u003d storage.readFromBackupFundFile();"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(backupfund.getFund(), backupfund.getFundTaken(), backupfund.getFundRemaining());"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        LinkedHashMap\u003cString, Project\u003e projectmap \u003d storage.readFromBackupProjectsFile();"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.loadBackup(projectmap);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ArrayList\u003cString\u003e backupcommandlist \u003d storage.readFromBackupCommandsFile();"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        commandlist.clear();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        commandlist.addAll(backupcommandlist);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.printBackupComplete(projectmap.size(), backupfund);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the reduce budget command to reduce fund assigned to a specific project."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Command Format: reduce budget pr/PROJECT_NAME am/AMOUNT_OF_FUND."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund  the total fund the that the organisation owns"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void reduceBudget(String input, Ui ui, Fund fund) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"pr/| am/\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String projectname \u003d split[1];"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Double amount \u003d Double.parseDouble(split[2]);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (!projectManager.projectmap.containsKey(projectname)) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                System.out.println(\"\\t\" + \"☹ OOPS!!! Project does not exist!\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (amount \u003c 0 || amount \u003e 500000) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Please enter a positive value of no more than 500,000.  \");"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                double newbudget \u003d projectManager.projectmap.get(projectname).budget - amount;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (newbudget \u003c projectManager.projectmap.get(projectname).spending) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    ui.exceptionMessage(\"     ☹ OOPS!!! The remaining budget is not sufficient.  \");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    showBudget(\"show budget pr/\" + projectname, ui);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                projectManager.projectmap.get(projectname).budget \u003d newbudget;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                projectManager.projectmap.get(projectname).remaining -\u003d amount;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                fund.retrieveFund(amount);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printReduceBudgetMessage(fund, amount, projectManager.projectmap.get(projectname), projectname);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There is no project with that name yet, please add the project first!\");"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The amount of fund must be a positive number and must not be empty!\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* Deadline *\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the add todo command."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: add todo d/DESCRIPTION."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addTodo(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"d/\");"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String description \u003d split[1];"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Task todo \u003d new Task(description);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasklist.addTask(todo);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printAddedMessage(todo,tasklist);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format. Correct format: add todo d/DESCRIPTION\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the add deadline command."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: add deadline d/DESCRIPTION by/DATE."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addDeadline(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\"d/|by/\");"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String taskDescription \u003d splitspace[1];"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String date \u003d splitspace[2];"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date ddl \u003d sdf.parse(date);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskDescription, ddl);"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasklist.addTask(deadline);"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printAddedMessage(deadline, tasklist);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format. \""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"Correct format: add deadline d/DESCRIPTION by/DATE\");"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong date format. Correct format: dd-MM-yyyy\");"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the done command and sets the task specified as done."
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: done id/ID."
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void done(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] arr \u003d input.split(\"id/\", 2);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int numdone \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (numdone \u003e tasklist.size()) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Required task is not found.\");"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasklist.get(numdone).setDone();"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printDoneMessage(numdone, tasklist);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format. Correct format: done id/ID\");"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The id must be a positive number and must not be empty!\");"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the delete task command and removes task from tasklist."
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: delete id/ID."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void deleteTask(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\"id/\", 2);"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int id \u003d Integer.parseInt(splitspace[1]) - 1;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (id \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Required task is not found.\");"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printDeleteTaskMessage(id, tasklist);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasklist.deleteTask(id);"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format! Correct format: delete id/ID\");"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The id must be a positive number and must not be empty!\");"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the delete task command and removes task from tasklist."
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: find task key/KEY_WORD."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param taskList Tasklist of the user."
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void findTask(String input, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"key/\", 2);"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String keyword \u003d split[1];"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            TaskList resultList \u003d new TaskList();"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (taskList.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    resultList.addTask(taskList.get(i));"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (resultList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     No matching tasks!\");"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printList(resultList,\"find\");"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format! Correct format: find task key/KEY_WORD\");"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the list tasks command."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: list tasks."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param taskList Tasklist of the user."
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void listTasks(String input, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! The tasklist is empty for now.\");"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printList(taskList,\"list\");"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format! Correct format: list tasks\");"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the View Schedule command and outputs the schedule for the specific date entered in the input."
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: view schedule d/DATE."
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void viewSchedule(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            TaskList findlist \u003d new TaskList();"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"d/\", 2);"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String datestring \u003d split[1];"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date date \u003d sdf.parse(datestring);"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (Task tasks : tasklist.returnArrayList()) {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                System.out.println(sdf.format(date));"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                System.out.println(tasks.getDateStr());"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (sdf.format(date).equals(tasks.getDateStr())) {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    findlist.addTask(tasks);"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (findlist.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     No schedule on that day!\");"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printList(findlist, \"View Schedule\");"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong command format. Correct format: view schedule d/DATE\");"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong date format. Correct format: dd-MM-yyyy\");"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the DoAfter command and adds a task,"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * which has to be done after another task or a specific date and time,"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void doAfter(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (taskTime.contains(\"/\")) {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                DoAfterTasks after \u003d new DoAfterTasks(taskDescription, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                tasklist.addTask(after);"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printAddedMessage(after, tasklist);"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                DoAfterTasks after \u003d new DoAfterTasks(taskDescription, taskTime);"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                tasklist.addTask(after);"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printAddedMessage(after, tasklist);"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! The description of a DoAfter cannot be empty.\");"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong. \");"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the within command and adds a withinPeriodTask to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void within(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitand \u003d splittime[1].split(\"and \", 2);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String taskstart \u003d splitand[0];"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String taskend \u003d splitand[1];"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date formattedtimestart \u003d dataformat.parse(taskstart);"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date formattedtimeend \u003d dataformat.parse(taskend);"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            WithinPeriodTask withinPeriodTask \u003d new WithinPeriodTask(taskDescription,"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    dataformat.format(formattedtimestart), dataformat.format(formattedtimeend));"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasklist.addTask(withinPeriodTask);"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printAddedMessage(withinPeriodTask, tasklist);"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! The description of a withinPeriodTask cannot be empty.\");"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the snooze command and automatically postpone the selected deadline task by 1 hour."
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: snooze id/ID."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void snooze(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] arr \u003d input.split(\"id/\", 2);"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int id \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (id \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Required task is not found.\");"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (tasklist.get(id).getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Date formattedtime \u003d tasklist.get(id).getDate();"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                calendar.setTime(formattedtime);"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                calendar.add(Calendar.DAY_OF_YEAR, 1);"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                tasklist.get(id).setDate(newDate);"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printSnoozeMessage(tasklist.get(id));"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please select a deadline type task to snooze.\");"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format. Correct format: snooze id/ID \");"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The id and number of days to snooze must be \""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"a positive integer and must not be empty!\");"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the postpone command and postpone the selected deadline task by required number of hours."
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: postpone id/ID n/DAYS."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void postpone(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"id/| n/\", 3);"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int id \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int delaydays \u003d Integer.parseInt(split[2]);"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (id \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Required task is not found.\");"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (tasklist.get(id).getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Date formattedtime \u003d tasklist.get(id).getDate();"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                calendar.setTime(formattedtime);"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                calendar.add(Calendar.DAY_OF_MONTH, delaydays);"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                tasklist.get(id).setDate(newDate);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printPostponeMessage(tasklist.get(id));"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please select a deadline type task to postpone.\");"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format. \""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"Correct format:\u0027postpone id/ID n/DAYS\u0027\");"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The id and number of days to postpone must be \""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"a positive integer and must not be empty!\");"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process the reschedule command and reschedule the selected deadline task."
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * format: reschedule id/ID d/DATE."
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input    Input from the user."
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui       Ui that interacts with the user."
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void reschedule(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"id/| d/\", 3);"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int id \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String delay \u003d split[2];"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (id \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Required task is not found.\");"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (tasklist.get(id).getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Date formattedtime \u003d sdf.parse(delay);"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                tasklist.get(id).setDate(formattedtime);"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printRescheduleMessage(tasklist.get(id));"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! Please select a deadline type task to reschedule.\");"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format. \""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"Correct format: reschedule id/ID d/DATE\");"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The id must be positive integer and must not be empty!\");"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong date format. Correct format: dd-MM-yyyy\");"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* Payments *\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@karansarat"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the edit command, amends the data of a payee or payment already existing in the records."
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * INPUT FORMAT: edit p/PAYEE v/INVOICE f/FIELD r/REPLACEMENT"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void edit(String input, Ui ui) {"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\"edit \", 2);"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (input.contains(\"v/\")) {"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"p/|v/|f/|r/\");"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                PaymentManager.editPayment(splitpayments[1], splitpayments[2],"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    splitpayments[3], splitpayments[4], managermap, ui);"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"p/|f/|r/\");"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                PaymentManager.editPayee(splitpayments[1], splitpayments[2],"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    splitpayments[3], managermap, ui);"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Please input the correct command format\""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"The input format is: edit p/PAYEE v/INVOICE f/FIELD r/REPLACEMENT\");"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the delete command."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * INPUT FORMAT: delete payment p/payee i/item."
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws AlphaNUSException for reading errors from json file"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     *"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void deletePayment(String input, Ui ui, Storage storage) throws AlphaNUSException {"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String payeename \u003d new String();"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            BeforeAfterCommand.beforedoCommand(storage, projectManager);"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] arr \u003d input.split(\"payment \", 2);"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d arr[1].split(\"p/|i/\");"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            split \u003d cleanStrStr(split);"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            payeename \u003d split[1];"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String itemname \u003d split[2];"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Payments deleted \u003d PaymentManager.deletePayments(payeename, itemname, managermap);"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            projectManager.projectmap.get(payeename).retrieveBudget(deleted.cost);"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printDeletePaymentMessage(deleted, managermap.get(payeename).payments.size());"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            BeforeAfterCommand.afterCommand(storage, projectManager);"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | AlphaNUSException e) {"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format\\n\""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"     The correct input format is:[delete payment p/PAYEE i/ITEM]\");"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Payment not found, check item field again!\");"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Payee name provided is not correct!\");"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Set\u003cString\u003e dict \u003d storage.readFromDictFile();"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printSuggestion(dict, input, payeename);"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the add payment command, saves a new payment under a specified payee."
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * INPUT FORMAT: add payment p/payee i/item c/111 v/invoice"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addPayment(String input, Ui ui, Storage storage, Set\u003cString\u003e dict) {"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            BeforeAfterCommand.beforedoCommand(storage, projectManager);"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String currentprojectname \u003d projectManager.currentprojectname;"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\"payment \", 2);"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitpayments \u003d splitspace[1].split(\"p/|i/|c/|v/\");"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String payee \u003d splitpayments[1];"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String item \u003d splitpayments[2];"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            double cost \u003d Double.parseDouble(splitpayments[3]);"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (cost \u003c 0) {"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     :( OOPS!!! The cost should be a positive number.\");"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (cost \u003e projectManager.projectmap.get(currentprojectname).getRemaining()) {"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printInsufficientBudget(projectManager);"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                projectManager.projectmap.get(currentprojectname).addPayment(cost);"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String invoice \u003d splitpayments[4];"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Payments payment \u003d PaymentManager.addPayments(currentprojectname, payee, "
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    item, cost, invoice, managermap, dict);"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                int paymentsSize \u003d managermap.get(payee).payments.size();"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printAddPaymentMessage(payment, paymentsSize, currentprojectname);"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                BeforeAfterCommand.afterCommand(storage, projectManager);"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NullPointerException | AlphaNUSException e) {"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! There is no payee with that name yet, please add the payee first!\");"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the add payee command, saves a new payee inside managermap."
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * INPUT FORMAT: add payee p/payee e/email m/matricNum ph/phoneNum"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage used to read from dict.json."
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addPayee(String input, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            BeforeAfterCommand.beforedoCommand(storage, projectManager);"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String currentProjectName \u003d projectManager.currentprojectname;"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\"payee \", 2);"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitpayments \u003d splitspace[1].split(\"p/|e/|m/|ph/\");"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String payeename \u003d splitpayments[1];"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String email \u003d splitpayments[2];"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String matricNum \u003d splitpayments[3];"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String phoneNum \u003d splitpayments[4];"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Payee payee \u003d PaymentManager.addPayee(currentProjectName, payeename, "
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                email, matricNum, phoneNum, managermap);"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int payeesize \u003d managermap.size();"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printAddPayeeMessage(splitpayments[1], payee, payeesize, currentProjectName);"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            BeforeAfterCommand.afterCommand(storage, projectManager);"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (AlphaNUSException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! There is no payee with that name yet, please add the payee first!\");"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There is a payee with that name in the record!\");"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the delete payee command, saves a new payee inside managermap."
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * INPUT FORMAT: delete payee p/payee"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * "
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws AlphaNUSException for reading errors from json file"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void deletePayee(String input, Ui ui, Storage storage) throws AlphaNUSException {"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String payeename \u003d new String();"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            BeforeAfterCommand.beforedoCommand(storage, projectManager);"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String currentprojectname \u003d projectManager.currentprojectname;"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\"payee \", 2);"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitpayments \u003d splitspace[1].split(\"p/\");"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            payeename \u003d splitpayments[1];"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Payee payee \u003d PaymentManager.deletePayee(payeename, managermap);"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int payeesize \u003d managermap.size();"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printdeletePayeeMessage(splitpayments[1], payee, payeesize, currentprojectname);"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            BeforeAfterCommand.afterCommand(storage, projectManager);"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            double totalspending \u003d 0;"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (Payments p : payee.payments) {"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                totalspending +\u003d p.cost;"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            projectManager.projectmap.get(currentprojectname).retrieveBudget(totalspending);"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (AlphaNUSException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format!\""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"The correct format is [delete payee p/PAYEE_NAME]\");"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There is no payee with that name yet, please add the payee first!\");"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Set\u003cString\u003e dict \u003d storage.readFromDictFile();"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printSuggestion(dict, input, payeename);"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the find command and outputs a list of payments from the payee name"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * given."
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * "
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws AlphaNUSException for reading errors from json file"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void findPayee(String input, Storage storage, Ui ui) throws AlphaNUSException {"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String payee \u003d new String();"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\"payee \", 2);"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitpayments \u003d splitspace[1].split(\"p/\");"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            payee \u003d splitpayments[1];"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(payee);"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            LinkedHashMap\u003cString, Project\u003e projectMapClone \u003d (LinkedHashMap\u003cString, Project\u003e) "
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                projectManager.projectmap.clone();"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Payee found \u003d PaymentManager.findPayee(projectMapClone, projectManager.currentprojectname, payee);"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printFoundMessage(found);"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There is no such payee in the records\");"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Set\u003cString\u003e dict \u003d storage.readFromDictFile();"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printSuggestion(dict, input, payee);"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the find command and outputs a list of payments from the payee name given."
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui    Ui that interacts with the user."
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws AlphaNUSException for reading errors from json file"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void listPayments(String input, Storage storage, Ui ui) throws AlphaNUSException {"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String prName \u003d new String();"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String payeeName \u003d new String();"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (input.contains(\"pr/\")) {"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitspace \u003d input.split(\"payments \", 2);"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"pr/\");"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                prName \u003d splitpayments[1];"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (!projectManager.projectmap.containsKey(prName)) {"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    throw new IllegalCallerException();"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                projectManager.gotoProject(prName);"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (input.contains(\"p/\")) {"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitspace \u003d input.split(\"payments \", 2);"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"p/\");"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                HashMap\u003cString, Payee\u003e managerMap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (!managerMap.containsKey(splitpayments[1])) {"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    payeeName \u003d splitpayments[1];"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printPaymentList(splitpayments[1], managerMap.get(splitpayments[1]).payments);"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managerMap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ArrayList\u003cArrayList\u003cPayments\u003e\u003e listOfPayments \u003d PaymentManager.listOfPayments(managerMap);"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            prName \u003d projectManager.currentprojectname;"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (listOfPayments.get(0).isEmpty() \u0026\u0026 listOfPayments.get(1).isEmpty() \u0026\u0026 listOfPayments.get(2).isEmpty()) {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! There are no payments yet!\");"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (ArrayList\u003cPayments\u003e lists : listOfPayments) {"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (lists.isEmpty()) {"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printPaymentList(prName, lists, lists.get(0).status);"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There are no payees with that name!\");"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Set\u003cString\u003e dict \u003d storage.readFromDictFile();"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printSuggestion(dict, input, payeeName);"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalCallerException e) {"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There are no projects with that name!\");"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Set\u003cString\u003e dict \u003d storage.readFromDictFile();"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printSuggestion(dict, input, prName);"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please select a project using the goto command first!\");"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Outputs and prints a list of payees based on user input."
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input user input as a string"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage to read from dict.json"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui user interface used to print messages"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws AlphaNUSException for reading errors from json file"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void listPayees(String input, Storage storage, Ui ui) throws AlphaNUSException {"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String prName \u003d new String();"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (input.contains(\"pr/\")) {"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitspace \u003d input.split(\"payees \", 2);"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"pr/\");"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                prName \u003d splitpayments[1];"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (!projectManager.projectmap.containsKey(prName)) {"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                projectManager.gotoProject(splitpayments[1]);"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managerMap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (managerMap.isEmpty()) {"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printPayeeList(managerMap);"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There are no payees to list!\");"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There are no such projects!\");"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Set\u003cString\u003e dict \u003d storage.readFromDictFile();"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printSuggestion(dict, input, prName);"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please select a project using the goto command first!\");"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process total cost command and calculate the total cost of a payee."
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Command format: total cost p/PAYEE_NAME"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage storage of the programme."
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void totalCost(String input, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"p/\", 2);"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String payeeName \u003d split[1];"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String currentprojectname \u003d projectManager.currentprojectname;"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            double totalcost \u003d 0;"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            // for (Payments p:PaymentManager.findPayee(payeeName, managermap)) {"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            //     totalcost +\u003d p.cost;"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            // }"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printTotalCostMessage(payeeName, totalcost, currentprojectname);"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Wrong input format. Correct input format: total cost p/PAYEE_NAME\");"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * reminder of the payments based on the status and deadline."
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage storage of the programme."
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void reminder(Ui ui, Storage storage) throws AlphaNUSException {"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ArrayList\u003cProject\u003e projectslist \u003d projectManager.listProjects();"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ArrayList\u003cPayments\u003e approved \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ArrayList\u003cPayments\u003e tobesorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if (projectslist.isEmpty()) {"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printNoProjectMessage();"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        for (Project project:projectslist) {"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap \u003d project.managermap;"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (Payee payee : managermap.values()) { // iterate through the payees"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                for (Payments payment : payee.payments) { // iterate through the payments"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    if (payment.status \u003d\u003d status.APPROVED) {"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                        approved.add(payment);"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                        tobesorted.add(payment);"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Collections.sort(tobesorted);"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.printReminderMessage(tobesorted);"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Processes the find command and outputs a list of payments from the payee name given."
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void listAllPayments(String input, Ui ui) {"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (input.contains(\"pr/\")) {"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitspace \u003d input.split(\"payments \", 2);"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"pr/\");"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                projectManager.gotoProject(splitpayments[1]);"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } else if (input.contains(\"p/\")) {"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitspace \u003d input.split(\"payments \", 2);"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"p/\");"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                HashMap\u003cString, Payee\u003e managerMap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printPaymentList(projectManager.currentprojectname, managerMap.get(splitpayments[1]).payments);"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            HashMap\u003cString, Payee\u003e managerMap \u003d projectManager.getCurrentProjectManagerMap();"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ArrayList\u003cArrayList\u003cPayments\u003e\u003e listOfPayments \u003d PaymentManager.listOfPayments(managerMap);"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if (listOfPayments.get(0).size() \u003d\u003d 0 \u0026\u0026 listOfPayments.get(1).size() \u003d\u003d 0"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    \u0026\u0026 listOfPayments.get(2).size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! There are no payments to list!\");"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (ArrayList\u003cPayments\u003e lists : listOfPayments) {"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if (lists.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.printPaymentList(projectManager.currentprojectname, lists, lists.get(0).status);"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format!\""
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"     The correct format is [list payments] or [list payments pr/PROJECT_NAME] \""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"or [list payments p/PAYEE]\");"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Process show budget function and show the budget status for a chosen project."
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Input Format: show budget pr/PROJECT_NAME"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void showBudget(String input, Ui ui) {"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] split \u003d input.split(\"pr/\");"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String projectname \u003d split[1];"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            projectManager.gotoProject(projectname);"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String currentproject \u003d projectManager.currentprojectname;"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Project p \u003d projectManager.projectmap.get(currentproject);"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.print(Ui.line);"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(\"\\t The budget for this project is as follows:\");"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(\"\\t Total budget: \" + p.getBudget());"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(\"\\t Spent budget: \" + p.getSpending());"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(\"\\t Remaining budget: \" + p.getRemaining());"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.print(Ui.line);"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     :( OOPS!!! Wrong input error!\""
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"The correct input format is: show budget pr/PROJECT_NAME\");"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d* Command History *\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * processes the input command and stores it in a json file."
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage Storage that stores the input commands entered by the user."
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void commandHistory(String input, Ui ui, Storage storage) throws AlphaNUSException {"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Date date \u003d cal.getTime();"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String formattedDate \u003d dateFormat.format(date);"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String commandTime \u003d input + \" ~ \" + formattedDate;"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        storage.writeToCommandsFile(commandTime);"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * prints all the input commands stored in the json file."
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage Storage that stores the input commands entered by the user."
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void history(Ui ui, Storage storage) throws AlphaNUSException {"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        commandList \u003d storage.readFromCommandsFile();"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.printHistoryList(commandList);"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * prints the input commands within the period given by the user."
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage Storage that stores the input commands entered by the user."
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void viewhistory(String input, Ui ui, Storage storage) throws ParseException, AlphaNUSException {"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 3);"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitslash \u003d splitspace[2].split(\"/\", 2);"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitdates \u003d splitslash[1].split(\" \", 3);"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String date1 \u003d splitdates[0];"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date dateFirst \u003d sdf.parse(date1);"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String date2 \u003d splitdates[2];"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date dateSecond \u003d sdf.parse(date2);"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            commandList \u003d storage.readFromCommandsFile();"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ArrayList\u003cString\u003e viewhistory \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (int i \u003d 0; i \u003c commandList.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String token \u003d null;"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String token1 \u003d null;"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitDateCommand \u003d commandList.get(i).split(\"~\", 2);"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                for (int j \u003d 0; j \u003c splitDateCommand.length; j \u003d j + 1) {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    token \u003d splitDateCommand[j];"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String[] splitDateTime \u003d token.split(\" \", 3);"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                for (int k \u003d 0; k \u003c splitDateTime.length; k \u003d k + 1) {"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    if (k \u003d\u003d 1) {"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                        token1 \u003d splitDateTime[k];"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Date dateCommand \u003d sdf.parse(token1);"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if ((dateCommand.compareTo(dateFirst)) \u003e\u003d 0) {"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    if ((dateCommand.compareTo(dateSecond)) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                        viewhistory.add(commandList.get(i));"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printviewHistoryList(viewhistory, date1, date2);"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"\\t\" + \"☹ OOPS!!! Wrong input format!\""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    + \"\\n\\tCorrect input format is: view history h/DATE_1 to DATE_2\");"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * undoes the previous command entered by the user."
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage Storage that stores the project map."
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void undo(Storage storage, Ui ui) throws AlphaNUSException {"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.projectmap \u003d storage.readFromUndoFile();"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.undoMessage();"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * redoes the previous command entered by the user."
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage Storage that stores the project map."
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void redo(Storage storage, Ui ui) throws AlphaNUSException {"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.projectmap \u003d storage.readFromRedoFile();"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.redoMessage();"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 64,
      "lijiayu980606": 1080,
      "leowyh": 128,
      "E0373902": 6
    }
  },
  {
    "path": "src/main/java/common/AlphaNUSException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * A class for exceptions specific to AlphaNUS."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class AlphaNUSException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates an instance of an exception specific to AlphaNUS."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param message Message describing the exception thrown."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public AlphaNUSException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 2,
      "leowyh": 13
    }
  },
  {
    "path": "src/main/java/common/CommandFormat.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class CommandFormat {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String loadBackupFormat() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"load\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String addProjectFormat() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"add project pr/PROJECT_NAME am/AMOUNT_OF_FUND\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String deleteProjectFormat() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"delete project pr/PROJECT_NAME\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String listProjectFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"list projects\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String gotoProjectFormat() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"goto PROJECT_INDEX_IN_LIST\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String addPayeeFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"add payee p/PAYEE e/EMAIL m/MATRICNUM ph/PHONENUM\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String addPaymentFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"add payment p/PAYEE i/ITEM c/COST v/INVOICE\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String deletePaymentFormat() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"delete payment p/PAYEE i/ITEM\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String editPaymentFormat() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return \"edit p/PAYEE i/ITEM f/FIELD r/REPLACEMENT\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String listPaymentFormat() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"list payments\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String findPayeeFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return \"find p/PAYEE\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String getPayeeFormat() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"getpayee PAYEE\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String deletePayeeFormat() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"delete payee p/PAYEE\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String totalCostFormat() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"total cost p/PAYEE_NAME\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String setFundFormat() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"set fund am/AMOUNT\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String addFundFormat() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"add fund add/AMOUNT\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String assignFundFormat() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"assign fund pr/PROJECT_NAME am/AMOUNT\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String reducebudgetFormat() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"reduce budget pr/PROJECT_NAME am/AMOUNT\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String resetFundFormat() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"reset fund am/AMOUNT\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String reminderFormat() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"reminder\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String showFundFormat() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"show fund\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String showBudgetFormat() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"show budget pr/PROJECT_NAME\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String addTodoFormat() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"add todo d/DESCRIPTION\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String addDeadlineFormat() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"add deadline d/DESCRIPTION by/DATE.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String doneTaskFormat() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"done id/ID\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String deleteTaskFormat() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"delete id/ID\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String findTaskFormat() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"find task key/KEY_WORD\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String listTasksFormat() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"list tasks\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String viewScheduleFormat() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"view schedule d/DATE\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String snoozeFormat() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"snooze id/ID\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String postponeFormat() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"postpone id/ID n/DAYS\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String rescheduleFormat() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"reschedule id/ID d/DATE\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String historyFormat() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"history\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String viewhistoryFormat() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"view history h/DATE_1 to DATE_2\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String exitFormat() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 5,
      "lijiayu980606": 88,
      "leowyh": 51
    }
  },
  {
    "path": "src/main/java/payment/Field.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "//@@author karansarat"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": "enum Field {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    PAYEE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    EMAIL,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    MATRIC,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    PHONE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    ITEM,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    COST,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    INV,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    STATUS"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 12,
      "leowyh": 2
    }
  },
  {
    "path": "src/main/java/payment/Payee.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": "//@@author karansarat"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": " * Payments Class to manage the payment details of an item."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Payee {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String project;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String payee;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String email;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String matricNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String phoneNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public ArrayList\u003cPayments\u003e payments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Creates a Payee object with the payee\u0027s information and list of payments."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Payee\u0027s name."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param email Payee\u0027s email."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param matricNum Payee\u0027s matriculation number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param phoneNum Payee\u0027s phone number."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public Payee(String project, String payee, String email, String matricNum, String phoneNum) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.project \u003d project; "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.payee \u003d payee;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.matricNum \u003d matricNum;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.phoneNum \u003d phoneNum;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.payments \u003d new ArrayList\u003cPayments\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints the details contained in a payee object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printPayee() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Project: \" + this.project);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Payee: \" + this.payee);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Email: \" + this.email);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Matric No: \" + this.matricNum);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Phone No: \" + this.phoneNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 41,
      "leowyh": 3
    }
  },
  {
    "path": "src/main/java/payment/PaymentManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import project.Project;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.Status;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "//@@author karansarat"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": " * PaymentManager for managing Payments objects and PaymentForms from the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": " * PaymentsList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public abstract class PaymentManager {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Takes in a string describing a field of payee/payment objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Returns a Field enum object that describes the field."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param str string describing field"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return a Field object corresponding to str."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    private static Field strToField(String str) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        switch (str.toUpperCase()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"PAYEE\"):"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.PAYEE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"EMAIL\"):"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.EMAIL;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"MATRIC\"):"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.MATRIC;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"PHONE\"):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.PHONE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"ITEM\"):"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.ITEM;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"COST\"):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.COST;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"INVOICE\"):"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.INV;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"STATUS\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.STATUS;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        case (\"DEADLINE\"):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            return Field.DEADLINE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Finds a Payee object from any project using the payee name."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * User does not have to goto each project to try to find payee."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param projectMap LinkedHashMap containing all the projects in AlphaNUS."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param curr the name of the current project user is using."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param name name of the payee to find"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return the Payee object required to find"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static Payee findPayee(LinkedHashMap\u003cString, Project\u003e projectMap, String curr, String name) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Set\u003cString\u003e projectnames \u003d projectMap.keySet();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String currProject \u003d curr;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        while (!projectMap.get(currProject).managermap.containsKey(name)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            projectnames.remove(currProject);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (projectnames.isEmpty()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            currProject \u003d projectnames.iterator().next();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return projectMap.get(currProject).managermap.get(name);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Modifies the specified field of a Payee object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Name of payee"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param fieldToAmend field of payee to amend"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param replace what to write to the field"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap Hashmap of all payees in project"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Print messages to show payee has been edited."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static void editPayee(String payee, String fieldToAmend, String replace,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap, Ui ui) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Field field \u003d strToField(fieldToAmend);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        if (field \u003d\u003d Field.PAYEE) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            managermap.get(payee).payee \u003d replace;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } else if (field \u003d\u003d Field.EMAIL) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            managermap.get(payee).email \u003d replace;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } else if (field \u003d\u003d Field.MATRIC) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            managermap.get(payee).matricNum \u003d replace;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } else if (field \u003d\u003d Field.PHONE) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            managermap.get(payee).phoneNum \u003d replace;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ui.printEditMessage(managermap.get(payee));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Modifies the specified field of a Payment object."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee name of payee"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param item description of payment "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param fieldToAmend which field to amend"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param replace what to replace in that field"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap Hashmap of all payees in project"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Print messages to show payment has been edited."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static void editPayment(String payee, String item, String fieldToAmend, String replace,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        HashMap\u003cString, Payee\u003e managermap, Ui ui) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Field field \u003d strToField(fieldToAmend);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payments payment : managermap.get(payee).payments) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (payment.item.equals(item)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                if (field \u003d\u003d Field.ITEM) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    payment.item \u003d replace;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else if (field \u003d\u003d Field.COST) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    payment.cost \u003d Double.parseDouble(replace);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else if (field \u003d\u003d Field.INV) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    payment.inv \u003d replace;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else if (field \u003d\u003d Field.STATUS) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    if (replace.equalsIgnoreCase(\"pending\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        payment.status \u003d Status.PENDING;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    } else if (replace.equalsIgnoreCase(\"approved\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        payment.status \u003d Status.APPROVED;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    } else if (replace.equalsIgnoreCase(\"overdue\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        payment.status \u003d Status.OVERDUE;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printEditMessage(payment, payee);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Organises all payments in a managermap, output according to status."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap Hashmap of all payees in project"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return a list containing a list each for pending, overdue and approved payments."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static ArrayList\u003cArrayList\u003cPayments\u003e\u003e listOfPayments(HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cArrayList\u003cPayments\u003e\u003e listOfPayments \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cPayments\u003e overdue \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cPayments\u003e pending \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cPayments\u003e approved \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payee payee : managermap.values()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (Payments payment : payee.payments) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                if (payment.status \u003d\u003d Status.PENDING) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    pending.add(payment);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else if (payment.status \u003d\u003d Status.OVERDUE) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    overdue.add(payment);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    approved.add(payment);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        listOfPayments.add(pending);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        listOfPayments.add(overdue);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        listOfPayments.add(approved);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return listOfPayments;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Add the Payments object details to PaymentsList."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param project Name of project"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Name of payee"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param item Description of item"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param cost Amount billed in invoice"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param inv Invoice ID"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap Hashmap containing all payees in project"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param dict set of strings containing the vocab used by user"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return returns a Payment object representing the newly created payment"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @throws AlphaNUSException when error is found in writing to dict.json"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static Payments addPayments(String project, String payee, String item, double cost, String inv, "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            HashMap\u003cString, Payee\u003e managermap, Set\u003cString\u003e dict) throws AlphaNUSException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Payments pay \u003d new Payments(project, payee, item, cost, inv);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        pay.paymentToDict(dict);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        managermap.get(payee).payments.add(pay);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return pay;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Deletes an existing payment object."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Payee name."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param item Description of payment item"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap Hashmap containing all payees in project."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return the payee object that was deleted from managermap to print out a confirmation."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static Payments deletePayments(String payee, String item, "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        while (i \u003c managermap.get(payee).payments.size()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (managermap.get(payee).payments.get(i++).item.equals(item)) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Double cost \u003d managermap.get(payee).payments.get(--i).cost;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String inv \u003d managermap.get(payee).payments.get(i).inv;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String prName \u003d managermap.get(payee).payments.get(i).project;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Payments deleted \u003d new Payments(prName, payee, item, cost, inv);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                managermap.get(payee).payments.remove(i);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                checkStatus(deleted);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                return deleted;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Add the Payee object details to managermap."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param project Name of project"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Name of payee"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param email Email address of payee"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param matricNum Matriculation number of payee"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param phoneNum Phone number of payee"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap Hashmap containing all payees in project"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return Payee object that user created"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static Payee addPayee(String project, String payee, String email, String matricNum, String phoneNum,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                                 HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        if (managermap.keySet().contains(payee)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Payee payeeNew \u003d new Payee(project, payee, email, matricNum, phoneNum);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        managermap.put(payee, payeeNew);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return payeeNew;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Deletes an existing payee object."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Payee name."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap Hashmap containing all payees in project."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return the payee object that was deleted from managermap to print out a confirmation."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static Payee deletePayee(String payee, HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        if (!managermap.containsKey(payee)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Payee payeeDeleted \u003d managermap.get(payee);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        checkStatus(payeeDeleted);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        managermap.remove(payee);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return payeeDeleted;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * This function scans through every payment in managermap and changes its status if needed."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap The managermap to scan through."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static void checkStatus(HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payee payee : managermap.values()) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            checkStatus(payee);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * This function scans through every payment in a payee and changes its status if needed."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee The payee to scan through."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static void checkStatus(Payee payee) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payments payment : payee.payments) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            checkStatus(payment);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * This function checks a payment and changes its status if needed."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payment The payment object to check through."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public static void checkStatus(Payments payment) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Date dateObj \u003d new Date();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        if (payment.status !\u003d Status.APPROVED \u0026\u0026 dateObj.compareTo(payment.deadline) \u003c 0) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            payment.status \u003d Status.OVERDUE;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 263,
      "leowyh": 6
    }
  },
  {
    "path": "src/main/java/payment/Payments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "//@@author karansarat"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": " * Payments Class to record details of an item payment."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Payments implements Comparable\u003cPayments\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String payee;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String item;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public double cost;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String inv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public Date deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public Status status;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String project;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Creates an instance of a Payment object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param project Name of project payment is being made in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee The name of the payee of payment"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param item Item of the payment."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param cost Cost of the item."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param inv  Invoice for the payment."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public Payments(String project, String payee, String item, double cost, String inv) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.payee \u003d payee;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.inv \u003d inv;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.status \u003d Status.PENDING;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Date currDate \u003d new Date();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.deadline \u003d new Date(currDate.getTime() + TimeUnit.DAYS.toMillis(30));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.project \u003d project;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Creates an instance of a Payment object with existing deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param project Name of project payment is being made in"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee The name of the payee of payment"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param item Item of the payment."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param cost Cost of the item."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param inv  Invoice for the payment."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param deadline A date to submit payment by"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public Payments(String project, String payee, String item, double cost, String inv, Date deadline) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.payee \u003d payee;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.inv \u003d inv;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.status \u003d Status.PENDING;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.project \u003d project;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints out the details of a Payment object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printPayment() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Payee: \" + this.payee);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Item: \" + this.item);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Cost: \" + this.cost);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Invoice: \" + this.inv);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Deadline: \" + this.deadline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Status: \" + this.status);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Adds payment details to dict when payment is added."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param dict set of words to remove details from"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void paymentToDict(Set\u003cString\u003e dict) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String[] arr \u003d {this.payee, this.item, \"\" + this.cost, this.inv, "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            \"\" + this.deadline, \"\" + this.status};"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cString\u003e arrNew \u003d new ArrayList\u003c\u003e(Arrays.asList(arr));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        dict.addAll(arrNew);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Removes payment details from dict when payment is deleted."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param dict set of words to remove details from"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void cleanDict(Set\u003cString\u003e dict) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        dict.remove(this.item);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        dict.remove(\"\" + this.cost);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        dict.remove(\"\" + this.deadline);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        dict.remove(this.inv);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * TODO."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payments a Payments object"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public int compareTo(Payments payments) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return this.deadline.compareTo(payments.deadline);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 97,
      "leowyh": 5,
      "E0373902": 1
    }
  },
  {
    "path": "src/main/java/payment/Status.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "//@@author karansarat"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public enum Status {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    PENDING,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    APPROVED,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    OVERDUE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 6,
      "leowyh": 2
    }
  },
  {
    "path": "src/main/java/project/Fund.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "package project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": " * State the fund of the project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Fund {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private double fund;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private double fundTaken;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private double fundRemaining;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static final double NOFUND \u003d 0.0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Instantiates the fund object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Fund() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fund \u003d NOFUND;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundTaken \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundRemaining \u003d NOFUND;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * set fund (again)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param fund a double number input by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setFund(double fund) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fund \u003d fund;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundRemaining \u003d fund - this.fundTaken;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * take fund from the total fund."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param amount a double number input by the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void takeFund(double amount) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundTaken \u003d this.fundTaken + amount;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundRemaining \u003d this.fundRemaining - amount;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * add a value to the total fund."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param amount a double number input by the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addFund(double amount) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fund \u003d this.fund + amount;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundRemaining \u003d this.fundRemaining + amount;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * add a value to the total fund."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param amount a double number input by the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void retrieveFund(double amount) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundTaken \u003d this.fundTaken - amount;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.fundRemaining \u003d this.fundRemaining + amount;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * get the private attribute fund."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return the attribute fund."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public double getFund() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return fund;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * get the private attribute fundTaken."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return the attribute fundTaken."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public double getFundTaken() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return fundTaken;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * get the private attribute fundRemaining."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return the attribute fundRemaining."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public double getFundRemaining() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return fundRemaining;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Return a string to print as message about status of funds."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return String containing a message about fund status"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String giveFund() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return \"\\t\" + \"Total Fund \u003d \" + getFund() + \"\\n\" + \"\\t\" "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            + \"Allocated Fund \u003d \" + getFundTaken() + \"\\n\" + \"\\t\" "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            + \"Remaining Fund \u003d \" + getFundRemaining() + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Loads backup fund from storage."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Also used for Junit testing."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param fund Overall fund."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param fundTaken Fund taken."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param fundRemaining Fund remaining."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void loadFund(double fund, double fundTaken, double fundRemaining) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.fund \u003d fund;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.fundTaken \u003d fundTaken;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.fundRemaining \u003d fundRemaining;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 9,
      "lijiayu980606": 81,
      "leowyh": 14
    }
  },
  {
    "path": "src/main/java/project/Project.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Project {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static final double NOSPENDING \u003d 0.0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static final double NOREMAINING \u003d 0.0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static final double NOBUDGET \u003d 0.0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public HashMap\u003cString, Payee\u003e managermap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public double budget;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public double spending;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public double remaining;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String projectname;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Instantiates Project object without a budget allocated."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param projectname the name of the project."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Project(String projectname) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.managermap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.budget \u003d NOBUDGET;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.spending \u003d NOSPENDING;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.remaining \u003d NOREMAINING;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.projectname \u003d projectname;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Overload function to Instantiate Project object with budget allocated."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param budget Budget allocated to project."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Project(String projectname, double budget) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.managermap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.budget \u003d budget;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.spending \u003d NOSPENDING;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.remaining \u003d budget;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.projectname \u003d projectname;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Add the budget assigned to the project."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param amount a double value indicates the assigned amount of budget."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addBudget(Double amount) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.budget +\u003d amount;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.remaining +\u003d amount;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Add the budget assigned to the project."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param amount a double value indicates the assigned amount of budget."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void retrieveBudget(Double amount) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.remaining +\u003d amount;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.spending -\u003d amount;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * This function deccribes how the program works when a payment is made to a project."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param amount the amount of money for this payment."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void addPayment(Double amount) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.spending +\u003d amount;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.remaining -\u003d amount;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * get budget of the project."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return total budget assigned to the project."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public double getBudget() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return this.budget;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * get budget spent of the project."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return budget spent."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public double getSpending() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return this.spending;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * get budget left in the project."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return budget left."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public double getRemaining() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return this.remaining;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Returns a string contained Project name, budget and spending to print as message."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String giveProject() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return \"\\t\" + \"Project name:  \" + this.projectname + \"\\n\" + \"\\t\" "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            + \"Allocated Budget:  \" + this.budget + \"\\n\" + \"\\t\" "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            + \"Total Spending: \" + this.spending;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 8,
      "lijiayu980606": 56,
      "leowyh": 40
    }
  },
  {
    "path": "src/main/java/project/ProjectManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package project;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class ProjectManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String currentprojectname;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public LinkedHashMap\u003cString, Project\u003e projectmap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Initialises a project manager instance to manage the projects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public ProjectManager() throws AlphaNUSException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.currentprojectname \u003d storage.readFromcurrentprojectnameFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.projectmap \u003d storage.readFromProjectsFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Adds a new project to the project map."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectname Name of the project to add."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns the project object of the added project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Project addProject(String projectname) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project newProject \u003d new Project(projectname);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmap.put(projectname, newProject);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if (currentprojectname \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            currentprojectname \u003d newProject.projectname;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return newProject;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Adds a new project with budget amount to the project map."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectname Name of the project to add."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectamount Amount of budget for the project."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns the project object of the added project."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Project addProject(String projectname, double projectamount) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project newProject \u003d new Project(projectname, projectamount);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmap.put(projectname, newProject);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if (currentprojectname \u003d\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            currentprojectname \u003d newProject.projectname;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return newProject;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Deletes a project in the project map."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectname Name of the project to delete."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns the project object of the deleted project."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Project deleteProject(String projectname) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project deletedProject \u003d projectmap.get(projectname);//TODO check if project exists"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if (currentprojectname \u003d\u003d deletedProject.projectname) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            currentprojectname \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmap.remove(projectname); //TODO assert projectname does not exist"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return deletedProject;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Method to go to the project in the projectmap."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectindex Index of project to go to."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns the project object of the project to go to."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String gotoProject(int projectindex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project gotoProject \u003d (Project) projectmap.values().toArray()[projectindex];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        currentprojectname \u003d (gotoProject).projectname;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return currentprojectname;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Method to go to the project in the projectmap."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectname Name of project to go to."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns the project object of the project to go to."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String gotoProject(String projectname) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        currentprojectname \u003d projectmap.get(projectname).projectname;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return currentprojectname;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Lists all projects in the projectmap."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns an ArrayList of projects."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public ArrayList\u003cProject\u003e listProjects() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ArrayList\u003cProject\u003e projectslist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectslist.addAll(projectmap.values());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return projectslist;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Assigns a budget to the project."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectname Name of the project."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param amount Amo"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void assignBudget(String projectname, Double amount) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectmap.get(projectname).addBudget(amount);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Allocates budget to a project."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectname Name of the project."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param budget Budget allocated to the project."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns the Project object the budget is allocated to."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Project allocateBudget(String projectname, double budget) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project projectallocated \u003d projectmap.get(projectname);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmap.get(projectname).budget \u003d budget;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return projectallocated; //TODO --\u003e allocates budget to a project"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public HashMap\u003cString, Payee\u003e getCurrentProjectManagerMap() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return projectmap.get(currentprojectname).managermap;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Load backup projects and removes previously added projects."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Also sets currentproject to null."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectmap HashMap of projects from backup."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void loadBackup(LinkedHashMap\u003cString, Project\u003e projectmap) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.projectmap \u003d projectmap;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.currentprojectname \u003d null;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 2,
      "leowyh": 130
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Fund;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Project;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "//@@author leowyh"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Storage that saves and loads the tasklist of the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String basefilepath \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String projectsfilepath \u003d basefilepath + \"/localdata/Projects.json\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String commandlistfilepath \u003d basefilepath +  \"/localdata/history.json\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String fundfilepath \u003d  basefilepath + \"/localdata/Fund.json\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String undoListFilePath \u003d basefilepath +  \"/localdata/undo.json\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String redoListFilePath \u003d basefilepath +  \"/localdata/redo.json\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String currentprojectfilepath \u003d basefilepath + \"/localdata/CurrentProject.json\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String dictFilePath \u003d \"/localdata/dict.json\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String backuphistoryfilepath \u003d \"Backuphistory.json\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String backupfundfilepath \u003d \"BackupFund.json\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String backupprojectsfilepath \u003d \"BackupProjects.json\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private Gson gson \u003d new GsonBuilder().setPrettyPrinting().create();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Writes current projectmap in ProjectManager to local storage."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param dict LinkedHashMap of projects."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be written to."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void writeToDictFile(Set\u003cString\u003e dict) throws AlphaNUSException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String toWriteStr \u003d gson.toJson(dict);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(dictFilePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            for (String lineStr : toWriteStr.split(\"\\n\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.write(lineStr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to write to file: \" + dictFilePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Writes current projectmap in ProjectManager to local storage."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectmap LinkedHashMap of projects."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be written to."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void writeToProjectsFile(LinkedHashMap\u003cString, Project\u003e projectmap) throws AlphaNUSException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String toWriteStr \u003d gson.toJson(projectmap);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(projectsfilepath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            for (String lineStr : toWriteStr.split(\"\\n\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.write(lineStr);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to write to file: \" + projectsfilepath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Writes current project in ProjectManager to local storage."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param currentprojectname Current project before exiting the application."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be written to."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void writeTocurrentprojectnameFile(String currentprojectname) throws AlphaNUSException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String toWriteStr \u003d gson.toJson(currentprojectname);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(currentprojectfilepath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            for (String lineStr : toWriteStr.split(\"\\n\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.write(lineStr);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to write to file: \" + currentprojectfilepath);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Writes current Fund to local storage."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param fund Fund object containing fund details."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be written to."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void writeToFundFile(Fund fund) throws AlphaNUSException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String toWriteStr \u003d gson.toJson(fund);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(fundfilepath);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            for (String lineStr : toWriteStr.split(\"\\n\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.write(lineStr);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to write to file: \" + fundfilepath);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    //@@author E0373902"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Writes the projectmap, before the current command is executed, to local storage."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param projectmap LinkedHashMap of projects."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be written to."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public void writeToUndoFile(LinkedHashMap\u003cString, Project\u003e projectmap) throws AlphaNUSException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        String toWriteStr \u003d gson.toJson(projectmap);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            File file \u003d new File(undoListFilePath);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            for (String lineStr : toWriteStr.split(\"\\n\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                bufferedWriter.write(lineStr);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            throw new AlphaNUSException(\"Unable to write to file: \" + undoListFilePath);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    //@@author E0373902"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Writes the projectmap, after current command is executed, to local storage."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param projectmap LinkedHashMap of projects."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be written to."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public void writeToRedoFile(LinkedHashMap\u003cString, Project\u003e projectmap) throws AlphaNUSException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        String toWriteStr \u003d gson.toJson(projectmap);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            File file \u003d new File(redoListFilePath);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            for (String lineStr : toWriteStr.split(\"\\n\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                bufferedWriter.write(lineStr);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            throw new AlphaNUSException(\"Unable to write to file: \" + redoListFilePath);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    //@@author leowyh"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Read HashMap of projects from local storage and returns it."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return HashMap of Project objects stored in local storage."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Set\u003cString\u003e readFromDictFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Type dictType \u003d new TypeToken\u003cSet\u003cString\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Set\u003cString\u003e dict;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(dictFilePath);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            dict \u003d gson.fromJson(bufferedReader, dictType);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (dict \u003d\u003d null) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                dict \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return dict;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Read HashMap of projects from local storage and returns it."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return HashMap of Project objects stored in local storage."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public LinkedHashMap\u003cString, Project\u003e readFromProjectsFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Type projectmaptype \u003d new TypeToken\u003cLinkedHashMap\u003cString, Project\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        LinkedHashMap\u003cString, Project\u003e projectmap;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(projectsfilepath);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            projectmap \u003d gson.fromJson(bufferedReader, projectmaptype);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (projectmap \u003d\u003d null) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                projectmap \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return projectmap;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Read Current Project from local storage and returns it."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Current Project object stored in local storage."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String readFromcurrentprojectnameFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Type projectmaptype \u003d new TypeToken\u003cString\u003e(){}.getType();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String currentprojectname;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(currentprojectfilepath);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            currentprojectname \u003d gson.fromJson(bufferedReader, projectmaptype);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return currentprojectname;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Read Fund from local storage and return it."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Fund stored in local storage."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Fund readFromFundFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Type fundtype \u003d new TypeToken\u003cFund\u003e(){}.getType();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Fund fund;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            File file \u003d new File(fundfilepath);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            fund \u003d gson.fromJson(bufferedReader, fundtype);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (fund \u003d\u003d null) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                fund \u003d new Fund();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return fund;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    //@@author E0373902"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Read HashMap of projects in the undo file from local storage and returns it."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @return HashMap of Project objects stored in the undo file in local storage."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public LinkedHashMap\u003cString, Project\u003e readFromUndoFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        Type projectmaptype \u003d new TypeToken\u003cLinkedHashMap\u003cString, Project\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        LinkedHashMap\u003cString, Project\u003e projectmap;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            File file \u003d new File(undoListFilePath);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            projectmap \u003d gson.fromJson(bufferedReader, projectmaptype);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return projectmap;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    //@@author E0373902"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Read HashMap of projects in the redo file from local storage and returns it."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @return HashMap of Project objects stored in the redo file in local storage."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public LinkedHashMap\u003cString, Project\u003e readFromRedoFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        Type projectmaptype \u003d new TypeToken\u003cLinkedHashMap\u003cString, Project\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        LinkedHashMap\u003cString, Project\u003e projectmap;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            File file \u003d new File(redoListFilePath);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            projectmap \u003d gson.fromJson(bufferedReader, projectmaptype);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return projectmap;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Saves the tasklist of the user as an ArrayList containing the task object."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param str TODO"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public static void remove(String str){"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        //TODO"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Writes the input command entered by the user to the local storage."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param command input command entered by the user"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be written to."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public void writeToCommandsFile(String command) throws AlphaNUSException {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        String toWriteStr \u003d gson.toJson(command);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            File file \u003d new File(commandlistfilepath);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(file, true));"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedWriter.write(toWriteStr);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            throw new AlphaNUSException(\"Unable to write to file: \" + commandlistfilepath);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Reads array list of input commands from local storage and returns it."
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @return ArrayList of input commands stored in local storage."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public ArrayList\u003cString\u003e readFromCommandsFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        //Type commandListtype \u003d new TypeToken\u003cArrayList\u003cString\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            File file \u003d new File(commandlistfilepath);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "E0373902"
        },
        "content": "                list.add(line);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    //@@author leowyh"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Reads array list of input commands from local storage and returns it."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return ArrayList of input commands stored in local storage."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public ArrayList\u003cString\u003e readFromBackupCommandsFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            InputStream in \u003d getClass().getResourceAsStream(backuphistoryfilepath);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader(in));"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                list.add(line);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Reads array list of input commands from local storage and returns it."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return ArrayList of input commands stored in local storage."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Fund readFromBackupFundFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Type fundtype \u003d new TypeToken\u003cFund\u003e(){}.getType();"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Fund fund;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            InputStream in \u003d getClass().getResourceAsStream(backupfundfilepath);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader(in));"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            fund \u003d gson.fromJson(bufferedReader, fundtype);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (fund \u003d\u003d null) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                fund \u003d new Fund();"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return fund;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Read HashMap of projects from local storage and returns it."
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return HashMap of Project objects stored in local storage."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws AlphaNUSException If the file cannot be read."
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public LinkedHashMap\u003cString, Project\u003e readFromBackupProjectsFile() throws AlphaNUSException {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Type projectmaptype \u003d new TypeToken\u003cLinkedHashMap\u003cString, Project\u003e\u003e(){}.getType();"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        LinkedHashMap\u003cString, Project\u003e projectmap;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            InputStream in \u003d getClass().getResourceAsStream(backupprojectsfilepath);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader(in));"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            projectmap \u003d gson.fromJson(bufferedReader, projectmaptype);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (projectmap \u003d\u003d null) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                projectmap \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            throw new AlphaNUSException(\"Unable to read file\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return projectmap;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 4,
      "lijiayu980606": 1,
      "leowyh": 305,
      "E0373902": 157
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Task containing information of a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Deadline instance and initialises the required attributes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.date \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a string status of the Deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task\u0027s status icon, description and deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return  super.giveTask() + \"(by: \" + dataformat.format(this.date) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 8,
      "-": 27
    }
  },
  {
    "path": "src/main/java/task/DoAfterTasks.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0373902"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "E0373902"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "E0373902"
        },
        "content": " * Task containing information of a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "E0373902"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "E0373902"
        },
        "content": "public class DoAfterTasks extends Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    //protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Creates a DoAfterTasks instance and initialises the required attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param description Description of the DoAfterTasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param after Time of the DoAfterTasks in format \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public DoAfterTasks(String description, String after) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        this.after \u003d after;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        this.type \u003d \"A\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * Returns a string status of the Event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @return The task\u0027s status icon, description and eventtime."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        return \"[A]\" + super.giveTask() + \"(after: \" + after + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E0373902"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "E0373902": 32
    }
  },
  {
    "path": "src/main/java/task/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "karansarat"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Reminder Class to handle reminders."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    String currDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    Calendar cal;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    Reminder() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        cal.add(Calendar.DATE, -1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Gets the current date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void getCurrDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        currDate \u003d formatter.format(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 22,
      "leowyh": 8
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * The parent Task class containing the description of the task and its done status."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String after;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Task instance and initialises the required attributes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * Formats the representation of the Task to be printed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task\u0027s status icon, description and deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"[\" + getStatus() + \"] [\" + this.type + \"]\" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gives the status icon of the Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The status icon of the Task based on isDone."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return (isDone ? \"Done\" : \"NotDone\"); //return tick or X symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets as done the isDone attribute."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Sets as done the isDone attribute."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setDate(Date date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Sets a new value to the description attribute."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the description of the Task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task Description."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the type of the Task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task type."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Gets the date of the Task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return Task Date."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Gets the date of the Task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return Task Date."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String getDateStr() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return dataformat.format(this.date);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 27,
      "-": 68,
      "leowyh": 5
    }
  },
  {
    "path": "src/main/java/ui/Suggest.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "karansarat"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Suggest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Takes a list of known words and another word and tries to return the closest match."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param dict list of known words."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param w1 word to try and match with dict."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return a word that is the closest match."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public String guess(Set\u003cString\u003e dict, String w1) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Integer min \u003d Integer.MAX_VALUE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String guess \u003d new String();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (String w2 : dict) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int currDist \u003d calcEditDist(w1, w2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (currDist \u003c min) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                guess \u003d w2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                min \u003d currDist;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return guess;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Calculates the edit distance between 2 words."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param w1 word 1."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param w2 word 2."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return int representing the edit distance between the 2 words."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    private static int calcEditDist(String w1, String w2) { "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int l1 \u003d w1.length();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int l2 \u003d w2.length();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int[][] dist \u003d new int[l1 + 1][l2 + 1]; "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d l1; i++) { "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (int j \u003d 0; j \u003c\u003d l2; j++) { "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    dist[i][j] \u003d j;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else if (j \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    dist[i][j] \u003d i;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else if (w1.charAt(i - 1) \u003d\u003d w2.charAt(j - 1)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    dist[i][j] \u003d dist[i - 1][j - 1]; "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    dist[i][j] \u003d 1 + Math.min(dist[i][j - 1], Math.min(dist[i - 1][j], dist[i - 1][j - 1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return dist[l1][l2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 51
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.CommandFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.Status;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import project.Fund;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Project;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import project.ProjectManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import ui.Suggest;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Ui to interact with the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static final String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static CommandFormat commandFormat \u003d new CommandFormat();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    Scanner in;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Ui instance with a scanner to read user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Reads input from the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Input from the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints starting message for the AlphaNUS program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void startMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"$            Hello! I\u0027m AlphaNUS             $\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"$                                            $\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"$ Enter \\\"help\\\" to see things that I can do!  $\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"$                                            $\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints ending message for the AlphaNUS program."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints a message to indicate that there are no projects in the record."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void printNoProjectMessage() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"There are no projects in the record.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Please add a new project.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Format: add project pr/PROJECTNAME\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints a message to list all projects in the record."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param projectslist ArrayList containing all projects in record."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void printProjectsList(ArrayList\u003cProject\u003e projectslist, String currentprojectname) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Here is the list of projects:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        for (Project project : projectslist) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\" + index + \". \" + project.projectname);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\\t\" + \"Budget: \" + project.budget);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\\t\" + \"Spending: \" + project.spending);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"There are \" + projectslist.size() + \" projects in the record.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if (currentprojectname \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\" + \"Please go to a project to manage its payments and payees.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\" + \"Command Format: \" + commandFormat.listProjectFormat());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\" + \"Current Project: \" + currentprojectname);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints a message to indicate that a project has been added."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param newProject  The project that was added."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectsize The current number of projects in the projectmap."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void printAddProject(Project newProject, int projectsize) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this project:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Name: \" + newProject.projectname);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Budget: \" + newProject.budget);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Spending: \" + newProject.spending);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"There are \" + projectsize + \" projects in the record.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints a message to indicate that a project has been deleted."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param deletedProject The project that was deleted."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectsize    The current number of projects in the projectmap."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void printDeleteProject(Project deletedProject, int projectsize, Fund fund) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve deleted this project:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Name: \" + deletedProject.projectname);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Budget: \" + deletedProject.budget);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Spending: \" + deletedProject.spending);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"There are \" + projectsize + \" projects in the record.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"The updated fund is as follows:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints the number of projects in the projectmap and the current project"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * that is being worked on."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param currentprojectname Name of the current project."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectsize The current number of projects in the projectmap."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void printProjectStatus(String currentprojectname, int projectsize) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if (currentprojectname \u003d\u003d null) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\" + \"There are no projects in the record.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\" + \"Current Project: \" + currentprojectname);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"\\t\" + \"There are \" + projectsize + \" projects in the record.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints message to indicate the project that is gone to."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param projectname Name of project that is gone to."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void printGoToProject(String projectname) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Going to Project: \" + projectname);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"You can now manage payments and payees in \" + projectname);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints the list of tasks or the matching list of tasks depending on the"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * command."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param list    TaskList of the user."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param command Command given by the user."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printList(TaskList list, String command) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        int listsize \u003d list.size();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        // prints list or matching tasks in list"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(line + \"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(line + \"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } else if (command.equals(\"View Schedule\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.print(line + \"     Here are the tasks on this day:\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c listsize; i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            int listnum \u003d i + 1;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(\"     \" + listnum + \".\" + list.get(i).giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * prints the list of input commands entered by the user."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     * @param list1 list of input commands entered by the user."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public void printHistoryList(ArrayList\u003cString\u003e list1) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        System.out.println(\"Here is the history of your input commands:\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        for (int i \u003d 0; i \u003c list1.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            System.out.println(list1.get(i));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * prints the list of input commands entered by the user within the given"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * period."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param list1 list of input commands entered by the user within the given"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     *              period."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "E0373902"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public void printviewHistoryList(ArrayList\u003cString\u003e list1, String date1, String date2) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        System.out.println(\"Here is the history of your input commands from \" + date1 + \" to \" + date2 + \":\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        for (int i \u003d 0; i \u003c list1.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "E0373902"
        },
        "content": "            System.out.println(list1.get(i));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints dates from which history was cleared."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param date1 from date to delete history."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param date2 to date to delete history."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public void printdeletehistory(String date1, String date2) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                \"Got it. The input commands from \" + date1 + \" to \" + date2 + \" have been deleted from the history\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    //@@author karansarat"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints a message with the details of a payee that the user requested for."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee the payee object the user queried for."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printFoundMessage(Payee payee) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tHere are the details you requested!\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        payee.printPayee();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints the list of payments of a payee."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param name Name of project"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param paymentList paymentList of the payee."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printPaymentList(String name, ArrayList\u003cPayments\u003e paymentList) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Here are your payments in\" + name + \":\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payments payments : paymentList) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"Payment \" + ++i + \":\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            payments.printPayment();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints the list of payments of a payee."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param paymentList paymentList of the payee."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printPaymentList(String name, ArrayList\u003cPayments\u003e paymentList, Status status) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"In Project \" + name + \";\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        if (status \u003d\u003d Status.PENDING) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\tHere are your pending payments:\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } else if (status \u003d\u003d Status.OVERDUE) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\tHere are your overdue payments:\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } else if (status \u003d\u003d Status.APPROVED) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\tHere are your approved payments:\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payments payments : paymentList) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\tPayment \" + ++i + \":\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            payments.printPayment();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints the list of payees of a project."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managerMap a HashMap of the payees in a project."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printPayeeList(HashMap\u003cString, Payee\u003e managerMap) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Here are your payees in Project \" + managerMap.get(0).project + \":\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int i \u003d 0;   "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payee payee : managerMap.values()) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"Payee \" + ++i + \":\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            payee.printPayee();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate deletion of a Payment from the Payee and the"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * number of Payments left."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payment Representation of the Payment that is deleted."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param size    the number of payments in the record for this Payee after"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     *                deletion"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printDeletePaymentMessage(Payments payment, int size) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Noted. I\u0027ve removed this payment: \\n\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        payment.printPayment();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"\\t\" + payment.payee + \" now has \" + size "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            + \" payments in project \" + payment.project + \".\\n\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Task is done."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param numdone  Index of the Task in the TaskList."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printDoneMessage(int numdone, TaskList tasklist) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"       \" + tasklist.get(numdone).giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Task is done."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param id Index of the Task in the TaskList."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printDeleteTaskMessage(int id, TaskList tasklist) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Got it! I\u0027ve removed this task from the list: \\n\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"       \" + tasklist.get(id).giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Print all tasks in a tasklist."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printTaskList(TaskList tasklist) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tYour result is as follow:\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (int i  \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + tasklist.get(i).giveTask());"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a task being added."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param task     Task."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAddedMessage(Task task, TaskList tasklist) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve added this task:  \\n\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int tasksize \u003d tasklist.size();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"     Now you have \" + tasksize + \" tasks in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Task being snoozed."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param task Task to be snoozed."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printSnoozeMessage(Task task) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve snoozed this task by 1 day:  \\n\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Task being postponed."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param task Task to be postponed."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printPostponeMessage(Task task) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve postponed this task:  \\n\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Task being rescheduled."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param task Task to be snoozed."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printRescheduleMessage(Task task) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve rescheduled this task:  \\n\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a payee has been edited."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Payee that had been edited."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printEditMessage(Payee payee) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve edited this payee:  \\n\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        payee.printPayee();"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a payment has been edited."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payment Payment that had been edited"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printEditMessage(Payments payment, String name) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve edited this payment:  \\n\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        payment.printPayment();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints the message for the exception thrown."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void exceptionMessage(String message) {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * TODO."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printInsufficientBudget(ProjectManager projectManager) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String currProjectName \u003d projectManager.currentprojectname;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        exceptionMessage(\"     ☹ OOPS!!! There is not enough budget left.\\n\""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        + \" Total budget: \" + projectManager.projectmap.get(currProjectName).getBudget() + \"\\n\""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        + \" Budget spent: \" + projectManager.projectmap.get(currProjectName).getSpending() + \"\\n\""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        + \" Budget remaining: \" + projectManager.projectmap.get(currProjectName).getRemaining() + \"\\n\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Payment being added to a certain Payee."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payment the new Payment containing the relevant information added to"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     *                Payee object."
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAddPaymentMessage(Payments payment, int size, String currentprojectname) {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this payment:\");"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        payment.printPayment();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"\\t\" + payment.payee + \" now has \" + size "
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            + \" payments in project \" + currentprojectname + \".\\n\");"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Payment being added to a certain Payee."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Payee containing identification information of Payee."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param name  the name of Payee to make Payments to."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAddPayeeMessage(String name, Payee payee, int payeesize, String currentprojectname) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this payee:\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a the total amount paid by a payee in a certain project."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee name of the payee."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param amount total amount paid by the payee."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param project the current project name."
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printTotalCostMessage(String payee, double amount, String project) {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Current project is \" + project + \".\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"The total cost paid by \" + payee + \" is: \" + amount + \" dollars.\");"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \" use `getpayee \" + payee + \"` command to see the detail of the payee\u0027s payments.\");"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a deadline with an invoice added."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param task Task to be edited."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAddInvoiceMessage(Task task) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added invoice to this deadline:\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"\\t\" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Payment being deleted."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * "
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Payee containing identification information of Payee."
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param name  the name of Payee to make Payments to."
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printdeletePayeeMessage(String name, Payee payee, int payeesize, String currentProjectName) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve deleted this payee:\");"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        payee.printPayee();"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"\\t\" + \"There are \" + payeesize + \" payees in project \" + currentProjectName + \".\\n\");"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Takes a user input and substring of input."
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints a message to suggest a valid form of input. "
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param dict A Set of words that will be used"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input A string representing the user\u0027s input"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param word A substring of input that is to be replaced by a guess"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printSuggestion(Set\u003cString\u003e dict, String input, String word) throws AlphaNUSException {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Suggest suggest \u003d new Suggest();"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String suggestion \u003d suggest.guess(dict, word);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String replacement \u003d input.replaceFirst(word, suggestion);"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        exceptionMessage(\"\\tMaybe you meant: \" + replacement);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message of adding a fund to all projects."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param fund the fund for all projects."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printSetFundMessage(Fund fund) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve set overall fund as follow:\");"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message of adding a fund to all projects."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param fund the fund for all projects."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param amount amount to be added."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAddFundMessage(Fund fund, double amount) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added \" + amount + \" dollars to the fund. The new fund is as follow:\");"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message of adding a fund to all projects."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param fund the fund for all projects."
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param amount amount to be added."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param project project to be added to."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAssignFundMessage(Fund fund, double amount, Project project) {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve assigned \" + amount + \" to the project:\");"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(project.giveProject());"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"The new fund is as follows:\");"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message of adding a fund to all projects."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param fund the fund for all projects."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param amount amount to be added."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param project project to be added to."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param projectname the name of the affected project"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printReduceBudgetMessage(Fund fund, Double amount, Project project, String projectname) {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve reduced \" + amount + \" dollars from the budget of the project \""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                + projectname + \":\");"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(project.giveProject());"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"The new fund is as follow:\");"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message of adding a fund to all projects."
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param fund the fund for all projects."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param amount amount to be set."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printResetFundMessage(Fund fund, double amount) {"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve changed the new fund as \" + amount"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                + \" dollars. The new fund is as follow:\");"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(fund.giveFund());"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints out the statement of accounts."
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap managermap containing Payee and Payments information."
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void generateStatementofAccounts(HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"Item\\tExpense\\n\");"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (Payee payee : managermap.values()) {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (Payments payment : payee.payments) {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                System.out.println(payment.item + \"\\t\" + payment.cost);"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate that the previous command has been undone."
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void undoMessage() {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Got it! I have undone the previous command.\");"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate that the previous command has been redone."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void redoMessage() {"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Got it! I have redone the previous command.\");"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints out the pending and overdue payments in a sorted order with the earliest on eon the top."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param paymentlist the list of all payments"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printReminderMessage(ArrayList\u003cPayments\u003e paymentlist) {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"\\tYour reminder is as follow:\\n\");"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (int i \u003d 0; i \u003c paymentlist.size(); i++) {"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            Payments p \u003d paymentlist.get(i);"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \":\");"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\t\" + \"Deadline: \" + p.deadline);"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\t\" + \"Project: \" + p.project);"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\t\" + \"Payee: \" + p.payee);"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\t\" + \"Item: \" + p.item);"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            System.out.println(\"\\t\" + \"Status: \" + p.status);"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate completion of backup."
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param projectsize Number of projects in record."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param backupfund Backup fund that was loaded from storage."
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printBackupComplete(int projectsize, Fund backupfund) {"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Load Complete!\");"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Replaced projects with \" + projectsize + \" new projects \""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                            + \"from backup.\");"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Replaced history with history data from backup.\");"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Replaced fund with fund data from backup.\");"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Current fund data is as follows:\");"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(backupfund.giveFund());"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints out a help message with command formats."
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printHelpMessage() {"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t*Help*\");"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Project:\");"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tLoad Backup:         \" + commandFormat.loadBackupFormat());"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tAdd Project:         \" + commandFormat.addProjectFormat());"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tDelete Project:      \" + commandFormat.deleteProjectFormat());"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tList Projects:       \" + commandFormat.listProjectFormat());"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tGo to a Project:     \" + commandFormat.gotoProjectFormat());"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tShow Budget:         \" + commandFormat.showBudgetFormat());"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tReduce Budget:       \" + commandFormat.reducebudgetFormat());"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Fund:\");"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tSet Fund:            \" + commandFormat.setFundFormat());"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tAdd Fund:            \" + commandFormat.addFundFormat());"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tAssign Fund:         \" + commandFormat.assignFundFormat());"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tChange Fund:         \" + commandFormat.resetFundFormat());"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tShow Fund:           \" + commandFormat.showFundFormat());"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Payment and Payee:\");"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tAdd Payee:           \" + commandFormat.addPayeeFormat());"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tAdd Payment:         \" + commandFormat.addPaymentFormat());"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tDelete Payee:        \" + commandFormat.deletePayeeFormat());"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tDelete Payment:      \" + commandFormat.deletePaymentFormat());"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tGet Payee:           \" + commandFormat.getPayeeFormat());"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tList Payments:       \" + commandFormat.listPaymentFormat());"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tFind Payee:          \" + commandFormat.findPayeeFormat());"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tTotal cost:          \" + commandFormat.totalCostFormat());"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tEdit Payment/Payee:  \" + commandFormat.editPaymentFormat());"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tReminder:            \" + commandFormat.reminderFormat());"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"Tasks:\");"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tAdd Todo:            \" + commandFormat.addTodoFormat());"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tAdd Deadline:        \" + commandFormat.addDeadlineFormat());"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tDone Task:           \" + commandFormat.doneTaskFormat());"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tDelete Task:         \" + commandFormat.deleteTaskFormat());"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tFind Task:           \" + commandFormat.findTaskFormat());"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tList Tasks:          \" + commandFormat.listTasksFormat());"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tSnooze Deadline:     \" + commandFormat.snoozeFormat());"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tPostpone Deadline:   \" + commandFormat.postponeFormat());"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tReschedule Deadline: \" + commandFormat.rescheduleFormat());"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tView Schedule:       \" + commandFormat.viewScheduleFormat());"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"History:\");"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tHistory of Commands: \" + commandFormat.historyFormat());"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tView History within a certain period: \" + commandFormat.viewhistoryFormat());"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\tExit:                \" + commandFormat.exitFormat());"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Returns the scanned input."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return Scanned input."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public Scanner getIn() {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return this.in;"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 514,
      "lijiayu980606": 5,
      "-": 58,
      "leowyh": 113,
      "E0373902": 20
    }
  },
  {
    "path": "src/test/java/command/ProcessTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import project.Fund;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import project.ProjectManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "class ProcessTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    Fund fund \u003d new Fund();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    Set\u003cString\u003e dict;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Process process \u003d new Process();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    ProcessTest() throws AlphaNUSException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void homePageMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void listProjects() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void addProject() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void deleteProject() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void goToProject() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testSetFund() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            input \u003d \"set fund am/2000\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            process.setFund(input, ui, fund);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFundRemaining(), fund.getFund());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testSetFundWithNegaticeInput() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            input \u003d \"set fund am/-2000\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            process.setFund(input, ui, fund);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFund(), 0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testSetFundWithOversizeInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            input \u003d \"set fund am/7000000\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            process.setFund(input, ui, fund);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFund(), 0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testSetFundWhileFundExists() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fund.loadFund(1800, 0, 1800);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            input \u003d \"set fund am/2000\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            process.setFund(input, ui, fund);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFund(), 1800);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFundRemaining(), fund.getFund());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testAddFundWithCorrectNumber() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fund.loadFund(2000, 0, 2000);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            input \u003d \"add fund add/200\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            process.addFund(input, ui, fund);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFund(), 2200);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFundRemaining(), fund.getFund());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testAddFundWithNegativeNumber() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fund.loadFund(2000, 0, 2000);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            input \u003d \"add fund add/-200\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            process.addFund(input, ui, fund);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFundRemaining(), fund.getFund());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testAddFundWithOversizeNumber() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fund.loadFund(2000, 0, 2000);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String input \u003d \"add fund add/7000000\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            process.addFund(input, ui, fund);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            assertEquals(fund.getFundRemaining(), fund.getFund());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void assignFund() throws AlphaNUSException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 0, 2000);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 0);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"assign fund pr/rag am/100\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.assignFund(input, ui, fund);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFundRemaining(), fund.getFund() - fund.getFundTaken());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void assignFundMoreThanAffordableAmount() throws AlphaNUSException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 0, 2000);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 0);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"assign fund pr/rag add/3000\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.assignFund(input, ui, fund);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFundRemaining(), fund.getFund() - fund.getFundTaken());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void assignNegativeFund() throws AlphaNUSException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 0, 2000);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 0);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"assign fund pr/rag add/-300\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.assignFund(input, ui, fund);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFundRemaining(), fund.getFund() - fund.getFundTaken());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void assignFundWrongFormat() throws AlphaNUSException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 0, 2000);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 0);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"assign fund pr/rag add/\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.assignFund(input, ui, fund);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(fund.getFundTaken() \u003d\u003d 0);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFundRemaining(), fund.getFund() - fund.getFundTaken());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void resetFund() throws AlphaNUSException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 1500, 500);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 1500);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"change fund new/1800\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.resetFund(input, ui, fund);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFund(), 1800);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(fund.getFundTaken() \u003d\u003d 1500);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFundRemaining(), fund.getFund() - fund.getFundTaken());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void resetFundLessThanTaken() throws AlphaNUSException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 1500, 500);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 1500);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"change fund new/1300\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.resetFund(input, ui, fund);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(fund.getFundTaken() \u003d\u003d 1500);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFundRemaining(), fund.getFund() - fund.getFundTaken());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void resetFundWrongFormat() throws AlphaNUSException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 1500, 500);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 1500);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"change fund new/\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.resetFund(input, ui, fund);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFund(), 2000);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(fund.getFundTaken() \u003d\u003d 1500);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(fund.getFundRemaining(), fund.getFund() - fund.getFundTaken());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void reduceBudget() throws AlphaNUSException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 500, 1500);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"test\", 1000);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.projectmap.get(\"test\").spending \u003d 500;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.projectmap.get(\"test\").remaining \u003d 500;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"reduce budget pr/test am/300\";"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.reduceBudget(input, ui, fund);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals((projectManager.projectmap.get(\"test\").spending), 500);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(projectManager.projectmap.get(\"test\").getBudget(),"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                (projectManager.projectmap.get(\"test\").getSpending()"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                        + projectManager.projectmap.get(\"test\").getRemaining()));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void reduceBudgetNotEnoughRemaining() throws AlphaNUSException {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        fund.loadFund(2000, 1500, 500);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ProjectManager projectManager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.addProject(\"rag\", 1500);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectManager.projectmap.get(\"rag\").spending \u003d 1000;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"reduce budget pr/rag am/700\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.reduceBudget(input, ui, fund);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals((projectManager.projectmap.get(\"rag\").spending), 1000);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals((projectManager.projectmap.get(\"rag\").budget), 1500);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void addTodo() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void addDeadline() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void done() {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Task td \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        tasklist.addTask(td);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"done id/1\";"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.done(input, tasklist, ui);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(tasklist.get(0).getStatus() \u003d\u003d \"Done\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void deleteTask() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Task td1 \u003d new Task(\"test1\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        tasklist.addTask(td1);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Task td2 \u003d new Task(\"test2\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        tasklist.addTask(td2);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"delete id/1\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.deleteTask(input, tasklist, ui);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(tasklist.size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(tasklist.get(0) \u003d\u003d td2);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void findTask() {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void listTasks() {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void viewSchedule() {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void snooze() throws ParseException {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Task ddl \u003d new Deadline(\"testddl\", sdf.parse(\"11-11-2019\"));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        tasklist.addTask(ddl);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        input \u003d \"snooze id/1\";"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        process.snooze(input, tasklist, ui);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(tasklist.get(0).getDate(), sdf.parse(\"12-11-2019\"));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void postpone() {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void reschedule() {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void doAfter() {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void within() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void edit() {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void deletePayment() {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void addPayment() {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void addPayee() {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void deletePayee() {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void findPayee() {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void totalCost() {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void reminder() {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void showBudget() {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void listAllPayments() {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void commandHistory() {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void history() {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void viewhistory() {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void undo() {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void redo() {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 389
    }
  },
  {
    "path": "src/test/java/projecttests/ProjectManagerTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package projecttests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import common.AlphaNUSException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Project;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.ProjectManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "//@@author leowyh"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "class ProjectManagerTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private ProjectManager projectmanager \u003d new ProjectManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    ProjectManagerTest() throws AlphaNUSException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void alwaysTrue() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void initProjectManagerTest() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmanager.currentprojectname \u003d \"Rag\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(\"Rag\", projectmanager.currentprojectname);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmanager.projectmap \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmanager.projectmap.put(\"Rag\", new Project(\"Rag\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmanager.projectmap.put(\"Flag\", new Project(\"Flag\", 100));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(0, projectmanager.projectmap.get(\"Rag\").budget);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(0, projectmanager.projectmap.get(\"Rag\").spending);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(\"Flag\", projectmanager.projectmap.get(\"Flag\").projectname);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(100, projectmanager.projectmap.get(\"Flag\").budget);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testAddProject_withoutBudgetAndCurrentProject_WorksCorrectly() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String expectedprojectname \u003d \"Arts Night\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        projectmanager.currentprojectname \u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project outputproject \u003d projectmanager.addProject(\"Arts Night\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String outputprojectname \u003d outputproject.projectname;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedprojectname, outputprojectname);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedprojectname, projectmanager.currentprojectname);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testAddProject_withBudgetAndCurrentProject_WorksCorrectly() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String expectedprojectname \u003d \"Arts Night\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        double expectedprojectBudget \u003d 100.0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project outputproject \u003d projectmanager.addProject(\"Arts Night\", 100.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String outputprojectname \u003d outputproject.projectname;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        double outputprojectBudget \u003d outputproject.budget;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedprojectname, outputprojectname);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedprojectBudget, outputprojectBudget);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testDeleteProject() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String expectedprojectname \u003d \"Arts Night\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        double expectedprojectBudget \u003d 100.0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project outputproject \u003d projectmanager.addProject(\"Arts Night\", 100.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String outputprojectname \u003d outputproject.projectname;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        double outputprojectBudget \u003d outputproject.budget;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedprojectname, outputprojectname);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedprojectBudget, outputprojectBudget);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testGotoProject_withStringInput_success() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(\"Rag\", projectmanager.currentprojectname);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String expectedcurrentproject \u003d \"Flag\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String outputcurrentproject \u003d projectmanager.gotoProject(\"Flag\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedcurrentproject, outputcurrentproject);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testGotoProject_withIntegerInput_success() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(\"Rag\", projectmanager.currentprojectname);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String expectedcurrentproject \u003d \"Flag\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String outputcurrentproject \u003d projectmanager.gotoProject(1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedcurrentproject, outputcurrentproject);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        expectedcurrentproject \u003d \"Rag\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        outputcurrentproject \u003d projectmanager.gotoProject(0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(expectedcurrentproject, outputcurrentproject);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testListProjects() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project project1 \u003d new Project(\"Rag\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project project2 \u003d new Project(\"Flag\", 100.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ArrayList\u003cProject\u003e expectedprojectslist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        expectedprojectslist.add(project1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        expectedprojectslist.add(project2);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ArrayList\u003cProject\u003e outputprojectslist \u003d projectmanager.listProjects();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(project1.giveProject(), outputprojectslist.get(0).giveProject());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(project2.giveProject(), outputprojectslist.get(1).giveProject());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //@@author lijiayu980606"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testAssignBudget() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectmanager.addProject(\"Flag\", 100.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectmanager.assignBudget(\"Flag\", 200.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(projectmanager.projectmap.get(\"Flag\").getBudget(), 300);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    void testLoadBackup() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        LinkedHashMap\u003cString, Project\u003e expectedprojectmap \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        expectedprojectmap.put(\"Arts Night\", new Project(\"Arts Night\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        projectmanager.loadBackup(expectedprojectmap);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        LinkedHashMap\u003cString, Project\u003e outputprojectmap \u003d projectmanager.projectmap;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String outputprojectname \u003d projectmanager.currentprojectname;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(outputprojectmap, expectedprojectmap);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertNull(outputprojectname);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 21,
      "leowyh": 109
    }
  },
  {
    "path": "src/test/java/projecttests/ProjectTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package projecttests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Project;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "//@@author leowyh"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class ProjectTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void alwaysTrue() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testAddBudget() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project project \u003d new Project(\"Rag\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(0.0, project.budget);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        project.addBudget(100.00);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(100.00, project.budget);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testGiveProject() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project project \u003d new Project(\"Rag\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        project.addBudget(100.00);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(100.00, project.budget);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(\"\\t\" + \"Project name:  Rag\" + \"\\n\" + \"\\t\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + \"Allocated Budget:  100.0\" + \"\\n\" + \"\\t\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + \"Total Spending: 0.0\", project.giveProject());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void testProject_withBudget() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Project project \u003d new Project(\"Rag\", 100.0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(100.0, project.budget);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(\"\\t\" + \"Project name:  Rag\" + \"\\n\" + \"\\t\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + \"Allocated Budget:  100.0\" + \"\\n\" + \"\\t\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + \"Total Spending: 0.0\", project.giveProject());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 41
    }
  },
  {
    "path": "src/test/java/storagetest/StorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package storagetest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Fund;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import project.Project;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "//@@author leowyh"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void alwaysTrue() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void test_WriteAndReadCurrentProjectName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String expectedcurrentprojectname \u003d \"Rag\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            storage.writeTocurrentprojectnameFile(\"Rag\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String outputcurrentprojectname \u003d storage.readFromcurrentprojectnameFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            assertEquals(expectedcurrentprojectname, outputcurrentprojectname);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void test_writeAndReadProjectsFile_sucess() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            LinkedHashMap\u003cString, Project\u003e expectedprojectmap \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            expectedprojectmap.put(\"Arts Night\", new Project(\"Arts Night\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            expectedprojectmap.put(\"Rag\", new Project(\"Rag\", 100.0));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            storage.writeToProjectsFile(expectedprojectmap);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            LinkedHashMap\u003cString, Project\u003e outputprojectmap \u003d storage.readFromProjectsFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            assertEquals(expectedprojectmap.size(), outputprojectmap.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            for (int i \u003d 0; i \u003c expectedprojectmap.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                Project expectedproject \u003d (Project) expectedprojectmap.values().toArray()[i];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                Project outputproject \u003d (Project) outputprojectmap.values().toArray()[i];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                assertEquals(expectedproject.giveProject(), outputproject.giveProject());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    void test_WriteAndReadFundFile() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Fund expectedfund \u003d new Fund();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            expectedfund.loadFund(1000, 100,900);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            storage.writeToFundFile(expectedfund);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Fund outputfund \u003d storage.readFromFundFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            assertEquals(expectedfund.giveFund(), outputfund.giveFund());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 74
    }
  }
]
