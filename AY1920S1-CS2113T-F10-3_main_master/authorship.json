[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import command.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import command.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * \u003ch1\u003eDuke\u003c/h1\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Duke is a program that tracks a list of tasks given by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * @author Leow Yong Heng"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static TaskList tasklist;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static HashMap\u003cString, Payee\u003e managermap;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Duke instance and initialises the required attributes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filepath Filepath to the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke(String filepath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        //ArrayList\u003cTask\u003e arraylist \u003d storage.load(); \u003c-- Giving file not found exception, to remove"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        managermap \u003d new HashMap\u003cString, Payee\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method to run the Duke instance and take in the inputs of the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.startMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            isExit \u003d Parser.parse(input, tasklist, ui, storage, managermap);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     * The main method of the Duke program, which instantiates a duke instance with the filepath to the storage."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 47,
      "leowyh": 7
    }
  },
  {
    "path": "src/main/java/command/Instruction.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "karansarat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Instruction {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isBye(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.equals(\"bye\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isList(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.equals(\"list\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDone(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"done\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDeadline(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"deadline\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDoAfter(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"DoAfter\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isDelete(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"delete\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isFind(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"find\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isWithinPeriodTask(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"within\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isSnooze(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"snooze\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isPostpone(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"postpone\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isReschedule(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"reschedule\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isViewSchedule(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"View Schedule\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isReminder(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"reminder\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isEdit(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"edit\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isPayment(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"payment\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isPayee(String input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"payee\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public boolean isgetpayee(String input)  {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return input.startsWith(\"getpayee\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 74
    }
  },
  {
    "path": "src/main/java/command/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import common.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.PaymentManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import task.DoAfterTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import task.WithinPeriodTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Parser that parses input from the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    private static Instruction instr \u003d new Instruction();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    private static Process process \u003d new Process();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Method that parses input from the user and executes processes based on the input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param storage Storage for the Tasklist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Returns boolean variable to indicate when to stop parsing for input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException if input is not valid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static boolean parse(String input, TaskList tasklist, Ui ui,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                                Storage storage, HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (instr.isBye(input)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                //print bye message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.byeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.getIn().close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isList(input)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                //print out current list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.printList(tasklist, \"list\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isDone(input)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.done(input, tasklist, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isDeadline(input)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.deadline(input, tasklist, ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isDoAfter(input)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.doAfter(input, tasklist, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                Storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isDelete(input)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.delete(input, managermap, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isFind(input)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                // process.find(input, tasklist, ui);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isWithinPeriodTask(input)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.within(input, tasklist, ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isSnooze(input)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.snooze(input, tasklist, ui);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            `} else if (instr.isPostpone(input)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.postpone(input, tasklist, ui);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                storage.save(tasklist.returnArrayList());`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isReschedule(input)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                // process.reschedule(input, tasklist, ui);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isViewSchedule(input)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.viewSchedule(input, tasklist, ui);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                //storage.save(tasklist.returnArrayList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isReminder(input)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                //process.reminder(input, tasklist, ui);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isEdit(input)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                // process.edit(input,tasklist,ui);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isPayment(input)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.payment(input, managermap, ui);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isgetpayee(input)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.findPayee(input, ui, managermap);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (instr.isPayee(input)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                process.payee(input, managermap, ui);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * Processes the find command and outputs a list of tasks containing the word."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processFind(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            TaskList findlist \u003d new TaskList();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Task tasks : tasklist.returnArrayList()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                if (tasks.getDescription().contains(splitspace[1])) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                    findlist.addTask(tasks);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.printList(findlist, \"find\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The content to find cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static void processEdit(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String[] splitedit \u003d splitspace[1].split(\" d/\", 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int nedit \u003d Integer.parseInt(splitedit[0]) - 1;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String description \u003d splitedit[1];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasklist.get(nedit).setDescription(description);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.printEditMessage(tasklist.get(nedit));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "karansarat": 34,
      "lijiayu980606": 11,
      "-": 78,
      "leowyh": 12
    }
  },
  {
    "path": "src/main/java/command/Process.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "karansarat"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.PaymentList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.PaymentManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import payment.Payments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.DoAfterTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import task.WithinPeriodTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Process {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Trims leading and trailing whitespace of an array of strings"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param arr The array of Strings to clean"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @return cleanArr The array of Strings after cleaning"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    private String[] cleanStrStr(String[] arr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String[] cleanArr \u003d arr.clone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            cleanArr[i] \u003d arr[i].trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        return cleanArr;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the find command and outputs a list of payments from the payee name given."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap HashMap containing all Payees and their Payments."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void findPayee(String input, Ui ui, HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            PaymentList payList \u003d new PaymentList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (Payments payment : managermap.get(splitspace[1]).payments) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                payList.addPayments(payment);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.printPaymentList(payList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The content to find cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the View Schedule command and outputs the schedule for the specific date entered in the input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void viewSchedule(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            TaskList findlist \u003d new TaskList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (Task tasks : tasklist.returnArrayList()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                if (tasks.giveTask().contains(splitspace[2])) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    findlist.addTask(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ArrayList\u003cString\u003e time \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (Task tasks: findlist.returnArrayList()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String[] splitcolon \u003d tasks.giveTask().split(\":\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String[] splitspaces \u003d splitcolon[1].split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                time.add(splitspaces[2]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            Collections.sort(time);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            TaskList finalList \u003d new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (int i \u003d 0; i \u003c time.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                for (Task tasks: findlist.returnArrayList()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    if (tasks.giveTask().contains(time.get(i))) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        finalList.addTask(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.printList(finalList, \"View Schedule\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The content to find cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the delete command."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * INPUT FORMAT: delete p/payee i/item"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap HashMap containing all Payees and their Payments."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void delete(String input, HashMap\u003cString, Payee\u003e managermap, Ui ui) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        String[] split \u003d arr[1].split(\"p/|i/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        split \u003d cleanStrStr(split);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Payments deleted \u003d PaymentManager.deletePayments(split[1], split[2], managermap);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ui.printDeleteMessage(split[1], deleted, managermap.get(split[1]).payments.size());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the done command and sets the task specified as done."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void done(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int numdone \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            tasklist.get(numdone).setDone();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.printDoneMessage(numdone, tasklist);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to indicate as done.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the deadline command and adds a deadline to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void deadline(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskDescription, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            tasklist.addTask(deadline);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.printAddedMessage(deadline, tasklist);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the DoAfter command and adds a task,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * which has to be done after another task or a specific date and time,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void doAfter(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (taskTime.contains(\"/\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                DoAfterTasks after \u003d new DoAfterTasks(taskDescription, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                tasklist.addTask(after);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printAddedMessage(after, tasklist);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                DoAfterTasks after \u003d new DoAfterTasks(taskDescription, taskTime);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                tasklist.addTask(after);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printAddedMessage(after, tasklist);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The description of a DoAfter cannot be empty.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the within command and adds a withinPeriodTask to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void within(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitand \u003d splittime[1].split(\"and \", 2);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String taskstart \u003d splitand[0];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String taskend \u003d splitand[1];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            Date formattedtimestart \u003d dataformat.parse(taskstart);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            Date formattedtimeend \u003d dataformat.parse(taskend);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            WithinPeriodTask withinPeriodTask \u003d new WithinPeriodTask(taskDescription,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    dataformat.format(formattedtimestart), dataformat.format(formattedtimeend));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            tasklist.addTask(withinPeriodTask);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.printAddedMessage(withinPeriodTask, tasklist);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! The description of a withinPeriodTask cannot be empty.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Process the snooze command and automatically postpone the selected deadline task by 1 hour."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void snooze(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int nsnooze \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (tasklist.get(nsnooze).getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String taskTime \u003d tasklist.get(nsnooze).getBy();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                calendar.setTime(formattedtime);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                calendar.add(Calendar.HOUR_OF_DAY,1);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                tasklist.get(nsnooze).setBy(tasklist.get(nsnooze).getInVoice());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printSnoozeMessage(tasklist.get(nsnooze));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Please select a deadline type task to snooze.\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to snooze.\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Process the postpone command and postpone the selected deadline task by required number of hours."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void postpone(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splittime \u003d splitspace[1].split(\" \", 2);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int npostpone \u003d Integer.parseInt(splittime[0]) - 1;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int delaytime \u003d Integer.parseInt(splittime[1]);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (tasklist.get(npostpone).getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String taskTime \u003d tasklist.get(npostpone).getBy();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                calendar.setTime(formattedtime);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                calendar.add(Calendar.HOUR_OF_DAY,delaytime);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                tasklist.get(npostpone).setBy(tasklist.get(npostpone).getInVoice());"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printPostponeMessage(tasklist.get(npostpone));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Please select a deadline type task to postpone.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to postpone. \""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    + \"Format:\u0027postpone \u003cindex\u003e \u003cno.of hours to postpone\u003e\u0027\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong. \""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    + \"Format:\u0027postpone \u003cindex\u003e \u003cno.of hours to postpone\u003e\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void reschedule(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splittime \u003d splitspace[1].split(\" \", 2);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int nreschedule \u003d Integer.parseInt(splittime[0]) - 1;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String delay \u003d splittime[1];"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (tasklist.get(nreschedule).getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(delay);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String newschedule \u003d dataformat.format(formattedtime);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                tasklist.get(nreschedule).setBy(tasklist.get(nreschedule).getInVoice());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printRescheduleMessage(tasklist.get(nreschedule));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (tasklist.get(nreschedule).getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Date formattedtime \u003d dataformat.parse(delay);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String newschedule \u003d dataformat.format(formattedtime);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                tasklist.get(nreschedule).setAt(newschedule);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printRescheduleMessage(tasklist.get(nreschedule));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.exceptionMessage(\"     ☹ OOPS!!! Please select a deadline type task to reschedule.\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the list number to reschedule. \""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    + \"Format:\u0027postpone \u003cindex\u003e \u003cthe new scheduled time in dd/mm/yyyy HHmm\u003e\u0027\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Format of time is wrong. \""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    + \"Format:\u0027postpone \u003cindex\u003e \u003cthe new scheduled time in dd/mm/yyyy HHmm\u003e\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void edit(String input, TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitedit \u003d splitspace[1].split(\" d/\", 2);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            int nedit \u003d Integer.parseInt(splitedit[0]) - 1;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String description \u003d splitedit[1];"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            tasklist.get(nedit).setDescription(description);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.printEditMessage(tasklist.get(nedit));"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "karansarat"
        },
        "content": "*/"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the payment add command, saves a new payment under a specified payee."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * INPUT FORMAT: payment add p/payee i/item c/111 v/invoice"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap HashMap containing all Payees and their Payments."
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void payment(String input, HashMap\u003cString, Payee\u003e managermap, Ui ui) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (splitspace[1].startsWith(\"add\")) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"p/|i/|c/|v/\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String payee \u003d splitpayments[1];"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String item \u003d splitpayments[2];"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                double cost \u003d Double.parseDouble(splitpayments[3]);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String invoice \u003d splitpayments[4];"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Payments payment \u003d PaymentManager.addPayments(payee, item, cost, invoice, managermap);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printAddPaymentMessage(splitpayments[1], payment);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            //TODO --\u003e delete payment"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            //TODO --\u003e edit payment"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There is no payee with that name yet, please add the payee first!\");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Processes the payee add command, saves a new payee inside managermap."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * INPUT FORMAT: payment add p/payee i/item c/111 v/invoice"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param managermap HashMap containing all Payees and their Payments."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void payee(String input, HashMap\u003cString, Payee\u003e managermap, Ui ui) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (splitspace[1].startsWith(\"add\")) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String[] splitpayments \u003d splitspace[1].split(\"p/|e/|m/|ph/\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                splitpayments \u003d cleanStrStr(splitpayments);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String payeename \u003d splitpayments[1];"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String email \u003d splitpayments[2];"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String matricNum \u003d splitpayments[3];"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                String phoneNum \u003d splitpayments[4];"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Payee payee \u003d PaymentManager.addPayee(payeename, email, matricNum, phoneNum, managermap);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                ui.printAddPayeeMessage(splitpayments[1], payee);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            //TODO --\u003e delete payee"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            //TODO --\u003e edit payee"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! Please input the correct command format (refer to user guide)\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            ui.exceptionMessage(\"     ☹ OOPS!!! There is no payee with that name yet, please add the payee first!\");"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 379,
      "-": 2
    }
  },
  {
    "path": "src/main/java/payment/Field.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "enum Field {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    PAYEE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    EMAIL,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    MATRIC,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    PHONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    ITEM,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    COST,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    INV,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    STATUS"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 13
    }
  },
  {
    "path": "src/main/java/payment/Payee.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Payments Class to manage the payment details of an item."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Payee {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String payee;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String email;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String matricNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String phoneNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public ArrayList\u003cPayments\u003e payments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a Payee object with the payee\u0027s information and list of payments."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param payee Payee\u0027s name."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param email Payee\u0027s email."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param matricNum Payee\u0027s matriculation number."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param phoneNum Payee\u0027s phone number."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public Payee(String payee, String email, String matricNum, String phoneNum) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.payee \u003d payee;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.matricNum \u003d matricNum;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.phoneNum \u003d phoneNum;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        this.payments \u003d new ArrayList\u003cPayments\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 7,
      "leowyh": 25
    }
  },
  {
    "path": "src/main/java/payment/PaymentList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class PaymentList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArrayList\u003cPayments\u003e paymentlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public PaymentList(ArrayList\u003cPayments\u003e paymentlist) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        this.paymentlist \u003d paymentlist;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public PaymentList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        this.paymentlist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addPayments(Payments payment) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        paymentlist.add(payment);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return paymentlist.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public Payments get(int number) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return paymentlist.get(number);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 4,
      "-": 24
    }
  },
  {
    "path": "src/main/java/payment/PaymentManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * PaymentManager for managing Payments objects and PaymentForms from the PaymentsList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public abstract class PaymentManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    static ArrayList\u003cPayments\u003e paymentsArrayList \u003d new ArrayList\u003cPayments\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Finds the Payments objects containing a payee name and returns a list of Payments."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param payee Payee of the item."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static ArrayList\u003cPayments\u003e findPayee(String payee, HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        for (Payments payment : managermap.get(payee).payments) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            paymentsArrayList.add(payment);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            //TODO Output payment to UI"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return paymentsArrayList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Edits the Payments object details, may overload string to take different ways of inputs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void editPayee(String payee, String inv, Field field, String replace, HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        if (inv.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            if (field \u003d\u003d Field.PAYEE) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                managermap.get(payee).payee \u003d replace;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (field \u003d\u003d Field.EMAIL) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                managermap.get(payee).email \u003d replace;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (field \u003d\u003d Field.MATRIC) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                managermap.get(payee).matricNum \u003d replace;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            } else if (field \u003d\u003d Field.PHONE) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                managermap.get(payee).phoneNum \u003d replace;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            for (Payments payment : managermap.get(payee).payments) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                if (payment.inv.equals(inv)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    if (field \u003d\u003d Field.ITEM) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        payment.item \u003d replace;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    } else if (field \u003d\u003d Field.COST) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        payment.cost \u003d Double.parseDouble(replace);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    } else if (field \u003d\u003d Field.INV) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                        payment.inv \u003d replace;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                assert (false); //Invalid invoice number \u003c-- TODO : Raise error"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * List the Payments object details, may extend to generate statement of accounts."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static void listPayments(HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cPayments\u003e overdue \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cPayments\u003e pending \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        ArrayList\u003cPayments\u003e approved \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Date currDate \u003d new Date();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        for (Payee payee : managermap.values()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (Payments payment : payee.payments) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                if (payment.status \u003d\u003d Status.PENDING) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    pending.add(payment);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                } else if (payment.status \u003d\u003d Status.OVERDUE) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    overdue.add(payment);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    approved.add(payment);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        // printList(); \u003c-- TODO : Modify implementation in UI"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Deletes the Payments object details."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static Payments deletePayments(String payee, String item, HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        while (i \u003c managermap.get(payee).payments.size()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (managermap.get(payee).payments.get(i++).item.equals(item)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                Payments deleted \u003d new Payments(item, managermap.get(payee).payments.get(--i).cost,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                        managermap.get(payee).payments.get(i).inv);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                managermap.get(payee).payments.remove(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                return deleted;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Add the Payments object details to PaymentsList."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static Payments addPayments(String payee, String item, double cost, String inv,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                                       HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Payments pay \u003d new Payments(item, cost, inv);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        managermap.get(payee).payments.add(pay);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return pay;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Add Payee object to managermap."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static Payee addPayee(String payee, String email, String matricNum, String phoneNum,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                                 HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Payee payeeNew \u003d new Payee(payee, email, matricNum, phoneNum);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        managermap.put(payee, payeeNew);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return payeeNew;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 34,
      "-": 6,
      "leowyh": 75
    }
  },
  {
    "path": "src/main/java/payment/Payments.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Payments Class to record details of an item payment."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Payments {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String item;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public double cost;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String inv;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Date deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Status status;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates an instance of a Payment object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param item Item of the payment."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param cost Cost of the item."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param inv Invoice for the payment."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Payments(String item, double cost, String inv) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.inv \u003d inv;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.status \u003d Status.PENDING;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Date currDate \u003d new Date();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.deadline \u003d new Date(currDate.getTime() + TimeUnit.DAYS.toMillis(30));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public String givePayments() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return item + \"/n\" + cost + \"/n\" + inv + \"/n\" + status + \"/n\" + deadline;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "leowyh": 30
    }
  },
  {
    "path": "src/main/java/payment/Status.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "package payment;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "enum Status {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    PENDING,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    APPROVED,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    OVERDUE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 7
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Task containing information of a deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Deadline instance and initialises the required attributes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param by Deadline of the task in format \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.by \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.inVoice \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * set the value of inVoice as true."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void setInVoice() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.inVoice \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        setBy(inVoice);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void setBy(boolean inVoice){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if(inVoice\u003d\u003dtrue){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Date date \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            calendar.setTime(date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            calendar.add(Calendar.DAY_OF_MONTH,30);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            this.by \u003d dataformat.format(newDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * return the boolean value (true or false) of the invoice."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return the task\u0027s invoice value."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean getInVoice() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return inVoice;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a string status of the Deadline task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task\u0027s status icon, description and deadline."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + super.giveTask() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 19,
      "-": 31,
      "leowyh": 15
    }
  },
  {
    "path": "src/main/java/task/DoAfterTasks.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "E0373902"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "E0373902"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Task containing information of a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class DoAfterTasks extends Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    //protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a DoAfterTasks instance and initialises the required attributes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of the DoAfterTasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param after Time of the DoAfterTasks in format \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    public DoAfterTasks(String description, String after) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "E0373902"
        },
        "content": "        this.after \u003d after;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d \"A\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "E0373902"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a string status of the Event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task\u0027s status icon, description and eventtime."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[A]\" + super.giveTask() + \"(after: \" + after + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "E0373902"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "E0373902"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "E0373902": 12
    }
  },
  {
    "path": "src/main/java/task/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "karansarat"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Reminder Class to handle reminders."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    String currDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    Calendar cal;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    Reminder() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        cal.add(Calendar.DATE, -1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Gets the current date."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void getCurrDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        Date date \u003d new Date();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        currDate \u003d formatter.format(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "karansarat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 22,
      "leowyh": 8
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * The parent Task class containing the description of the task and its done status."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String after;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String period;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected Boolean inVoice;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Task instance and initialises the required attributes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * Formats the representation of the Task to be printed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The task\u0027s status icon, description and deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public String giveTask() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gives the status icon of the Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The status icon of the Task based on isDone."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets as done the isDone attribute."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets a new value to the by attribute."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setBy(boolean inVoice) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if (inVoice) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date date \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            java.util.Calendar calendar \u003d java.util.Calendar.getInstance();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            calendar.setTime(date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            calendar.add(Calendar.DAY_OF_MONTH,30);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date newDate \u003d calendar.getTime();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            this.by \u003d dataformat.format(newDate);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets a new value to the at attribute."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Sets a new value to the description attribute."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the description of the Task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task Description."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the type of the Task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task type."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the deadline of the Task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task by."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the period of the Task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task at."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Gets the invoice status of the Task."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return a boolean value invoice."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public boolean getInVoice() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return this.inVoice;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 30,
      "-": 82,
      "leowyh": 11
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import common.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payee;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import payment.PaymentList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import payment.Payments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "karansarat"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Ui to interact with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a Ui instance with a scanner to read user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Reads input from the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Input from the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints starting message for the Duke program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public void startMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d line"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + line;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints ending message for the Duke program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        String output \u003d line + \"     Bye. Hope to see you again soon!\\n\" + line;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the list of tasks or the matching list of tasks depending on the command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param list TaskList of the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param command Command given by the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printList(TaskList list, String command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        int listsize \u003d list.size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // prints list or matching tasks in list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(line + \"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                System.out.print(line + \"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c listsize; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            int listnum \u003d i + 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(\"     \" + listnum + \".\" + list.get(i).giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the list of payments of a payee."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param paymentList paymentList of the payee."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printPaymentList(PaymentList paymentList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c paymentList.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(paymentList.get(i).givePayments());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate deletion of a Payment from the Payee and the number of Payments left."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payment Representation of the Payment that is deleted."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee the name of the payee to whom Payment was being made to"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param size the number of payments in the record for this Payee after deletion"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printDeleteMessage(String payee, Payments payment, int size) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(line + \"     Noted. I\u0027ve removed this payment: \\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Payee: \" + payee);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Item: \" + payment.item);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Cost: \" + payment.cost);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Invoice: \" + payment.inv);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"\\t\" + payee + \" now has \" + size + \" payments in the record.\" + \"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task is done."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param numdone Index of the Task in the TaskList."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printDoneMessage(int numdone, TaskList tasklist) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + tasklist.get(numdone).giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints message to indicate a task being added."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param task Task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printAddedMessage(Task task, TaskList tasklist) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve added this task:  \\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        int tasksize \u003d tasklist.size();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"     Now you have \" + tasksize + \" tasks in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task being snoozed."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Task to be snoozed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void printSnoozeMessage(Task task) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve snoozed this task:  \\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task being postponed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Task to be postponed."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printPostponeMessage(Task task) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve postponed this task:  \\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints message to indicate a Task being rescheduled."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task Task to be snoozed."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printRescheduleMessage(Task task) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve rescheduled this task:  \\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints message to indicate a task being edited."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param task Task to be edited."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void printEditMessage(Task task) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve edited this task:  \\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(\"       \" + task.giveTask() + \"\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the message for the exception thrown."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public void exceptionMessage(String message) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Payment being added to a certain Payee."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee name of entity Payment is directed to"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payment the new Payment containing the relevant information added to Payee object."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAddPaymentMessage(String payee, Payments payment) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this payment:\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Payee: \" + payee);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Item: \" + payment.item);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Cost: \" + payment.cost);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Invoice: \" + payment.inv);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Deadline: \" + payment.deadline);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Status: \" + payment.status);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * Prints message to indicate a Payment being added to a certain Payee."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param payee Payee containing identification information of Payee."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "karansarat"
        },
        "content": "     * @param name the name of Payee to make Payments to."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    public void printAddPayeeMessage(String name, Payee payee) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this payee:\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.println(\"\\t\" + \"Payee: \" + name);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Email: \" + payee.email);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Matric No: \" + payee.matricNum);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(\"\\t\" + \"Phone No: \" + payee.phoneNum);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints out the statement of accounts."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param managermap managermap containing Payee and Payments information."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static void generateStatementofAccounts(HashMap\u003cString, Payee\u003e managermap) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        System.out.print(\"Item\\tExpense\\n\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        for (Payee payee : managermap.values()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            for (Payments payment : payee.payments) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "karansarat"
        },
        "content": "                System.out.println(payment.item + \"\\t\" + payment.cost);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "karansarat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "karansarat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "karansarat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "karansarat"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the scanned input."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Scanned input."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    public Scanner getIn() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.in;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "karansarat": 33,
      "lijiayu980606": 7,
      "-": 152,
      "leowyh": 37
    }
  },
  {
    "path": "src/test/java/WithinPeriodTaskTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import task.WithinPeriodTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class WithinPeriodTaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void withinPeriodTaskTester() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        WithinPeriodTask withinPeriodTask \u003d new WithinPeriodTask(\"collect certificate \","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                \"02/12/2019 1800\", \"05/12/2019 1500\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(withinPeriodTask.giveTask(), \"[W][✘] collect certificate \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + \"(between: 02/12/2019 1800 and 05/12/2019 1500)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "leowyh": 5
    }
  }
]
