[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 13,
      "-": 40
    }
  },
  {
    "path": "src/main/java/Menu/CategoryList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package Menu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import Menu.MyMenu;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.Task.Item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * This class is to add categories for the respective menus"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class CategoryList extends MyMenu {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cItem\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void setList(ArrayList\u003cItem\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public ArrayList\u003cItem\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public CategoryList(String subMenuDescription, String menu) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super(subMenuDescription, menu);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 33
    }
  },
  {
    "path": "src/main/java/Menu/MyMenu.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package Menu;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "* To add al the main menu list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "* 1. Manage Students"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "* 2. Training Schedule"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "* 3. Training Circuits"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class MyMenu {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String myCategory;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String menu;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public MyMenu(String myCategory, String menu) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.myCategory \u003d myCategory;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.menu \u003d menu;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getMyCategory() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return myCategory;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getMenu() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return menu;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    public void trainingScheduleHeading() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.flush();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.println(\"TRAINING SCHEDULE: \\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    public void manageStudentsHeading() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.flush();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.println(\"MANAGE STUDENTS: \\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    public void trainingProgramHeading() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.flush();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.println(\"TRAINING PROGRAM: \\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 41
    }
  },
  {
    "path": "src/main/java/duke/Data/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.Sports.ManageStudents;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Module.Goal;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.Module.Schedule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Sports.ManageStudents;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Sports.MyClass;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.Sports.MyStudent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Module.Reminder;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import duke.Sports.MyPlan;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Parser is the controller for the string inputs received by the standard input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function takes the standard input defined by the user and"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * parses it into instructions for the Storage to read."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param io"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void parseInput(String io, TaskList tasks, Storage storage) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d io;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] word \u003d io.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String cmd \u003d word[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Schedule schedule \u003d new Schedule(\".\\\\src\\\\main\\\\java\\\\duke\\\\Module\\\\timeslots.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                tasks.showList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    tasks.doneTask(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    storage.updateFile(tasks.getList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! The following task does not exist!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "             * Creates task with a duration"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    String[] tempString \u003d input.split(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cString\u003e listString \u003d new ArrayList\u003cString\u003e(Arrays.asList(tempString));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    listString.remove(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    String info1 \u003d String.join(\" \", listString);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    String[] parseString \u003d info1.split(\"/in\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    ToDo todo \u003d new ToDo(parseString[0], false, parseString[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    tasks.addTask(todo, \"T\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    storage.saveFile(\"T\", todo, todo.getDate());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                    index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String info \u003d input.substring(9, index - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    String endDate \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    Deadline deadline \u003d new Deadline(info, false, endDate);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    tasks.addTask(deadline, \"D\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    storage.saveFile(\"D\", deadline, deadline.getDate());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! The task needs a deadline\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String info \u003d input.substring(6, index - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    String endDate \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    Event event \u003d new Event(info, false, endDate);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    tasks.addTask(event, \"E\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    storage.saveFile(\"E\", event, event.getDate());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! The task needs a deadline\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "             * Command should be in the form: reminder deadlines before 18/09/2019 1900"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "             * Push date before date into"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "             */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"reminder\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    index \u003d input.indexOf(\"before\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    Date date \u003d tasks.dateConvert(input.substring(index + 7));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                    Reminder reminder \u003d new Reminder(date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    reminder.getReminders(tasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.err.println(\"Incorrect format\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "             * Command should be in the form: aftertask return book /after exam"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "             * It will be stored as type [A]."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "             */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"aftertask\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    index \u003d input.indexOf(\"/after\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String info \u003d input.substring(10, index - 1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                    String endDate \u003d input.substring(index + 7);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    After after \u003d new After(info, false, endDate);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    tasks.addTask(after, \"A\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    storage.saveFile(\"A\", after, after.getDate());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! Please enter input in the form: aftertask XXX /after YYY\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                tasks.deleteTask(index);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                storage.updateFile(tasks.getList());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                String searchWord \u003d input.substring(5);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                tasks.findTask(searchWord);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                 * Command is in the form: plan new [intensity level] or plan view [intensity] [plan number]"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                 *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                case \"plan\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    MyPlan plan \u003d new MyPlan();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    if (word[1].equals(\"view\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        plan.loadPlan(word[2]);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    } else if (word[1].equals(\"new\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        plan.createPlan(word[3]);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                String searchDate \u003d input.substring(5);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                if (searchDate.length() \u003c 10) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Please enter input in the form: date dd/MM/YYYY\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    tasks.findDate(searchDate);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * Command should be in the form: class swimming /every monday"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * It will be stored as type [C]."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case \"class\":"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    index \u003d input.indexOf(\"/every\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String info \u003d input.substring(6, index - 1);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String day \u003d input.substring(index + 7);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    MyClass myclass \u003d new MyClass(info, false, day);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    tasks.addTask(myclass, \"C\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    storage.saveFile(\"C\", myclass, myclass.getDay());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! Please enter input in the form: class XXX /every YYY\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * View: schedule view-month|schedule view-week|schedule view-day 5/10/2019"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * Add: schedule add 5/10/2019 1500 5/10/2019 1600 pool Swimming"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * Delete: schedule delete Swimming"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "             */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            case \"schedule\":"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                if (word[1].equals(\"view-week\")) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(schedule.getWeek());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } else if (word[1].equals(\"view-month\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(schedule.getMonth());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } else if (word[1].equals(\"view-day\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        System.out.println(schedule.getDay(word[2]));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException | ParseException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        System.err.println(\"Enter a date please.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } else if (word[1].equals(\"add\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String startTime \u003d word[2] + \" \" + word[3];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String endTime \u003d word[4] + \" \" + word[5];"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String location \u003d word[6];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String className \u003d word[7];"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(schedule.addClass(startTime, endTime, location, className, tasks));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                } else if (word[1].equals(\"delete\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String name \u003d word[2];"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(schedule.delClass(name));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * View: goal view 5/10/2019"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * Add: goal add 5/10/2019 Makes sure every student masters freestyle"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             * Delete: goal delete 5/10/2019"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "             */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case \"goal\":"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Goal goal \u003d new Goal(\".\\\\src\\\\main\\\\java\\\\duke\\\\Module\\\\goals.txt\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (word[1].equals(\"add\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String date \u003d word[2];"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    index \u003d input.indexOf(word[3]);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String message \u003d input.substring(index);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(goal.addGoal(date,message));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word[1].equals(\"delete\")) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String date \u003d word[2];"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(goal.removeGoal(date));"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word[1].equals(\"view\")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String date \u003d word[2];"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(goal.viewGoal(date));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             *  Cmd \"home\" will list the menu items;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             *  1. View Schedule"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             *  2. Manage Students"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             *  3. Training Circuits"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"home\":"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Ui viewMenu \u003d new Ui();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                viewMenu.mainMenu();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             // Choosing Option 1 wil direct to \"Training Schedule\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"1\":"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.flush();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                // Write go to direct to View Schedule (Scott)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Ui trainingSchedule \u003d new Ui();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                trainingSchedule.trainingScheduleHeading();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             * Choosing option 2 will direct to \"Manage Students\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"2\":"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.flush();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Ui manageStudents \u003d new Ui();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                manageStudents.manageStudentsHeading();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                ManageStudents viewCategory \u003d new ManageStudents();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                viewCategory.manageStudentsCategory();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                // Write Code to direct to manage Students (Danish)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             * Choosing 3 will direct to \"Training Program\""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"3\":"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.flush();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Ui trainingProgram \u003d new Ui();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                trainingProgram.trainingProgramHeading();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                //Write Code to direct to Training Circuits (JingSen)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             * When cmd is to add class or student"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "             */"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                if (word[1].equals(\"student\")) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    index \u003d input.indexOf(\"student\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    String info \u003d input.substring(4, index-1);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    String age \u003d input.substring(index + 2);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    MyStudent myStudent \u003d new MyStudent(info, age);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    ManageStudents student \u003d new ManageStudents();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    student.addStudent(myStudent);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 62,
      "Eu Jing Sen": 2,
      "Sfloydzy": 39,
      "danisheddie": 60,
      "-": 114,
      "eujingsen": 18
    }
  },
  {
    "path": "src/main/java/duke/Data/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Sports.MyClass;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Storage handles all the loading and saving of data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * from and into the duke.txt file respectively."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner fileInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cItem\u003e oldList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Storage(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        fileInput \u003d new Scanner(f);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String dateRevert(String date) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Date newDateFormat \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzz yyyy\").parse(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String oldDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").format(newDateFormat);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return oldDateFormat;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.err.println(\"Error: Date in wrong format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function parses the info of the duke.txt into an ArrayList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return ArrayList containing all the parsed data from the duke.txt file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws FileNotFoundException          e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cItem\u003e loadFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            while (fileInput.hasNextLine()) { //do something"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                String type, info;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                Boolean stat;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                String s1 \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] data \u003d s1.split(\"-\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                type \u003d data[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                stat \u003d (data[1].equals(\"1\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    Item deadline \u003d new Deadline(data[2], stat, dateRevert(data[3]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    oldList.add(deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    Item event \u003d new Event(data[2], stat, dateRevert(data[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    oldList.add(event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    Item todo \u003d new ToDo(data[2], stat, data[3]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    oldList.add(todo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case \"A\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    Item after \u003d new After(data[2], stat, dateRevert(data[3]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    oldList.add(after);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case \"C\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    Item myClass \u003d new MyClass(data[2], stat, data[3]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    oldList.add(myClass);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(\"No data\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            return oldList;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function saves the newly created task into duke.txt."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param type The type of task created"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param e    The task created to be saved"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param date The date of the task created"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws IOException io"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void saveFile(String type, Item e, String date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.write(type + \"-\" + e.checkStatus() + \"-\" + e.getInfo() + \"-\" + e.getDuration() + \"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else if (type.equals(\"C\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.write(type + \"-\" + e.checkStatus() + \"-\" + e.getInfo() + \"-\" + date + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.write(type + \"-\" + e.checkStatus() + \"-\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    + e.getInfo() + \"-\" + e.getRawDate() + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function updates the list of tasks."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Erases the entire list that exists presently and rewrites the file."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param up The updated ArrayList that must be used to recreate the updated duke.txt"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws IOException io"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void updateFile(ArrayList\u003cItem\u003e up) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (Item i : up) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.write(i.getType() + \"-\" + i.checkStatus() + \"-\" + i.getInfo() + \"-\" + i.getRawDate() + \"\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 39,
      "Sfloydzy": 36,
      "-": 73
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Data.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.GUI.ViewModules;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static Stage window;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Duke(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * This program runs the main duke program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param args expects array of string objects"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        new Duke(\".\\\\src\\\\main\\\\java\\\\duke\\\\Data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void run() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        tasks.addAllList(storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    ui.goodbye();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ui.readCommand(input, tasks, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Upon running launcher main, start() will run."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        window \u003d stage;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Scene scene \u003d new Scene(ViewModules.layoutHome(), 1280, 720);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        stage.setTitle(\"Sports Manager\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 27,
      "Sfloydzy": 6,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/GUI/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Launcher() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Begin GUI application and run main duke class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param args expects array of string objects"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 3,
      "Sfloydzy": 6,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/GUI/ViewModules.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.layout.ColumnConstraints;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.layout.RowConstraints;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * This class creates all user interface modules."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Every component in the UI exists as a method."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class ViewModules {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Creates the time table of the scheduled events for the week."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * For use in the main menu"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return GridPane of the generated table"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public static GridPane timeTable() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        GridPane timetable \u003d new GridPane();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        timetable.setGridLinesVisible(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int numCols \u003d 8;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int numRows \u003d 11;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (int i \u003d 0; i \u003c numCols; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            ColumnConstraints colConst \u003d new ColumnConstraints();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            colConst.setPercentWidth(100.0 / numCols);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            timetable.getColumnConstraints().add(colConst);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (int i \u003d 0; i \u003c numRows; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            RowConstraints rowConst \u003d new RowConstraints();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            rowConst.setPercentHeight(100.0 / numRows);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            timetable.getRowConstraints().add(rowConst);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String[] days \u003d new String[] {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (int i \u003d 0; i \u003c days.length; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            timetable.add(new Label(days[i]), i + 1, 0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String[] periods \u003d new String[] {\"8am-9am\", \"9am-10am\", \"10am-11am\", \"11am-12pm\", \"12pm-1pm\", \"1pm-2pm\", \"2pm-3pm\", \"3pm-4pm\", \"4pm-5pm\", \"5pm-6pm\"};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (int i \u003d 0; i \u003c periods.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            timetable.add(new Label(periods[i]), 0, i + 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        timetable.setLayoutX(350);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        timetable.setLayoutY(125);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        timetable.setStyle(\"-fx-pref-height: 450px; -fx-pref-width: 850px; -fx-background-color: lavender;\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return timetable;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method creates the layout for the Schedule UI"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return Pane of the layoutSchedule"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public static Pane layoutSchedule() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Pane layoutSchedule \u003d new Pane();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //create the buttons"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonMenu \u003d new Button();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setText(\"Menu\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonStudents \u003d new Button();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setText(\"Manage Students\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonTraining \u003d new Button();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setText(\"Manage Training Programmes\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //add handler functions"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonMenu.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutHome(), 1280, 720)));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonStudents.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutStudents(), 1280, 720)));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonTraining.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutTraining(), 1280, 720)));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //sample text area"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        TextArea textArea \u003d new TextArea();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        textArea.setText(\"Set Schedule here\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        VBox vbox \u003d new VBox(textArea);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //Set coordinates of all buttons"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setLayoutX(100);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setLayoutY(300);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setLayoutX(100);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setLayoutY(450);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setLayoutX(20);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setLayoutY(20);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        vbox.setLayoutX(500);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        vbox.setLayoutY(200);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //change button style"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        layoutSchedule.getChildren().addAll(buttonStudents, buttonTraining, buttonMenu, vbox);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return layoutSchedule;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method creates the layout for the Students UI"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return Pane of the layoutStudents"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public static Pane layoutStudents() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Pane layoutStudents \u003d new Pane();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //create the buttons"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonMenu \u003d new Button();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setText(\"Menu\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonSchedule \u003d new Button();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setText(\"Manage Schedule\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonTraining \u003d new Button();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setText(\"Manage Training Programmes\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //add handler functions"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonMenu.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutHome(), 1280, 720)));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonSchedule.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutSchedule(), 1280, 720)));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonTraining.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutTraining(), 1280, 720)));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //sample text area"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        TextArea textArea \u003d new TextArea();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        textArea.setText(\"Set Students here\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        VBox vbox \u003d new VBox(textArea);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //Set coordinates of all buttons"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setLayoutX(100);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setLayoutY(150);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setLayoutX(100);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setLayoutY(450);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setLayoutX(20);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setLayoutY(20);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        vbox.setLayoutX(500);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        vbox.setLayoutY(200);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //change button style"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonTraining.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        layoutStudents.getChildren().addAll(buttonSchedule, buttonTraining, buttonMenu, vbox);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return layoutStudents;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Method creates the layout for the Training UI"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return Pane of the layoutTraining"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public static Pane layoutTraining() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Pane layoutTraining \u003d new Pane();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //create the buttons"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonMenu \u003d new Button();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setText(\"Menu\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonSchedule \u003d new Button();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setText(\"Manage Schedule\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Button buttonStudents \u003d new Button();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setText(\"Manage Students\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //add handler functions"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonMenu.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutHome(), 1280, 720)));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonSchedule.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutSchedule(), 1280, 720)));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonStudents.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutStudents(), 1280, 720)));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //sample text area"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        TextArea textArea \u003d new TextArea();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        textArea.setText(\"Set Training here\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        VBox vbox \u003d new VBox(textArea);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //Set coordinates of all buttons"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setLayoutX(100);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setLayoutY(150);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setLayoutX(100);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setLayoutY(300);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setLayoutX(20);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setLayoutY(20);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        vbox.setLayoutX(500);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        vbox.setLayoutY(200);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //change button style"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonSchedule.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonStudents.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        buttonMenu.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        layoutTraining.getChildren().addAll(buttonSchedule, buttonStudents, buttonMenu, vbox);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return layoutTraining;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Method creates the layout for the main menu UI"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return Pane of the layoutHome"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static Pane layoutHome() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Pane layoutHome \u003d new Pane();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //create the buttons"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Button buttonSchedule \u003d new Button();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonSchedule.setText(\"Manage Schedule\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Button buttonStudents \u003d new Button();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonStudents.setText(\"Manage Students\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Button buttonTraining \u003d new Button();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonTraining.setText(\"Manage Training Programmes\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //add handler functions"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonSchedule.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutSchedule(), 1280, 720)));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonStudents.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutStudents(), 1280, 720)));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonTraining.setOnAction(e -\u003e Duke.window.setScene(new Scene(layoutTraining(), 1280, 720)));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //Create the timetable of the week"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        GridPane timetable \u003d timeTable();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //Set coordinates of all buttons"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonSchedule.setLayoutX(100);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonSchedule.setLayoutY(150);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonStudents.setLayoutX(100);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonStudents.setLayoutY(300);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonTraining.setLayoutX(100);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonTraining.setLayoutY(450);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //change button style"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonSchedule.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonStudents.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        buttonTraining.setStyle(\"-fx-pref-height: 50px; -fx-pref-width: 180px; -fx-background-color: orange;\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        layoutHome.getChildren().addAll(buttonSchedule, buttonStudents, buttonTraining, timetable);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return layoutHome;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 69,
      "Sfloydzy": 161
    }
  },
  {
    "path": "src/main/java/duke/GUI/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Package holds all necessary code to initialize"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * the graphical user interface (GUI)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.GUI;"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 5
    }
  },
  {
    "path": "src/main/java/duke/Module/Goal.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Goal {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner fileInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A list which holds the optional goal of the day for any day."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private HashMap\u003cDate,String\u003e goals;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Goal(String filePath) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        fileInput \u003d new Scanner(f);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.goals \u003d loadGoal();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Reads filePath, takes in Strings and turns them into a hash map of goals."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public HashMap\u003cDate,String\u003e loadGoal() throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            HashMap\u003cDate,String\u003e temp \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            while (fileInput.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String s1 \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String[] data \u003d s1.split(\"-\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Date date \u003d simpleDateFormat.parse(data[0]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                temp.put(date,data[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This function updates the hash map of goals."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Erases the entire hash map that exists presently and rewrites the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param goals The updated hash map that must be used to recreate the updated goals.txt"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws IOException io"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void updateGoal(HashMap\u003cDate,String\u003e goals) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Iterator it \u003d goals.entrySet().iterator();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            while (it.hasNext()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Map.Entry pair \u003d (Map.Entry) it.next();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.write(df.format(pair.getKey()) + \"-\" + pair.getValue() + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                it.remove();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String addGoal(String date, String message) throws ParseException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        goals.put(today, message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        updateGoal(goals);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"New goal of the day has been added\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String removeGoal(String day) throws ParseException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Date d : goals.keySet()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (d.equals(today)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                goals.remove(d);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        updateGoal(goals);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"Goal of the day on \" + day + \" has been removed\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String viewGoal(String day) throws ParseException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        boolean hasGoal \u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Date d : goals.keySet()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (d.equals(today)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (!goals.get(d).isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    hasGoal \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    message +\u003d goals.get(d) + \"\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (!hasGoal) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return \"There is no goal of the day\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 122
    }
  },
  {
    "path": "src/main/java/duke/Module/Reminder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * This class serves to get reminders about all the deadlines due before the specified time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Date endDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    protected Date todayDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    protected ArrayList\u003cItem\u003e deadlineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor for the Reminder class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param endDate specified deadline in date-time format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Reminder(Date endDate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        todayDate \u003d new Date();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Date getTodayDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Today\u0027s date \" + todayDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Saved date: \" + endDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return todayDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void compareDates (TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ArrayList\u003cItem\u003e tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            deadlineList.addAll(Objects.requireNonNull(tasks.getReminderList(todayDate, endDate)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        catch (NullPointerException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"No deadlines due before specified date\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void getReminders(TaskList tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        compareDates(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!deadlineList.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Reminder to do these tasks before \" + tasks.dateToStringFormat(endDate));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            for (Item i: deadlineList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(count++ +\".\"+ i.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 8,
      "Sfloydzy": 4,
      "-": 48
    }
  },
  {
    "path": "src/main/java/duke/Module/Schedule.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.Module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.sql.Time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Class manages the timetable for the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Schedule {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner fileInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cTimeSlot\u003e list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Schedule(String filePath) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        fileInput \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.list \u003d loadTimeSlot();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This function saves the newly created TimeSlot into timeslots.txt"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param t The TimeSlot object created to be saved"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void saveTimeSlot(TimeSlot t) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.write(t.getClassName() + \"-\" + df.format(t.getStartTime()) + \"-\" + df.format(t.getEndTime()) + \"-\" + t.getLocation() + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Reads filePath, takes in Strings and turns them into a list of TimeSlot objects"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cTimeSlot\u003e loadTimeSlot() throws ParseException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            ArrayList\u003cTimeSlot\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            while (fileInput.hasNextLine()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String s1 \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String[] data \u003d s1.split(\"-\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Date date1 \u003d simpleDateFormat.parse(data[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Date date2 \u003d simpleDateFormat.parse(data[2]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                TimeSlot t \u003d new TimeSlot(date1,date2,data[3],data[0]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                temp.add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This function updates the list of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Erases the entire list that exists presently and rewrites the file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param up The updated ArrayList that must be used to recreate the updated duke.txt"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws IOException io"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void updateTimeSlot(ArrayList\u003cTimeSlot\u003e up) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (TimeSlot t : up) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.write(t.getClassName() + \"-\" + df.format(t.getStartTime()) + \"-\" + df.format(t.getEndTime()) + \"-\" + t.getLocation() + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Defined day which a class needs to be made;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void setDay (String newDay) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        day \u003d newDay;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Array of all possible months"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String[] months \u003d {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \"January\", \"February\", \"March\","
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \"July\", \"August\", \"September\","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \"October\", \"November\", \"December\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Array of all days in each month"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "//    private int[] days \u003d {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "//        31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "//    };"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Will print out a formatted calender."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param numberOfDays days in the month"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param startDay     beginning day in the month"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private static void printMonth(int numberOfDays, int startDay) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int weekdayIndex \u003d 0;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Su  Mo  Tu  We  Th  Fr  Sa\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (int day \u003d 1; day \u003c startDay; day++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.print(\"    \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            weekdayIndex++;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (int day \u003d 1; day \u003c\u003d numberOfDays; day++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.printf(\"%1$2d\", day);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            weekdayIndex++;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (weekdayIndex \u003d\u003d 7) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                weekdayIndex \u003d 0;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                System.out.print(\"  \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function gets the month of the current year."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String of all the days in the month"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getMonth() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int numDays \u003d cal.getActualMaximum(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        // Set the calendar to monday of the current week"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cal.set(Calendar.DAY_OF_MONTH, 1);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        // Print dates of the current week starting on Monday"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"MMM\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"--------------------------\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(df.format(cal.getTime()) + \" \" + cal.get(Calendar.YEAR));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        printMonth(numDays, cal.get(Calendar.DAY_OF_MONTH));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"--------------------------\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method will show the current days in the present week."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return List of all days in the week in the format [index] DAY DATE MONTH"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getWeek() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        StringBuilder week \u003d new StringBuilder();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int numDays \u003d cal.getActualMaximum(Calendar.DAY_OF_WEEK);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        // Set the calendar to monday of the current week"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        // Print dates of the current week starting on Monday"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"EEE dd MMM\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (int i \u003d 0; i \u003c numDays; i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            week.append(\"[\").append(i + 1).append(\"]. \").append(df.format(cal.getTime())).append(\"\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cal.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return week.toString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function gets all the hours in the selected day."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Will load events if events have been allocated."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param dayOfClass The selected day of the month. e.g 5/10/2019"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String of every hour from 8am inside the day."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getDay(String dayOfClass) throws ParseException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (int i\u003d0; i\u003c\u003d24; i++) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String time \u003d (i \u003c 10) ? \"0\" + i + \"00\" : i + \"00\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Date now \u003d simpleDateFormat.parse(dayOfClass + \" \" + time);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"HH:mm\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            boolean isAssignedClass \u003d false;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            for (TimeSlot t : this.list) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (now.equals(t.getStartTime())) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    isAssignedClass \u003d true;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(df.format(now) + \" \" + t.getClassName() + \" from \" + df.format(t.getStartTime()) + \" to \" + df.format(t.getEndTime()) + \" at \" + t.getLocation());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (!isAssignedClass) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                System.out.println(df.format(now));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"--------------------------\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String addClass(String startTime, String endTime, String location, String className , TaskList taskList) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Date start \u003d taskList.dateConvert(startTime);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Date end \u003d taskList.dateConvert(endTime);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        TimeSlot timeSlot \u003d new TimeSlot(start, end, location, className);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.list.add(timeSlot);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        saveTimeSlot(timeSlot);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        updateTimeSlot(this.list);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"New training has been added\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String delClass(String name) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (this.list.isEmpty())"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return \"No class available\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (TimeSlot i: this.list) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (i.getClassName().equals(name)){"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                this.list.remove(index);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                updateTimeSlot(this.list);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                return \"Class removed\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            ++index;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"Class not found\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 106,
      "Sfloydzy": 142
    }
  },
  {
    "path": "src/main/java/duke/Module/TimeSlot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.Module;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Function contains all the details of a time slot that needs to be scheduled."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public final class TimeSlot {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Start of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Date startTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * End of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Date endTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Location of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String location;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Name of the Being taken."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * e.g: Soccer 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String className;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param start the specified start time"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param end   the specified end time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param loc   the specified location of the event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param name  the specified name of the event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public TimeSlot(final Date start, final Date end,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                     final String loc, final String name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.startTime \u003d start;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.endTime \u003d end;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.location \u003d loc;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.className \u003d name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getClassName() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.className;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Date getStartTime() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.startTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Date getEndTime() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.endTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setClassName(String name) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.className \u003d name;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setStartTime(Date date) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.startTime \u003d date;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setEndTime(Date date) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.endTime \u003d date;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setLocation(String location) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 33,
      "Sfloydzy": 42
    }
  },
  {
    "path": "src/main/java/duke/Module/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Package contains all the modules that will interact to duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Each Class is a feature of Duke."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * List of features."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * 1. Menu"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * 2. Schedule"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * 3. Managing Students"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * 4. Training Programs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.Module;"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 11
    }
  },
  {
    "path": "src/main/java/duke/Sports/ManageStudents.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.Sports;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.Data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * This class is called when option 2 is chosen."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * All commands related to students will be managed by this class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class ManageStudents {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cMyStudent\u003e studentList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void setStudentList(ArrayList\u003cMyStudent\u003e studentList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.studentList \u003d studentList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *  To get retrieve the list of students in the storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public ArrayList\u003cMyStudent\u003e getStudentList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.studentList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void addStudentList (Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//            setStudentList((Objects.requireNonNull(storage.loadFile())));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//            System.out.println(\"No previous list loaded\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void allStudents() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (MyStudent i : getStudentList()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(index++ + \". \" + i.getName());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method retrieve the total number of student in the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return Number of student in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public int getStudentListSize() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return studentList.size();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Adding a new student and listing the total number of students"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param index of the new student added"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void addStudent(MyStudent student) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        getStudentList().add(student);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"Student have been added: \\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                getStudentList().get(getStudentListSize()).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"Now you have \" + getStudentListSize() + \" students.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    public void manageStudentsCategory() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        System.out.println(\"MANAGE STUDENTS:\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                \"1. View all Students\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                \"2. Student Details\\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                \"3. Class Details\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                \"4. Student Progress\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                \"5. Personal Best\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//                \"6. Dietary Plan\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * This class is called when option 2 is chosen"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class ManageStudents {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    public ManageStudents(String myCategory, String menu) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        super(myCategory, menu);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void manageStudentsCategory() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"1. View all Students\\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"2. Student Details\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"3. Class Details\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"4. Student Progress\\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"5. Personal Best\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"6. Dietary Plan\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 95
    }
  },
  {
    "path": "src/main/java/duke/Sports/MyClass.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Sports;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Create a class for all the sports classes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class MyClass extends Item {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The day of the week it will be held. (i.e. Monday, Tuesday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A list of students attending this sports class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cMyStudent\u003e students \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A list of training programmes for this sports class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cMyTraining\u003e trainings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constructor method for MyClass."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param info   This parameter is the name of the sports class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param status This shows whether the sports class has been held this week or not."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param day  When it will be held. (i.e. Monday, Tuesday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public MyClass(final String info, final Boolean status, final String day) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(info, status);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super.setType(\"C\");     //Has its own item type \"C\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Get the day of the week this sports class is held."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.day;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Gets all the info of the sports class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return A string phrase containing all the details of the sports class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[C]\" + super.toString() + \" (every: \" + getDay() + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Get the list of students attending this sports class."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return an arraylist of MyStudent objects"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cMyStudent\u003e getStudents() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.students;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Get the list of training programmes for this sports class."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return an arraylist of MyTraining objects"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cMyTraining\u003e getTrainings() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.trainings;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Add a training programme to the sports class."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param training The training programme to add."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void addTraining(MyTraining training) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        trainings.add(training);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Edit a training programme for a sports class. (The name)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param training The name of the training programme to edit."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param newName New name to change to."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void editTrainingName(String training, String newName) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                x.changeName(newName);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Edit a training programme for a sports class. (The number of sets)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param training The name of the training programme to edit."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param newSets New number of sets to change to."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void editTrainingSets(String training, int newSets) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                x.changeSets(newSets);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Edit a training programme for a sports class. (The number of reps)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param training The name of the training programme to edit."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param newReps New number of reps to change to."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void editTrainingReps(String training, int newReps) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                x.changeReps(newReps);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Edit a training programme for a sports class. (The intensity)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param training The name of the training programme to edit."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param newIntensity New intensity to change to."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void editTrainingIntensity(String training, String newIntensity) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                x.changeIntensity(newIntensity);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 131
    }
  },
  {
    "path": "src/main/java/duke/Sports/MyPlan.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "package duke.Sports;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eujingsen"
        },
        "content": " * Loads a training plan from a txt file, or create a new plan, where we can do whatever with the plan"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eujingsen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "public class MyPlan {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private ArrayList\u003cMyTraining\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private int sets;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private int reps;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private int activity_num;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public int getSets() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.sets;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public int getReps() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.reps;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public int getActivityNum() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.activity_num;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void changeName(String name) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void changeSets(int sets) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.sets \u003d sets;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void changeReps(int reps) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.reps \u003d reps;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public ArrayList\u003cMyTraining\u003e getList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void loadPlan(String plan_num) throws FileNotFoundException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String filepath \u003d \".\\\\src\\\\main\\\\java\\\\duke\\\\Sports\\\\plan.txt\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        Scanner file \u003d new Scanner(new File(filepath));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String l1 \u003d file.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        while (file.hasNextLine()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            if (l1.equals(\"plan_num\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                String[] l2 \u003d file.nextLine().split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                MyTraining activity \u003d new MyTraining(l2[0],Integer.parseInt(l2[1]),Integer.parseInt(l2[2]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                getList().add(activity);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        System.out.println(\"You have loaded plan \" + plan_num + \" into the list\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void viewPlan() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        for (MyTraining i : getList()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            System.out.println(getList().toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void clearPlan() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        getList().clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void addActivity(String newName, int newSets, int newReps, int newActivity_num) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.activity_num \u003d activity_num;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        //getList().add(name);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void switchPos(int initial, int end) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        MyTraining s \u003d getList().get(initial);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        getList().add(end - 1, s);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        if (initial \u003e end) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            initial++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        getList().remove(initial);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    enum Intensity {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        High, Moderate, Relaxed"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void createPlan(String intensity) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            String[] input \u003d sc.nextLine().split(\" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            ArrayList\u003cMyTraining\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            while (!input.equals(\"finalize\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                MyTraining a \u003d new MyTraining(input[0], Integer.parseInt(input[1]), Integer.parseInt(input[2]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                temp.add(a);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                System.out.println(\"Successfully added activity: \" + a.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            System.out.println(\"Please enter a valid intensity level (High,Moderate,Relaxed)\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eujingsen": 109
    }
  },
  {
    "path": "src/main/java/duke/Sports/MyStudent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Sports;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a student."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class MyStudent{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String age;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String address;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constructor for the students"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param name Name of the student"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param age age of the student"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param address address of the student"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public MyStudent(String name, String age) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.age \u003d age;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        this.address \u003d address;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method is to retrieve the name of the student."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return name of student"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method is to retrieve the age of the student."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return age of student"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getAge() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.age;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method is to edit the name of the student."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param newName"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void changeName(String newName) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.name \u003d newName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//     * This method is to increment/update the age of the student."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    public void changeAge() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//        this.age++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method is to retrieve the address of the student."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getAddress() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return address;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method prints out the student name and their address (Or any RELEVANT details)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return getName() + \", \" + getAddress();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 27,
      "danisheddie": 46
    }
  },
  {
    "path": "src/main/java/duke/Sports/MyTraining.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Sports;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a training programme."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class MyTraining {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private int sets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private int reps;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String intensity;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public MyTraining(String name, int sets, int reps) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.sets \u003d sets;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.reps \u003d reps;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public int getSets() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.sets;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public int getReps() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.reps;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getIntensity() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.intensity;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "    public void changeName(String newName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "        this.name \u003d newName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "    public void changeSets(int newSets) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "        this.sets \u003d newSets;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void changeReps(int newReps) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.reps \u003d newReps;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "    public void changeIntensity(String newIntensity) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "        this.intensity \u003d newIntensity;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "        return getName() + \", sets of \" + getSets() + \" with \" + getReps() + \"reps each\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Eu Jing Sen"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 42,
      "Eu Jing Sen": 10,
      "eujingsen": 2
    }
  },
  {
    "path": "src/main/java/duke/Task/After.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class After extends Item {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * \"after\" is the date allocated to the task to be completed by."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Date after;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Date dateConvert (String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Date formatDate \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return formatDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Please enter a valid date format\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        catch (ParseException pe) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Date error\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String dateToStringFormat (Date date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String hour \u003d  new SimpleDateFormat(\"h\").format(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String min \u003d new SimpleDateFormat(\"mm\").format(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String marker \u003d new SimpleDateFormat(\"a\").format(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String day \u003d new SimpleDateFormat(\"d\").format(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String monthYear \u003d new SimpleDateFormat(\"MMMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String newDateFormat \u003d this.numOrdinal(Integer.parseInt(day)) + \" of \" + monthYear + \", \" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                hour + (min.equals(\"00\") ? marker : (\".\" + min + marker));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return newDateFormat;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String numOrdinal (int num) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String[] suffix \u003d new String[] { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\" };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        switch (num) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 13:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                return num + \"th\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                return num + suffix[num % 10];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public After(String info, Boolean status, String after) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        super(info, status);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        super.setType(\"A\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.after \u003d dateConvert(after);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function takes the \"after\" data in the After class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Converts it into the string output format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Format: 2nd of December 2019, 2pm."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return New string format"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDate () {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return dateToStringFormat(after);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function gets the unformatted date of after."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return after"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getRawDate() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.after;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Overrides the toString function in Item."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Extends function to include After class info."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return string of data with After class info"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[A]\" + super.toString() + \" (after: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 43,
      "Sfloydzy": 14,
      "-": 33
    }
  },
  {
    "path": "src/main/java/duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Creates a class for the Deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Deadline extends Item {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * \"by\" is the date-time allocated to the task to be completed by."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Date dateConvert (String date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Date formatDate \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return formatDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Please enter a valid date format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        catch (ParseException pe) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Date error\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String dateToStringFormat (Date date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String hour \u003d  new SimpleDateFormat(\"h\").format(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String min \u003d new SimpleDateFormat(\"mm\").format(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String marker \u003d new SimpleDateFormat(\"a\").format(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String day \u003d new SimpleDateFormat(\"d\").format(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String monthYear \u003d new SimpleDateFormat(\"MMMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String newDateFormat \u003d this.numOrdinal(Integer.parseInt(day)) + \" of \" + monthYear + \", \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                hour + (min.equals(\"00\") ? marker : (\".\" + min + marker));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return newDateFormat;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String numOrdinal (int num) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String[] suffix \u003d new String[] { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\" };"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        switch (num) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 13:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                return num + \"th\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                return num + suffix[num % 10];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor method for the Deadline class."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param info   This parameter is the info of the Item created"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param status The status of the Item created, either true or false"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date     the time to finish the task by"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Deadline(final String info,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    final Boolean status,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    final String date) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        super(info, status);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        super.setType(\"D\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.by \u003d dateConvert(date);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function takes the \"by\" data in the Event class."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Converts it into the string output format."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Format: 2nd of December 2019, 2pm."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return New string format"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDate () {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return dateToStringFormat(by);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function gets the unformatted date of by."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return by"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getRawDate() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Gets all the info of the deadline."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A string phrase containing all the details of the deadline object"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 40,
      "Sfloydzy": 19,
      "-": 44
    }
  },
  {
    "path": "src/main/java/duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Event extends Item {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * \"at\" is the date-time allocated to the task to be completed by."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Date dateConvert (String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Date formatDate \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return formatDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Please enter a valid date format\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        catch (ParseException pe) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Date error\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String dateToStringFormat (Date date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String hour \u003d  new SimpleDateFormat(\"h\").format(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String min \u003d new SimpleDateFormat(\"mm\").format(date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String marker \u003d new SimpleDateFormat(\"a\").format(date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String day \u003d new SimpleDateFormat(\"d\").format(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String monthYear \u003d new SimpleDateFormat(\"MMMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String newDateFormat \u003d this.numOrdinal(Integer.parseInt(day)) + \" of \" + monthYear + \", \" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                hour + (min.equals(\"00\") ? marker : (\".\" + min + marker));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return newDateFormat;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String numOrdinal (int num) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String[] suffix \u003d new String[] { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\" };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        switch (num) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            case 13:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                return num + \"th\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                return num + suffix[num % 10];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor method for the Event class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param info   This is the information about the task being added"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param status This determines if whether the Item"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *               added is completed or uncompleted"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date   the time to finish the task by"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Event(final String info, final Boolean status, final String date) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        super(info, status);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        super.setType(\"E\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.at \u003d dateConvert(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function takes the \"at\" data in the Event class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Converts it into the string output format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Format: 2nd of December 2019, 2pm."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return New string format"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDate () {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return dateToStringFormat(at);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function gets the unformatted date of at."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return at"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getRawDate() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function gets the type, information, and date of the task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String phrase with the type, info and date"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 40,
      "Sfloydzy": 20,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/Task/Item.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.layout.Pane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * This is the main superclass that contains all the attributes of the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * status: whether Item is complete or not."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Boolean status;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * info: the description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * type: the type of the Item created."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Length of time of the item."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor method for the Event class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param desc   This is the information about the task being added"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param status This determines if whether the Item"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *               added is completed or uncompleted"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Item(final String desc, final Boolean status) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.info \u003d desc;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function changes the status of the task to true."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Boolean changeStatus() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        status \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function sets the type of the Item."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param t The string type of the Item"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return the newly set type of the Item"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String setType(String t) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.type \u003d t;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Gets the type of the Item."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String type of the Item"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Gets the date of the Item."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String date of the Item"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Date getRawDate() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function returns a 1 or 0 if the status of the Item is complete (true)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return int 1 | 0"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Integer checkStatus() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return status ? 1 : 0;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method checks whether Item is complete"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return if task is complete"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function gets the info of the Item"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return info"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return this.info;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function will give a tick or cross depending if the status of the Item is true or false."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return tick or cross"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return (status ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the string of the status icon as a tick or cross and the info of the Item."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String phrase of all Item details"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String s \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getInfo();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Set duration."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param length time of activity"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void setDuration (String length) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        duration \u003d length;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Get duration for todo task."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getDuration () {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 145,
      "danisheddie": 1
    }
  },
  {
    "path": "src/main/java/duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * TaskList handles all the operations Duke uses."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cItem\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setList(ArrayList\u003cItem\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cItem\u003e getList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method loads all the ArrayList items from the previous load file into the current ArrayList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void addAllList(Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            setList((Objects.requireNonNull(storage.loadFile())));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"No previous list loaded\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method adds tasks to the list of tasks in duke"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param i    This is the first parameter, it takes the newly created Deadline/ToDo/Event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param type This is the second parameter, defines the type of task that has been created"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void addTask(Item i, String type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        getList().add(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n \" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            getList().get(getList().size() - 1).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"Now you have \" + (getList().size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function prints out the complete list of tasks in the ArrayList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Item i : getList()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println(count++ + \".\" + i.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function changes the status of a task from incomplete to complete."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index This is the index location of the task to be changed in the ArrayList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        getList().get(index).changeStatus();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            getList().get(index).toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function deletes the task from the list of tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * After deleting the function will print out what was deleted and the number of remaining"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * tasks left in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param index This is the index location of the task to be deleted in the ArrayList"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IndexOutOfBoundsException e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n \" + getList().get(index).toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Now you have \" + (getList().size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            getList().remove(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.err.println(\"Opps! Sorry that Item does not exist!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function locates all tasks that contain a keyword as defined by the user"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param word This parameter is the defined key word that must be searched for"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void findTask(String word) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        int cnt \u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Item i : getList()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            if (i.getInfo().contains(word)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (cnt \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(cnt++ + \". \" + i.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        if (cnt \u003d\u003d 1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Sorry, there are no tasks matching your search\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * This function locates all tasks on a certain date as defined by the user"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param word This parameter is the defined date that much be searched for"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void findDate(String word) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] temp \u003d word.split(\"/\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String dd \u003d numOrdinal(Integer.parseInt(temp[0]));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Month mm \u003d Month.of(Integer.parseInt(temp[1]));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        String yy \u003d temp[2];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        String check \u003d dd + \" of \" + mm + \" \" + yy;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Item i : getList()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            String desc \u003d i.toString();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            if (desc.toLowerCase().contains(check.toLowerCase())) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Here are the tasks on \" + check);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(index + \". \" + desc);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Sorry, there are no tasks on \" + check);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function takes in an integer number adds its correct number ordinal to the number."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param num This parameter is the number taken"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String of the input number with the ordinal attached to the end of the number"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String numOrdinal(int num) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String[] suffix \u003d new String[] {\"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\"};"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (num) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case 13:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return num + \"th\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return num + suffix[num % 10];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function takes specific date format dd/mm/yyyy hhmm and turns it into a string phrase."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param date The date taken in by the function"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The date that has been converted into a string phrase, if in incorrect format return original date"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws StringIndexOutOfBoundsException e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException  e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException                  thrown when date input is in incorrect format"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Date dateConvert(String date) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            Date formatDate \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            return formatDate;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Please enter a valid date format\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Date error\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * Function converts the date object to the date format 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param date the date to be converted"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String of new dat format"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String dateToStringFormat(Date date) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String hour \u003d new SimpleDateFormat(\"h\").format(date);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        String min \u003d new SimpleDateFormat(\"mm\").format(date);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        String marker \u003d new SimpleDateFormat(\"a\").format(date);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        String day \u003d new SimpleDateFormat(\"d\").format(date);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        String monthYear \u003d new SimpleDateFormat(\"MMMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String newDateFormat \u003d this.numOrdinal(Integer.parseInt(day)) + \" of \" + monthYear + \", \" +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            hour + (min.equals(\"00\") ? marker : (\".\" + min + marker));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        return newDateFormat;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     * Function checks to see which deadlines are between now and the specified end date"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param todayDate the present time"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param endDate   the specified end date and time"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if there are no deadlines"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cItem\u003e getReminderList(Date todayDate, Date endDate) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ArrayList\u003cItem\u003e deadlineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        Boolean isNotEmpty \u003d false;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Item i : getList()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            // check if deadline is before today\u0027s date,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (i.getType().equals(\"D\") \u0026\u0026 i.getRawDate().before(endDate) \u0026\u0026 todayDate.before(i.getRawDate()) \u0026\u0026 !i.isDone()) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                deadlineList.add(i);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                isNotEmpty \u003d true;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (isNotEmpty) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            return deadlineList;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 44,
      "Sfloydzy": 16,
      "-": 151,
      "eujingsen": 8
    }
  },
  {
    "path": "src/main/java/duke/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Represents the ToDo task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class ToDo extends Item {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * \"taskDuration\" is the date-time allocated to the task to be completed by."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String taskDuration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method is the constructor used to create the todo class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param info     This is the information about the task being added"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param status   This determines if whether"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *                 the Item added is completed or uncompleted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param duration the duration to of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public ToDo(final String info,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                final Boolean status,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                final String duration) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(info, status);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        super.setType(\"T\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.taskDuration \u003d duration;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This method is used to print out the type info and status of the Item."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[T]\" + super.toString() + \"(needs\" + taskDuration + \" hours)\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Gets the length of time of the activity."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getDuration () {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return this.taskDuration;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 23,
      "-": 22
    }
  },
  {
    "path": "src/main/java/duke/Task/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Package holds all Item classes."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Item classes are tasks that the user has to complete."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Package also classes that inherit the Item superclass."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Classes with inheritance:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * After"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * ToDo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * TaskList controls all the operations of the main class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.Task;"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 13
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Data.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Data.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function prints out the welcome message of Duke"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke, your personal sports manager!\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void mainMenu() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"SPORTS MANAGER\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"1. View Training Schedule\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"2. Manage Students\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"3. Training Circuits\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function prints out the goodbye message of Duke"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This function prints out the heading when option 1 is chosen"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void trainingScheduleHeading() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"TRAINING SCHEDULE:\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This function prints out the heading when option 2 is chosen"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void manageStudentsHeading() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"MANAGE STUDENTS:\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This function prints out the heading when option 3 is chosen"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void trainingProgramHeading() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"TRAINING PROGRAM:\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * This function takes the standard input defined by the user and passes it"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * into the Parser class"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input This is the string input defined by the user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void readCommand(String input, TaskList tasks, Storage storage) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        parser.parseInput(input, tasks, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 5,
      "Sfloydzy": 1,
      "danisheddie": 30,
      "-": 30,
      "eujingsen": 1
    }
  },
  {
    "path": "src/test/java/AfterTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.After;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a test for After class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class AfterTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void afterTest() throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        String cross \u003d \"✗\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Start afterTest\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "         * First test is for after a specific task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        String info \u003d \"return book\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String endDate \u003d \"16/08/2019 1600\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(endDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedDate \u003d TaskList.dateToStringFormat(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        After after \u003d new After(info, false, endDate);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[A][\" + cross + \"] return book (after: \" + expectedDate + \")\", after.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "         * Second test is for after a specific date"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String info2 \u003d \"buy bread\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        After after2 \u003d new After(info2, false, endDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"[A][\" + cross + \"] buy bread (after: \" + expectedDate + \")\",after2.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Passed afterTest\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 2,
      "-": 37
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Test to see if Deadline can be created"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public void alwaysTrue () {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return stuff\", false, \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"return stuff\", deadline.getInfo());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"2nd of December 2019, 6PM\", deadline.getDate());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 1,
      "-": 22
    }
  },
  {
    "path": "src/test/java/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a test for DukeException class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dukeExceptionTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Start dukeExceptionTest\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String outcome \u003d test();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Something went wrong.\",outcome);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Passed dukeExceptionTest\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public String test() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        String str \u003d \"Failed dukeExceptionTest\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (1 !\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"Something went wrong.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            str \u003d e.getMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 1,
      "-": 30
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 2,
      "-": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Event test to make sure event can be created"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void alwaysTrue () {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Event event \u003d new Event(\"return stuff\", false, \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"return stuff\", event.getInfo());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"2nd of December 2019, 6PM\", event.getDate());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 1,
      "Sfloydzy": 1,
      "-": 20
    }
  },
  {
    "path": "src/test/java/FindDateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.Task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.Task.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class FindDateTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public void FindDateTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String date \u003d \"23/09/2019\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        ArrayList\u003cItem\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String descr \u003d \"read book\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        String time \u003d \"23/09/2019 1830\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Event ev \u003d new Event(descr,false,time);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] temp \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String dd \u003d TaskList.numOrdinal(Integer.parseInt(temp[0]));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"23rd\",dd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Month mm \u003d Month.of(Integer.parseInt(temp[1]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        String month \u003d \"\" + mm;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"SEPTEMBER\", month);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String yy \u003d temp[2];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"2019\", yy);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        String check \u003d dd + \" of \" + mm + \" \" + yy;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (Item i : list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            String desc \u003d i.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(\"[E][✗] read book (at: 23rd of September 2019, 6.30pm)\", desc);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Passed FindDateTest\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 5,
      "-": 35
    }
  },
  {
    "path": "src/test/java/ReminderTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Module.Reminder;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class ReminderTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      assertEquals(2, 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Tests the saving of the dates to the reminder class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public void reminderTestDate () {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        String date \u003d \"20/09/2020 1900\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        Date formatDate \u003d TaskList.dateConvert(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Reminder reminder \u003d new Reminder(formatDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            Date expectedDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(expectedDate, reminder.getEndDate());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            System.err.println(\"Date error\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 2,
      "-": 33
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Test to see if TaskList can be created"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    protected TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void alwaysTrue () {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dateTest () {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d \"02/12/2019 1800\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date \u003d taskList.dateConvert(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        String newDate \u003d taskList.dateToStringFormat(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"2nd of December 2019, 6pm\", newDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void OrdinalTest () {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        int num \u003d 19;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String output \u003d taskList.numOrdinal(num);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"19th\", output);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 1,
      "-": 32
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Test to see if Todo can be created"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void alwaysTrue () {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ToDo todo \u003d new ToDo(\"return library books\",false, \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"return library books\", todo.getInfo());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 2,
      "-": 20
    }
  }
]
