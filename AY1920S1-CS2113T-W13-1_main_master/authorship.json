[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    archiveBaseName \u003d \"sportsManager\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    mainClassName \u003d \"duke.launcher.Duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 13,
      "Sfloydzy": 1,
      "danisheddie": 1,
      "-": 35
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class AddCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 3,
      "Sfloydzy": 1
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Schedule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.ManageStudents;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyPlan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a Command class which will be inherited"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * by specific *Command subclasses"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * to run their specific execute functions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Ui object which will be shared by all subclasses."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The exit status of the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private boolean exit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter function for the exit status of the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return exit the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.exit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Function to make the exit become true."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void makeExitTrue() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.exit \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The execute method which will be shared by all subclasses."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param tasks         The ArrayList of Task objects."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param sharedCLIView The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param storage       The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param schedule      The Schedule object to store classes in time slots."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param students      The ManageStudents object to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *                      manage students in classes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param plan          The MyPlan object to manage the training plans."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public abstract void execute(TaskList tasks,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                 CliView sharedCLIView,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                 Storage storage,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                 Schedule schedule,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                 ManageStudents students,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                 MyPlan plan);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 34,
      "Sfloydzy": 13,
      "danisheddie": 11
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DeleteCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 3,
      "Sfloydzy": 1
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Schedule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.ManageStudents;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyPlan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which ends the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Ends the program and shows the farewell message to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param cliView The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param schedule The Schedule object to store classes in timeslots."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param students The ManageStudents object to manage students in classes."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param plan The MyPlan object to manage the training plans."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void execute(final TaskList tasks, final CliView cliView,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        final Storage storage, final Schedule schedule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        final ManageStudents students, final MyPlan plan) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        makeExitTrue();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView.showGoodBye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 21,
      "Sfloydzy": 4,
      "danisheddie": 4
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Schedule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.ManageStudents;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyPlan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which informs the user that the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * user input was an invalid command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Informs the user that the user input was an invalid command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param cliView The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param schedule The Schedule object to store classes in timeslots."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param students The ManageStudents object to manage students in classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param plan The MyPlan object to manage the training plans."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void execute(final TaskList tasks, final CliView cliView,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        final Storage storage, final Schedule schedule,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        final ManageStudents students, final MyPlan plan) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView.showDontKnow();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 21,
      "Sfloydzy": 4,
      "danisheddie": 4
    }
  },
  {
    "path": "src/main/java/duke/command/ViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ViewCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 3,
      "Sfloydzy": 1
    }
  },
  {
    "path": "src/main/java/duke/command/package-info.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Package holds all necessary code"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * for the Command abstract class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.command;"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4,
      "Sfloydzy": 1
    }
  },
  {
    "path": "src/main/java/duke/data/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.TimeSlot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyClass;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyStudent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyTraining;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyPlan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.task.Item;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Storage handles all the loading and saving of data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * from and into the respective text files."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * File path of designated file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Possible alternative:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * private String filePath \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * The file of the saved data."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner fileInput;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param path The file path of the designated file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws FileNotFoundException is thrown when"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *                               file designated cannot be found."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Storage(final String path) throws FileNotFoundException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        filePath \u003d path;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        fileInput \u003d new Scanner(f);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function saves the newly created task into duke.txt."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param type The type of task created"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param e    The task created to be saved"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date The date of the task created"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws IOException io"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void saveFile(final String type, final Item e, final String date) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.write(type + \"-\" + e.checkStatus()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    + \"-\" + e.getInfo() + \"-\" + e.getDuration() + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else if (type.equals(\"C\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.write(type + \"-\" + e.checkStatus()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    + \"-\" + e.getInfo() + \"-\" + date + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.write(type + \"-\" + e.checkStatus() + \"-\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    + e.getInfo() + \"-\" + e.getRawDate() + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Converts date format."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date The string of date."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String of converted date object"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String dateRevert(final String date) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            Date newDateFormat \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                \"EEE MMM dd HH:mm:ss zzz yyyy\").parse(date);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            String oldDateFormat \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                \"dd/MM/yyyy HHmm\").format(newDateFormat);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return oldDateFormat;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.err.println(\"Error: Date in wrong format\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function parses the info of the duke.txt into an ArrayList."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return ArrayList containing all the parsed data from the duke.txt file"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws FileNotFoundException          e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public ArrayList\u003cItem\u003e loadFile() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            ArrayList\u003cItem\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            while (fileInput.hasNextLine()) { //do something"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                final String type;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                final String info;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                final int indexDay \u003d 3;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                Boolean stat;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String s1 \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String[] data \u003d s1.split(\"-\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                type \u003d data[0];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                stat \u003d (data[1].equals(\"1\"));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                info \u003d data[2];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case \"C\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String day \u003d data[indexDay];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    Item myClass \u003d new MyClass(info, stat, day);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    list.add(myClass);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(\"No data\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function updates the list of tasks."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Erases the entire list that exists presently and rewrites the file."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param up The updated ArrayList that must"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *           be used to recreate the updated duke.txt"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws IOException io"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void updateFile(final ArrayList\u003cItem\u003e up) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (Item i : up) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                fileWriter.write(i.getType() + \"-\" + i.checkStatus() + \"-\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    + i.getInfo() + \"-\" + i.getRawDate() + \"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Reads filePath, takes in Strings and turns them into a"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * list of TimeSlot objects."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return lists of TimeSlot objects"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @throws ParseException when parsing fails"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cTimeSlot\u003e loadSchedule() throws ParseException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            ArrayList\u003cTimeSlot\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            final int indexStartDate \u003d 1;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            final int indexEndDate \u003d 2;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            final int indexLocation \u003d 3;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            final int indexName \u003d 4;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            while (fileInput.hasNextLine()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String s1 \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String[] data \u003d s1.split(\"-\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String startDate \u003d data[indexStartDate];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String endDate \u003d data[indexEndDate];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String location \u003d data[indexLocation];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                String name \u003d data[indexName];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    \"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                Date date1 \u003d simpleDateFormat.parse(startDate);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                Date date2 \u003d simpleDateFormat.parse(endDate);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                TimeSlot t \u003d new TimeSlot(date1, date2, location, name);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                temp.add(t);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function saves the newly created TimeSlot into timeslots.txt."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param t The TimeSlot object created to be saved"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void saveSchedule(final TimeSlot t) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            fileWriter.write(t.getClassName() + \"-\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                + df.format(t.getStartTime()) + \"-\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                + df.format(t.getEndTime()) + \"-\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                + t.getLocation() + \"\\n\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This function updates the list of tasks."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param up The updated ArrayList that must be used to recreate the"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     *           updated timeslots.txt"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void updateSchedule(final ArrayList\u003cTimeSlot\u003e up) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (TimeSlot t : up) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                fileWriter.write(t.getClassName() + \"-\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    + df.format(t.getStartTime()) + \"-\""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    + df.format(t.getEndTime()) + \"-\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    + t.getLocation() + \"\\n\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Reads filePath, takes in Strings and turns them into a hash map of goals."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return A hash map of goals."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Map\u003cDate, ArrayList\u003cString\u003e\u003e loadGoal() throws ParseException {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Map\u003cDate, ArrayList\u003cString\u003e\u003e temp \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            while (fileInput.hasNextLine()) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String s1 \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String[] data \u003d s1.split(\"-\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    \"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Date date \u003d simpleDateFormat.parse(data[0]);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ArrayList\u003cString\u003e temp2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                for (String str : data) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    if (!str.equals(data[0])) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp2.add(str);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                temp.put(date, temp2);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This function updates the hash map of goals."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Erases the entire hash map that exists presently and rewrites the file."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param goals The updated hash map that must be used to recreate"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     *              the updated goals.txt"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws IOException io if the file cannot be found."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void updateGoal(final Map\u003cDate, ArrayList\u003cString\u003e\u003e goals) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            for (Map.Entry\u003cDate, ArrayList\u003cString\u003e\u003e entry : goals.entrySet()) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String extra \u003d \"\";"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ArrayList\u003cString\u003e temp \u003d entry.getValue();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                for (String str : temp) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    extra +\u003d \"-\" + str;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.write(df.format(entry.getKey()) + extra + \"\\n\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Reads filePath, takes in Strings and turns them into a"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * hash map of lessons learnt for the day."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return A hash map of lessons learnt for the day."
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Map\u003cDate, ArrayList\u003cString\u003e\u003e loadLesson() throws ParseException {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Map\u003cDate, ArrayList\u003cString\u003e\u003e temp \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            while (fileInput.hasNextLine()) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String s1 \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String[] data \u003d s1.split(\"-\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    \"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Date date \u003d simpleDateFormat.parse(data[0]);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ArrayList\u003cString\u003e temp2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                for (String str : data) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    if (!str.equals(data[0])) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp2.add(str);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                temp.put(date, temp2);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileInput.close();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This function updates the hash map of lessons learnt for the day."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Erases the entire hash map that exists presently and rewrites the file."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param lessons The updated hash map that must be used"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     *                to recreate the updated lessons.txt"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws IOException io if the file cannot be found."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void updateLesson(final Map\u003cDate, ArrayList\u003cString\u003e\u003e lessons) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.write(\"\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                \"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            for (Map.Entry\u003cDate, ArrayList\u003cString\u003e\u003e entry"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                : lessons.entrySet()) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String extra \u003d \"\";"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ArrayList\u003cString\u003e temp \u003d entry.getValue();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                for (String str : temp) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    extra +\u003d \"-\" + str;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                fileWriter.write(df.format(entry.getKey()) + extra + \"\\n\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"File not found:\" + io.getMessage());"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Update the student list file."
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param student The list of students to be changed"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void updateStudentList(final ArrayList\u003cMyStudent\u003e student) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        File studentListFile \u003d new File("
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            \".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\studentList.txt\");"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            PrintWriter printWriter \u003d new PrintWriter(studentListFile);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            for (MyStudent x : student) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                printWriter.println(x.toString() + \"\\n\");"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            printWriter.close();"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            printWriter.write(\"\");"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            printWriter.close();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"File not found: \" + io.getMessage());"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Load the file for the student list."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param student list to be read"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void readStudentListFile(final ArrayList\u003cMyStudent\u003e student) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String fileName \u003d \"studentList.txt\";"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        ArrayList loadStudent \u003d new ArrayList();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            FileReader fr \u003d new FileReader("
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                \".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\studentList.txt\");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            BufferedReader input \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (!input.ready()) {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            while ((line \u003d input.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String[] splitter \u003d line.split(\"\\n\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (int i \u003d 0; i \u003c splitter.length; i++) {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    splitter[i] \u003d splitter[i].trim();"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                MyStudent studentInfo \u003d new MyStudent(splitter[0],"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    splitter[1], splitter[2]);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                student.add(studentInfo);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Load plans from the text file to a map."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param map the map of plans to be saved to"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @throws FileNotFoundException File not found"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void loadPlans(final Map\u003cString,"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        ArrayList\u003cMyTraining\u003e\u003e map) throws FileNotFoundException {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        //MyPlan plan \u003d new MyPlan();"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        ArrayList\u003cMyTraining\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        File f \u003d new File(\".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\plan.txt\");"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String intensity \u003d \"\";"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        int planNum \u003d 0;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            if (f.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                System.out.println(\"Plan file is empty. Loading failed.\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                while (fileInput.hasNextLine()) {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    String in \u003d fileInput.nextLine();"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    if (in.contains(\"Intensity\")) {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        String[] line \u003d in.split(\": \");"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        if (line[1].equals(\"high\")) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            MyPlan.Intensity x \u003d MyPlan.Intensity.high;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            intensity \u003d x.toString();"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        } else if (line[1].equals(\"moderate\")) {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            MyPlan.Intensity x \u003d MyPlan.Intensity.moderate;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            intensity \u003d x.toString();"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        } else if (line[1].equals(\"relaxed\")) {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            MyPlan.Intensity x \u003d MyPlan.Intensity.relaxed;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            intensity \u003d x.toString();"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    if (in.contains(\"Plan\")) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        String[] line \u003d in.split(\": \");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        planNum \u003d Integer.parseInt(line[1]);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    if (in.contains(\" | \")) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        String[] line \u003d in.split(\" \\\\| \");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        MyTraining ac \u003d new MyTraining(line[0],"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            Integer.parseInt(line[1]),"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            Integer.parseInt(line[2]));"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        list.add(ac);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    if (in.equals(\"\\n\")) {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        //String key \u003d plan.createKey(intensity, planNum);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        //map.put(key, list);"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        System.out.println(\"Check\");"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            System.out.println(\"Exception: \" + e);"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Saves the map of plans to the text file after clearing it."
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param map Updated map of plans to be saved"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @throws IOException IO"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void savePlans(final Map\u003cString, ArrayList\u003cMyTraining\u003e\u003e map)"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        throws IOException {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        MyPlan plan \u003d new MyPlan();"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        ArrayList\u003cString\u003e keys \u003d plan.keyList();"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        PrintWriter clear \u003d new PrintWriter("
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            \".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\plan.txt\");"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        clear.close();"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        BufferedWriter buffer \u003d new BufferedWriter("
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            new FileWriter(\".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\plan.txt\","
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                true));"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d MyPlan.Intensity.values().length; i++) {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            MyPlan.Intensity x \u003d MyPlan.Intensity.valueOf(i);"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            buffer.write(\"Intensity: \" + x);"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            buffer.write(\"\\r\\n\");"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            for (String s : keys) {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                if (s.contains(x.toString())) {"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    ArrayList\u003cMyTraining\u003e p \u003d map.get(s);"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    buffer.write(\"Plan: \" + s.substring(s.length()));"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    for (MyTraining y : p) {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        buffer.write(y.toFile());"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        buffer.write(\"\\r\\n\");"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        buffer.close();"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 180,
      "Sfloydzy": 179,
      "danisheddie": 38,
      "eujingsen": 146
    }
  },
  {
    "path": "src/main/java/duke/data/package-info.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Package holds all necessary code to initialize"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * the graphical user interface (gui)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.data;"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 5
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Represents duke.exceptions specific to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public DukeException(final String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 8,
      "danisheddie": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/package-info.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Class containing custom exceptions for Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.exceptions;"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 5
    }
  },
  {
    "path": "src/main/java/duke/launcher/Duke.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.launcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.parser.ParserCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Schedule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.ManageStudents;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyPlan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Declaring new parser type."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ParserCommand parser \u003d new ParserCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * ui is the command line user interface object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Storage is the main class that writes files."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Tasks is the activities that can be saved in a day."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Students object that manages students in classes."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ManageStudents students;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * schedule manages all the tasks in the month/week/day."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Schedule schedule;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Plan is the training circuit plan for the day."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private MyPlan plan;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Width of the UI."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private final int width \u003d 1280;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Height of the UI."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private final int height \u003d 720;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor method."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws FileNotFoundException if storage or schedule files are not found"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException        if unable to load schedule"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Duke() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView \u003d new CliView();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        storage \u003d new Storage(\".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        students \u003d new ManageStudents();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //        schedule \u003d new Schedule("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //            new Storage(\".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\timeslots.txt\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        //            ).loadSchedule());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        plan \u003d new MyPlan();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This program runs the main duke program."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param args expects array of string objects"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static void main(final String[] args) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        CliView cliView \u003d new CliView();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView.execute();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Upon running launcher main, start() will run."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param stage The top level JavaFX container."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void start(final Stage stage) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            URL url \u003d Duke.class.getClassLoader().getResource(\"view/menu.fxml\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(url);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Parent root \u003d FXMLLoader.load(url);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            stage.setScene(new Scene(root, width, height));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            stage.setTitle(\"Sports Manager\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.err.println(\"Could not find menu.fxml\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 41,
      "Sfloydzy": 51,
      "danisheddie": 10,
      "eujingsen": 2,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/launcher/gui/Controller.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.launcher.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.launcher.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author Sfloyzy"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public final class Controller implements Initializable {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Width of scene."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private final int width \u003d 1280;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Height of scene."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private final int height \u003d 720;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void initialize(final URL location,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                           final ResourceBundle resources) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"View is now loaded!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method will submit when the submit button is pressed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void handleSubmit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Submit!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * When this method is called, the menu scene will be called."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param event Will get the active instance of the button."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void viewMenu(final ActionEvent event) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        URL url \u003d Duke.class.getClassLoader()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            .getResource(\"view/menu.fxml\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(url);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        assert url !\u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        changeScene(url, event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * When this method is called, the student scene will be called."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param event Will get the active instance of the button."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void viewStudents(final ActionEvent event) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        URL url \u003d Duke.class.getClassLoader()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            .getResource(\"view/student.fxml\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(url);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        assert url !\u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        changeScene(url, event);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * When this method is called, the training scene will be called."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param event Will get the active instance of the button."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void viewTraining(final ActionEvent event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        URL url \u003d Duke.class.getClassLoader()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            .getResource(\"view/training.fxml\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(url);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        assert url !\u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        changeScene(url, event);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * When this method is called, the schedule scene will be called."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param event Will get the active instance of the button."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void viewSchedule(final ActionEvent event) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        URL url \u003d Duke.class.getClassLoader()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            .getResource(\"view/schedule.fxml\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(url);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        assert url !\u003d null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        changeScene(url, event);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * When this method is called, the day scene will be called."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param event Will get the active instance of the button."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void viewDay(final ActionEvent event) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        URL url \u003d Duke.class.getClassLoader()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            .getResource(\"view/daily.fxml\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(url);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        assert url !\u003d null;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        changeScene(url, event);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method will change the scene of the current stage."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param url   Directory of the fxml file to be loaded"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param event The event handled by the button"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void changeScene(final URL url, final ActionEvent event) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            Parent root \u003d FXMLLoader.load(url);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            //get current stage information"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            Stage stage \u003d (Stage) ((Node) event.getSource())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                .getScene().getWindow();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            //Change scene"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            stage.setScene(new Scene(root, width, height));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            stage.setTitle(\"Sports Manager\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.err.println(\"Unable to open \" + url);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 3,
      "Sfloydzy": 130,
      "danisheddie": 2,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/launcher/gui/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.launcher.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.launcher.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public final class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Launcher() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //do nothing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Begin gui application and run main duke class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param args expects array of string objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static void main(final String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 22,
      "Sfloydzy": 1,
      "danisheddie": 2
    }
  },
  {
    "path": "src/main/java/duke/launcher/gui/package-info.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Package holds all necessary code to initialize"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * the graphical user interface (gui)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.launcher.gui;"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 3,
      "danisheddie": 2
    }
  },
  {
    "path": "src/main/java/duke/models/Goal.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Goal {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * A hash map which holds the optional goals of the day for any day."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private Map\u003cDate, ArrayList\u003cString\u003e\u003e goals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constructor for Goal objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param dateArrayListMap The hash map of goals of the day from loading"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *                         the goals.txt text file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Goal(final Map\u003cDate, ArrayList\u003cString\u003e\u003e dateArrayListMap) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.goals \u003d dateArrayListMap;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Shows all goals on a specific day."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param day The day to view all goals."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return A message containing all the goals of the day to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String viewGoal(final String day) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (Date d : goals.keySet()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (d.equals(today)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (goals.get(d).isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    return \"There is no goal of the day\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    for (String str : goals.get(d)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        message +\u003d str + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Adds a goal to the goals hash map."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param date        The date to add the goal to."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param message     The goal to add to the goals hash map."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param goalStorage The object responsible for storing the goals hash map."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return A message showing task completed successfully."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String addGoal(final String date, final String message,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                          final Storage goalStorage) throws ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        boolean alreadyHaveDate \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (Date d : goals.keySet()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (d.equals(today)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                alreadyHaveDate \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                goals.get(d).add(message);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (!alreadyHaveDate) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            temp.add(message);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            goals.put(today, temp);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        goalStorage.updateGoal(goals);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"New goal of the day has been added\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Removes a goal from the goals hash map."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param day         The date to remove the goal from."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param message     The specific goal to remove from the hash map."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param goalStorage The object responsible for storing the goals hash map."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return A message showing task completed successfully."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String removeGoal(final String day, final String message,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                             final Storage goalStorage) throws ParseException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (goals.containsKey(today)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            goals.get(today).remove(message);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (goals.get(today).isEmpty()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                goals.remove(today);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        goalStorage.updateGoal(goals);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"Goal of the day on \" + day + \" has been removed\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Removes all the goals from the goals hash map for a day."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param day         The date to remove all the goals from."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param goalStorage The object responsible for storing the goals hash map."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return A message showing task completed successfully."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String removeAllGoal(final String day,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                final Storage goalStorage)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        throws ParseException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (goals.containsKey(today)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            goals.remove(today);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            goalStorage.updateGoal(goals);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            return \"All the goals for the day \" + day + \" have been cleared\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            return \"There are no goals of the day to remove for \" + day;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 17,
      "Sfloydzy": 7,
      "danisheddie": 102
    }
  },
  {
    "path": "src/main/java/duke/models/Lesson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Lesson {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * A hash map which holds the optional lessons learnt for any day."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Map\u003cDate, ArrayList\u003cString\u003e\u003e lessons;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor for Lesson objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param dateArrayListMap The hash map of lessons learnt for the day from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *                         loading the lessons.txt text file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Lesson(final Map\u003cDate, ArrayList\u003cString\u003e\u003e dateArrayListMap) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.lessons \u003d dateArrayListMap;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Shows all lessons learnt for a specific day."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param day The day to view all lessons learnt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return A message containing all the lessons learnt for the day"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *         to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String viewLesson(final String day) throws ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (Date d : lessons.keySet()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (d.equals(today)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (lessons.get(d).isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    return \"There is no lesson learnt for the day\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    for (String str : lessons.get(d)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        message +\u003d str + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Adds a lesson learnt to the lessons hash map."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date          The date to add the lesson learnt to."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param message       The lesson learnt to add to the lessons hash map."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param lessonStorage The object responsible for storing"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *                      the lessons hash map."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return A message showing task completed successfully."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String addLesson(final String date, final String message,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            final Storage lessonStorage) throws ParseException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        boolean alreadyHaveDate \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (Date d : lessons.keySet()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (d.equals(today)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                alreadyHaveDate \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                lessons.get(d).add(message);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        if (!alreadyHaveDate) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            temp.add(message);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            lessons.put(today, temp);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        lessonStorage.updateLesson(lessons);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"New lesson learnt for the day has been added\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Removes a lesson learnt from the lessons hash map."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param day           The date to remove the lesson learnt from."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param message       The specific lesson learnt to"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *                      remove from the hash map."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param lessonStorage The object responsible for storing"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *                      the lessons hash map."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return A message showing task completed successfully."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String removeLesson(final String day, final String message,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                               final Storage lessonStorage)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        throws ParseException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        if (lessons.containsKey(today)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            lessons.get(today).remove(message);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (lessons.get(today).isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                lessons.remove(today);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        lessonStorage.updateLesson(lessons);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"Lesson learnt for the day, \" + day + \", has been removed\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Removes all the lessons learnt from the lessons hash map for a day."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param day           The date to remove all the lessons learnt from."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param lessonStorage The object responsible for storing"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *                      the lessons hash map."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return A message showing task completed successfully."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException if the user input is in wrong format."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String removeAllLesson(final String day,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                  final Storage lessonStorage)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        throws ParseException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Date today \u003d simpleDateFormat.parse(day);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        if (lessons.containsKey(today)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            lessons.remove(today);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            lessonStorage.updateLesson(lessons);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return \"All the lessons learnt for the day \" + day"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \" have been cleared\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return \"There are no lessons learnt for the day, \" + day"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \", to remove.\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 27,
      "Sfloydzy": 106,
      "danisheddie": 1
    }
  },
  {
    "path": "src/main/java/duke/models/ManageStudents.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * This class is called when option 2 is chosen."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * All commands related to students will be managed by this class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class ManageStudents {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * An array list for the list of students."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private final ArrayList\u003cMyStudent\u003e studentList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constructor of Manage Students to initialise ManageStudent class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public ManageStudents() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        studentList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function to get all available students in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return list of all the students."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cMyStudent\u003e getStudentList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return studentList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Method to list all the names of the students in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void listAllStudents() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"Here are your list of students: \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (MyStudent i : getStudentList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(index++ + \". \" + i.getName());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method retrieve the total number of student in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return Number of student in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private int getStudentListSize() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return studentList.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Method to return the name of the student at the particular index."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param index of the student in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public final void getStudentName(final int index) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(studentList.get(index - 1).getName());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Adding a new student and listing the total number of students."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param name of the new student added"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @SuppressWarnings(\"checkstyle:LineLength\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void addStudent(final MyStudent name) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        studentList.add(name);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"Student have been added: \\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            + getStudentList().get(getStudentListSize() - 1).toString()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            + \"Now you have \" + getStudentListSize() + \" students.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Method to remove a particular student in a list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param index of the student in the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void deleteStudent(final int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"Noted.\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                + getStudentList().get(index - 1).getName()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                + \" has been removed from the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if ((getStudentListSize() - 1) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"\\nNow you have no student in your list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if ((getStudentListSize() - 1) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"\\nNow you have \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + (getStudentListSize() - 1)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + \" student in your list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"\\nNow you have \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + (getStudentListSize() - 1)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + \" students in your list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            getStudentList().remove(index - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (getStudentListSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.err.println(\"Oops! \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + \"You only have no student in the list!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (getStudentListSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.err.println(\"Oops! You only have \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + getStudentListSize()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + \" student in the list!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.err.println(\"Oops! You only have \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + getStudentListSize()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + \" students in the list!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * A method to find a specific student in the list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param name of student to search"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return the name of student search"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public final String findName(final String name) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        StringBuilder listString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "         */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (MyStudent i : getStudentList()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (i.getName().contains(name)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        \"Here are the matching names in your list:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(index++ + \". \" + i.getName());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                \"Sorry, there are no names matching your search\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 10,
      "danisheddie": 134
    }
  },
  {
    "path": "src/main/java/duke/models/MyClass.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.task.Item;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Create a class for all the sports classes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class MyClass extends Item {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * The day of the week it will be held. (i.e. Monday, Tuesday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * A list of students attending this sports class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cMyStudent\u003e students \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * A list of training programmes for this sports class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cMyTraining\u003e trainings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constructor method for MyClass."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param info   This parameter is the name of the sports class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param status This shows whether the sports class has been held this week"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *               or not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param today  When it will be held. (i.e. Monday, Tuesday)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public MyClass(final String info, final Boolean status,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                   final String today) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super(info, status);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        super.setType(\"C\");     //Has its own item type \"C\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.day \u003d today;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Get the day of the week this sports class is held."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return The day of the week this sports class is held."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.day;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Gets all the info of the sports class."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return A string phrase containing all the details of the sports class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"[C]\" + super.toString() + \" (every: \" + getDay() + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Get the list of students attending this sports class."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return an arraylist of MyStudent objects"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public ArrayList\u003cMyStudent\u003e getStudents() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.students;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Get the list of training programmes for this sports class."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return an arraylist of MyTraining objects"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public ArrayList\u003cMyTraining\u003e getTrainings() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.trainings;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Add a training programme to the sports class."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param training The training programme to add."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void addTraining(final MyTraining training) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        trainings.add(training);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Edit a training programme for a sports class. (The name)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param training The name of the training programme to edit."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param newName  New name to change to."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void editTrainingName(final String training, final String newName) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                x.changeName(newName);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Edit a training programme for a sports class. (The number of sets)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param training The name of the training programme to edit."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param newSets  New number of sets to change to."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void editTrainingSets(final String training, final int newSets) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                x.changeSets(newSets);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Edit a training programme for a sports class. (The number of reps)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param training The name of the training programme to edit."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param newReps  New number of reps to change to."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void editTrainingReps(final String training, final int newReps) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                x.changeReps(newReps);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Edit a training programme for a sports class. (The intensity)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param training     The name of the training programme to edit."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param newIntensity New intensity to change to."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void editTrainingIntensity(final String training,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                                      final String newIntensity) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (MyTraining x : trainings) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (x.getName().equals(training)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                x.changeIntensity(newIntensity);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 11,
      "danisheddie": 134
    }
  },
  {
    "path": "src/main/java/duke/models/MyMenu.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * To add all the main menu list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * 1. Manage Students"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * 2. Training Schedule"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * 3. Training Circuits"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class MyMenu {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The string representing the category of the menu."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String myCategory;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The string representing the name of the menu."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String menu;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constructor for the menu object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param category The string representing the category of the menu."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param myMenu   The string representing the name of the menu."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public MyMenu(final String category, final String myMenu) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.myCategory \u003d category;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.menu \u003d myMenu;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter function to obtain the category of the menu."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The string representing the category of the menu."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public final String getMyCategory() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return myCategory;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter function to obtain the name of the menu."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The string representing the name of the menu."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public final String getMenu() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return menu;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 26,
      "Sfloydzy": 3,
      "danisheddie": 21
    }
  },
  {
    "path": "src/main/java/duke/models/MyPlan.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eujingsen"
        },
        "content": " * Loads a training plan from a txt file, create new plan, or edit a plan."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eujingsen"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "public class MyPlan {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The ui object responsible for showing things to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the file path for the plans."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the list for the current loaded plan to be viewed or edited."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private ArrayList\u003cMyTraining\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the list for the current number of plans saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private ArrayList\u003cString\u003e toc \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the map of all lists loaded from the text file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private Map\u003cString, ArrayList\u003cMyTraining\u003e\u003e map \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the name of the individual activity in a plan."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the number of sets of the activity in a plan."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private int sets;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the number of repetitions of the activity in a plan."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    private int reps;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * The constructor for MyPlan."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @throws FileNotFoundException if file is not found."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public MyPlan() throws FileNotFoundException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        filePath \u003d \".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\plan.txt\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        new Storage(filePath).loadPlans(getMap());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A getter to retrieve the filepath."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return filepath"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.filePath;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A getter to retrieve the activity name in a plan."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return name of activity"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A getter to retrieve the number of sets of an activity."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return number of sets of an activity"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public int getSets() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.sets;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A getter to retrieve the number of repetitions in an activity."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return number of repetitions in an activity"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public int getReps() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.reps;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A getter to retrieve the map of all plans loaded."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return the map of all plans"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private Map\u003cString, ArrayList\u003cMyTraining\u003e\u003e getMap() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.map;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A getter to retrieve the list of current plan loaded."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return the list of current plan loaded."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cMyTraining\u003e getList() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A setter to set the private list to a specified list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newList List to be loaded as into the private list"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void setList(final ArrayList\u003cMyTraining\u003e newList) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.list \u003d newList;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * A getter to retrieve the list of the plans present in the map."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return the list of present plans in the map"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public ArrayList\u003cString\u003e getCont() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return this.toc;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Creates a key for the map for the corresponding intensity \u0026 plan number."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param intensity intensity level of current plan"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param num       plan number"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return the key in variable type Integer."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String createKey(final String intensity, final int num) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return intensity + num;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Retrieves an sorted arraylist of keys from the map."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return the arraylist of keys, sorted by intensity and plan number"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public ArrayList\u003cString\u003e keyList() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        Set\u003cString\u003e keys \u003d getMap().keySet();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        ArrayList\u003cString\u003e kl \u003d new ArrayList\u003c\u003e(keys);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        Collections.sort(kl, new Comparator\u003cString\u003e() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            public int compare(final String a, final String b) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                return extractInt(a) - extractInt(b);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            int extractInt(final String s) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                String num \u003d s.replaceAll(\"\\\\D\", \"\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                return num.isEmpty() ? 0 : Integer.parseInt(num);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        });"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return kl;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * To show the plans available for user to view."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void showPlanList() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        ArrayList\u003cString\u003e planList \u003d keyList();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        for (String s : planList) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                System.out.println(s);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                System.out.println(\"\\n\" + s);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Clear the plan currently loaded in the list."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private void clearPlan() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        getList().clear();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Add an activity to a plan in the current list."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newName name of new activity"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newSets number of sets for the new activity"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newReps number of reps for the new activity"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return A string to inform user of result"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String addActivity(final String newName, final int newSets,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                              final int newReps) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        MyTraining newActivity \u003d new MyTraining(newName, newSets, newReps);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        getList().add(newActivity);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        MyTraining t \u003d new MyTraining(newName, newSets, newReps);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return \"You have added this activity, \" + t.toString();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Switch activity positions for current plan in the list."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param initial initial position of activity"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param end     final position of activity"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void switchPos(final int initial, final int end) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        MyTraining s \u003d getList().get(initial);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        getList().add(end - 1, s);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        if (initial \u003e end) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            getList().remove(initial + 1);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            getList().remove(initial);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Creates an enum for intensity values to restrict it to specified values."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public enum Intensity {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * High intensity value."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        high(1),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * Moderate intensity value."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        moderate(2),"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * Relaxed intensity value."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        relaxed(3);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * Represents the value attached to the enum strings."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        private final int val;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        Intensity(final int number) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            this.val \u003d number;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * A getter to retrieve the number attached to each enum."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "         *"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * @return the attached number"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        public int getVal() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            return val;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * Represents the set of enum values."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        private static final Set\u003cString\u003e SET \u003d new HashSet\u003cString\u003e("
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            Intensity.values().length);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * Represents the map of enum values."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        private static final Map\u003cInteger, Intensity\u003e MAP \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            for (Intensity i : Intensity.values()) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                SET.add(i.name());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                MAP.put(i.val, i);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * Check if a certain string is present in the enum."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "         *"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * @param value string to be checked"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * @return a boolean, true if string is present in enum and vice versa"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        private static boolean contains(final String value) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            return SET.contains(value);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * Get the enum from the attached number."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "         *"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * @param value number attached to enum value"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         * @return enum value(high,moderate,relaxed)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "         */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        public static Intensity valueOf(final int value) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            return MAP.get(value);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * View the plan loaded into the current list."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return the activities in the list."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String viewPlan() {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        int x \u003d 1;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        for (MyTraining i : getList()) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            message.append(\"Activity \");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            message.append(x).append(\": \").append(i.toString());"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            if (x \u003c getList().size() - 1) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                message.append(\"\\n\");"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            x++;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * load the plan of specified intensity and value into the list."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param intensity intensity of plan to be loaded"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param plan      plan number passed as a string"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void loadPlan(final String intensity, final String plan) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        clearPlan();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        if (!Intensity.contains(intensity)) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cliView.showIntensityLevel();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            int planNum \u003d Integer.parseInt(plan.split(\"/\")[1]);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            String key \u003d createKey(intensity, planNum);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            if (getMap().containsKey(key)) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                for (MyTraining t : getMap().get(key)) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    getList().add(t);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showPlanLoaded(planNum, intensity);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Save the plan in the list to the map if it is edited or newly created."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newList   List to be saved to map"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param intensity intensity value associated with the plan"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param key       key associated with the plan"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private void saveToMap(final ArrayList\u003cMyTraining\u003e newList,"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                           final String intensity, final String key) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (key.equals(\"0\")) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            int planNum \u003d 0;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            Set\u003cString\u003e keys \u003d getMap().keySet();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            for (String k : keys) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                if (k.contains(intensity)) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    planNum++;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            String k \u003d createKey(intensity, planNum);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            getMap().put(k, newList);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            getMap().put(key, newList);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Create a plan of specified intensity."
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param intensity intensity of plan to be created."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void createPlan(final String intensity) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        clearPlan();"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        if (Intensity.contains(intensity)) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cliView.showPlanCreating(intensity);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    if (input.equals(\"finalize\")) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        cliView.showPlanCreated();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        cliView.showSavePlanToMap();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    } else if (input.equals(\"show\")) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        if (getList().isEmpty()) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            cliView.showNoActivity();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            cliView.showViewPlan(viewPlan());"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            cliView.showPlanPrompt1();"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        String[] details \u003d input.split(\" \");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        MyTraining a \u003d new MyTraining(details[0],"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            Integer.parseInt(details[1]),"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                            Integer.parseInt(details[2]));"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        getList().add(a);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                        int temp \u003d getList().size() - 1;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        cliView.showActivityAdded(getList().get(temp));"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        cliView.showPlanPrompt2();"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            saveToMap(getList(), intensity, \"0\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cliView.showIntensityLevel();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Delete a plan from the map."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param intensity intensity of plan to be deleted"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param planNum   plan number"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @throws IOException IO"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void deletePlan(final String intensity,"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                           final int planNum) throws IOException {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String key \u003d createKey(intensity, planNum);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        if (!getMap().containsKey(key)) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cliView.showIntensityAndNumber();"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            getMap().remove(key);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cliView.showPlanRemoved();"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        //new Storage(getFilePath()).savePlans(getMap());"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 5,
      "Sfloydzy": 37,
      "danisheddie": 8,
      "eujingsen": 374
    }
  },
  {
    "path": "src/main/java/duke/models/MyStudent.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Represents a student."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class MyStudent {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Represents the name of the student."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Represents the age of the student."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private final String age;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Represents the address of the student."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private final String address;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constructor for the students."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param myName    Name of the student"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param myAge     age of the student"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param myAddress address of the student"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public MyStudent(final String myName, final String myAge,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                     final String myAddress) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.name \u003d myName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.age \u003d myAge;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.address \u003d myAddress;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method is to retrieve the name of the student."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return name of student"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method is to retrieve the age of the student."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return age of student"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String getAge() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.age;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method is to retrieve the address of the student."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return Represents the address of the student."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String getAddress() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return address;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * This method prints out the student name and their address."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * (Or any RELEVANT details)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return Represents a string containing the student details to be shown,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *         name and address."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"Name: \" + getName() + \"\\nAge: \" + getAge() + \"\\nAddress: \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            + getAddress();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 4,
      "danisheddie": 74
    }
  },
  {
    "path": "src/main/java/duke/models/MyTraining.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Represents a training programme."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class MyTraining {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the activity name."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the number of sets for the activity."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private int sets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the number of repetitions for the activity."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private int reps;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Represents the intensity of the activity plan."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String intensity;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Constructor for MyTraining."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param actName Retrieve the name of the activity"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param actSets Retrieve the number of sets of the activity"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param actReps Retrieve the number of reps of the activity"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public MyTraining(final String actName, final int actSets,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                      final int actReps) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.name \u003d actName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.sets \u003d actSets;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        this.reps \u003d actReps;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Retrieve the activity name."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return activity name"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Retrieve the number of sets."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return number of sets"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private int getSets() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.sets;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Retrieve the number of repetitions."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return number of repetitions"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private int getReps() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.reps;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * retrieve the intensity level."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return intensity level"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getIntensity() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.intensity;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Change the activity name."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newName name to be changed to"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void changeName(final String newName) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.name \u003d newName;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Change the number of sets."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newSets number of sets to be changed to"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void changeSets(final int newSets) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.sets \u003d newSets;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Change the number of repetitions."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newReps number of repetitions to be changed to"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void changeReps(final int newReps) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.reps \u003d newReps;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Change the intensity level."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param newIntensity intensity level to be changed to"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public void changeIntensity(final String newIntensity) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.intensity \u003d newIntensity;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Convert the values to a string format."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return String of the values in MyTraining"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return getName() + \", sets of \" + getSets() + \" with \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + getReps() + \" reps each\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Convert values into a string to store into a file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @return String of the values"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        return getName() + \" | \" + getSets() + \" | \" + getReps();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 11,
      "danisheddie": 43,
      "eujingsen": 74
    }
  },
  {
    "path": "src/main/java/duke/models/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.task.Item;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * This class serves to get reminders about all the deadlines"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * due before the specified time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Represents the end date of the reminder."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Date endDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Represents the current date of the reminder."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Date todayDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Represents the list of deadline dates for the reminder."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cItem\u003e deadlineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constructor for the Reminder class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param myEndDate specified deadline in date-time format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Reminder(final Date myEndDate) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.endDate \u003d myEndDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        todayDate \u003d new Date();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter function to get the current date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return A string containing the current date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public final Date getTodayDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"Today\u0027s date \" + todayDate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"Saved date: \" + endDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return todayDate;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter function to get the end date."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return A string containing the end date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public final Date getEndDate() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A function to compare the dates to check if there are any deadlines"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * due before specified date."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The object required to use the dateToStringFormat method."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public final void compareDates(final TaskList tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        ArrayList\u003cItem\u003e tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            deadlineList.addAll(Objects.requireNonNull("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                tasks.getReminderList(todayDate, endDate)));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"No deadlines due before specified date\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A getter function to obtain reminders."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The object required to use the dateToStringFormat method."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public final void getReminders(final TaskList tasks) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        compareDates(tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (!deadlineList.isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Reminder to do these tasks before \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + tasks.dateToStringFormat(endDate));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            for (Item i : deadlineList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(count++ + \".\" + i.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 50,
      "Sfloydzy": 5,
      "danisheddie": 40
    }
  },
  {
    "path": "src/main/java/duke/models/Schedule.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Class manages the timetable for the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class Schedule {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Input scan."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ArrayList\u003cTimeSlot\u003e list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The constructor for Schedule objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param timeSlots The details of a time slot that needs to be scheduled."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    //    public Schedule(final ArrayList\u003cTimeSlot\u003e timeSlots) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    //        this.list \u003d timeSlots;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Will print out a formatted calender."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param numberOfDays days in the month"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param startDay     beginning day in the month"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private static void printMonth(final int numberOfDays,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                   final int startDay) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        final int numberOfDaysInAWeek \u003d 7;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int weekdayIndex \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"Su  Mo  Tu  We  Th  Fr  Sa\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (int day \u003d 1; day \u003c startDay; day++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.print(\"    \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            weekdayIndex++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (int day \u003d 1; day \u003c\u003d numberOfDays; day++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.printf(\"%1$2d\", day);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            weekdayIndex++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (weekdayIndex \u003d\u003d numberOfDaysInAWeek) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                weekdayIndex \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.print(\"  \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Function gets the month of the current year."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return String of all the days in the month"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getMonth() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        // Set the calendar to monday of the current week"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        cal.set(Calendar.DAY_OF_MONTH, 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        // Print dates of the current week starting on Monday"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int numDays \u003d cal.getActualMaximum(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"MMM\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.println(\"--------------------------\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(df.format(cal.getTime()) + \" \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + cal.get(Calendar.YEAR));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        printMonth(numDays, cal.get(Calendar.DAY_OF_MONTH));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"--------------------------\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Method will show the current days in the present week."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return List of all days in the week in the format [index] DAY DATE MONTH"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getWeek() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        StringBuilder week \u003d new StringBuilder();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int numDays \u003d cal.getActualMaximum(Calendar.DAY_OF_WEEK);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        // Set the calendar to monday of the current week"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        // Print dates of the current week starting on Monday"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"EEE dd MMM\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (int i \u003d 0; i \u003c numDays; i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            week.append(\"[\").append(i + 1).append(\"]. \")"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                .append(df.format(cal.getTime())).append(\"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            cal.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return week.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Function gets all the hours in the selected day."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Will load events if events have been allocated."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param dayOfClass The selected day of the month. e.g 5/10/2019"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return String of every hour from 8am inside the day."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException if dayOfClass is in wrong format"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getDay(final String dayOfClass) throws ParseException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            final int numberOfHoursInADay \u003d 24;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            final int tempInt \u003d 10;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            String message \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d numberOfHoursInADay; i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String time \u003d (i \u003c tempInt) ? \"0\" + i + \"00\" : i + \"00\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                SimpleDateFormat simpleDateFormat \u003d"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Date now \u003d simpleDateFormat.parse(dayOfClass + \" \" + time);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                DateFormat df \u003d new SimpleDateFormat(\"HH:mm\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                boolean isAssignedClass \u003d false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                for (TimeSlot t : this.list) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    if (now.equals(t.getStartTime())) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                        isAssignedClass \u003d true;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        message +\u003d df.format(now)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            + \" \" + t.getClassName() + \" from \""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            + df.format(t.getStartTime())"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            + \" to \" + df.format(t.getEndTime()) + \" at \""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            + t.getLocation() + \"\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                if (!isAssignedClass) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    message +\u003d df.format(now) + \"\\n\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            message +\u003d \"--------------------------\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return \"empty\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Method to add a class."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param startTime       The start time of the class"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param endTime         The end time of the class"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param location        The location where the class is held"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param className       The name of the class"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param scheduleStorage The object responsible for storing the class"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return The outcome of the operation,whether the class was added or not"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException if startTime or endTime is in wrong format"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String addClass(final String startTime,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final String endTime,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final String location,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final String className,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final Storage scheduleStorage)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        throws ParseException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Date start \u003d simpleDateFormat.parse(startTime);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Date end \u003d simpleDateFormat.parse(endTime);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        boolean hasClash \u003d false;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (TimeSlot t : this.list) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (!hasClash) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (start.equals(t.getEndTime())) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    hasClash \u003d true;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Date temp \u003d t.getStartTime();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                while (!temp.equals(t.getEndTime())) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    if (start.equals(temp)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        hasClash \u003d true;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    long curTimeInMs \u003d temp.getTime();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    final int numberOfMillisecondsInAMinute \u003d 60000;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    temp \u003d new Date(curTimeInMs"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        + numberOfMillisecondsInAMinute);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (!hasClash) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            TimeSlot timeSlot \u003d new TimeSlot(start, end, location, className);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            this.list.add(timeSlot);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            scheduleStorage.saveSchedule(timeSlot);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            scheduleStorage.updateSchedule(this.list);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return \"New class has been added\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return \"Unable to add class.\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"There is already another class in the same time slot.\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Method to delete a class."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param startTime       The start time of the class"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param name            The name of the class"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param scheduleStorage The object responsible for storing the class"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @return The outcome of the operation,whether the class was deleted or not"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException if the start time of the class is"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *                        in the wrong format"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String delClass(final String startTime,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final String name,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final Storage scheduleStorage)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        throws ParseException {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        Date start \u003d simpleDateFormat.parse(startTime);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        if (this.list.isEmpty()) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            return \"No class available\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (TimeSlot i : this.list) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (i.getClassName().equals(name)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u0026\u0026 i.getStartTime().equals(start)) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                this.list.remove(index);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                scheduleStorage.updateSchedule(this.list);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                return \"Class removed\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            ++index;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"Class not found\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method will remove all the saved classes from the list."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date            The date to remove all the classes."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param scheduleStorage Where the save file will be located."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return Success string"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String delAllClass(final String date,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                              final Storage scheduleStorage) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        for (TimeSlot i : this.list) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String today \u003d df.format(i.getStartTime());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String[] temp \u003d today.split(\" \");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (temp[0].equals(date)) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                this.list.remove(i);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        scheduleStorage.updateSchedule(this.list);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"All classes on \" + date + \" are cleared\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 86,
      "Sfloydzy": 26,
      "danisheddie": 142
    }
  },
  {
    "path": "src/main/java/duke/models/TimeSlot.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Function contains all the details of a time slot that needs to be scheduled."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public final class TimeSlot {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Start of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private Date startTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * End of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private Date endTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Location of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String location;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Name of the Being taken."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * e.g: Soccer 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private String className;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param start the specified start time"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param end   the specified end time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param loc   the specified location of the event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param name  the specified name of the event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public TimeSlot(final Date start, final Date end,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    final String loc, final String name) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.startTime \u003d start;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.endTime \u003d end;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.location \u003d loc;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.className \u003d name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter method to obtain the name of the class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The name of the class"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getClassName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.className;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter method to obtain the start time of the class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The start time of the class"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public Date getStartTime() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.startTime;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter method to obtain the end time of the class."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The end time of the class"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public Date getEndTime() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.endTime;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Getter method to obtain the location where the class is held."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The location where the class is held"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public String getLocation() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return this.location;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Setter method to set the name of the class."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param name The name of the class"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setClassName(final String name) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.className \u003d name;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Setter method to set the start time of the class."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param date The start time of the class"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setStartTime(final Date date) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.startTime \u003d date;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Setter method to set the end time of the class."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param date The end time of the class"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setEndTime(final Date date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        this.endTime \u003d date;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Setter method to set the location where the class is held."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param myLocation The location where the class is held"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setLocation(final String myLocation) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.location \u003d myLocation;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 37,
      "Sfloydzy": 8,
      "danisheddie": 70
    }
  },
  {
    "path": "src/main/java/duke/models/package-info.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Package contains all the modules that will interact to duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Each Class is a feature of Duke."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * List of features."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * 1. Menu"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * 2. Schedule"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * 3. Managing Students"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * 4. Training Programs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.models;"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 11
    }
  },
  {
    "path": "src/main/java/duke/parser/IParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public interface IParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Method."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param input command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @throws FileNotFoundException Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    void parseCommand(String input) throws FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 1,
      "danisheddie": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Reminder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Schedule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.ManageStudents;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyClass;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyPlan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * parser is the controller for the string inputs received"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * by the standard input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The ui object responsible for showing things to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView \u003d new CliView();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"add\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new AddCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         } else if (fullCommand.startsWith(\"view\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new ViewCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new InvalidCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constants to represent the index 3."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static final int INDEX_THREE \u003d 3;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constants to represent the index 4."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static final int INDEX_FOUR \u003d 4;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constants to represent the index 5."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static final int INDEX_FIVE \u003d 5;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constants to represent the index 6."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static final int INDEX_SIX \u003d 6;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constants to represent the index 7."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static final int INDEX_SEVEN \u003d 7;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Constants to represent the index 10."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public static final int INDEX_TEN \u003d 10;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function takes the standard input defined by the user and"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * parses it into instructions for the Storage to read."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param io       The input from command line"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param tasks    The TaskList object that manages tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param storage  The main class that writes to or from files"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param students The student object that manages students in classes"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param schedule Manages all the task in the day/week/month"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param plan     The training circuit plans"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @throws FileNotFoundException File not found"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @throws ParseException        Parse"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void parseInput(final String io,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final TaskList tasks,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final Storage storage,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final ManageStudents students,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final Schedule schedule,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                           final MyPlan plan)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String input \u003d io;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String[] word \u003d io.split(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String cmd \u003d word[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case \"reminder\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                index \u003d input.indexOf(\"before\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                Date date \u003d tasks.dateConvert("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    input.substring(index + INDEX_SEVEN));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                Reminder reminder \u003d new Reminder(date);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                reminder.getReminders(tasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                System.err.println(\"Incorrect format\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            index \u003d Integer.parseInt(input.substring(INDEX_SEVEN)) - 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            storage.updateFile(tasks.getList());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String searchWord \u003d input.substring(INDEX_FIVE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks.findTask(searchWord);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String searchDate \u003d input.substring(INDEX_FIVE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (searchDate.length() \u003c INDEX_TEN) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                System.out.println(\"Please enter input in the form: \""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    + \"date dd/MM/YYYY\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                tasks.findDate(searchDate);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        case \"class\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                index \u003d input.indexOf(\"/every\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String info \u003d input.substring(INDEX_SIX, index - 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String day \u003d input.substring(index + INDEX_SEVEN);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                MyClass myclass \u003d new MyClass(info, false, day);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                tasks.addTask(myclass);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                storage.saveFile(\"C\", myclass, myclass.getDay());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \"OOPS!!! \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        + \"Please enter input in the form:\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        + \"class XXX /every YYY\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"Invalid command\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 45,
      "Sfloydzy": 42,
      "danisheddie": 48,
      "eujingsen": 15
    }
  },
  {
    "path": "src/main/java/duke/parser/ParserCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class ParserCommand implements IParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Declaring type ManageStudentsParser."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ParserManageStudents parserManageStudents"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003d new ParserManageStudents();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Declaring ParserTrainingPLan type."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ParserTrainingPlan parserTrainingPlan"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003d new ParserTrainingPlan();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Parse the respective command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param input command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @throws FileNotFoundException throws exception."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void parseCommand(final String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            CliView cliView \u003d new CliView();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            final String scheduleMenu \u003d \"1\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            case scheduleMenu:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ParserSchedule parserSchedule \u003d new ParserSchedule();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                parserSchedule.parseCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"2\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.manageStudentsHeading();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String studentsInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                parserManageStudents.parseCommand(studentsInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"3\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.trainingProgramHeading();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                String trainingInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                parserTrainingPlan.parseCommand(trainingInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry,\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    + \"but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (FileNotFoundException | ParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 6,
      "Sfloydzy": 10,
      "danisheddie": 41
    }
  },
  {
    "path": "src/main/java/duke/parser/ParserGoal.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Goal;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ParserGoal {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constants to represent the index 3."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexThree \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constants to represent the index 4."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexFour \u003d 4;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constants to represent the index 5."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexFive \u003d 5;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constants to represent the index 6."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexSix \u003d 6;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constants to represent the index 7."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexSeven \u003d 7;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constants to represent the index 10."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexTen \u003d 10;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Boolean status to check if the class can exit."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The goal that has been loaded."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Goal goal;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The storage of the goal being accessed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Storage goalStorage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The ui object responsible for showing things to the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The scanner object responsible for taking in user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner myGoalScan;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constructor for ParserGoal."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws FileNotFoundException if file does not exist"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException        if user input is not in the correct format"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ParserGoal() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView \u003d new CliView();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        goalStorage \u003d new Storage("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\goals.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        goal \u003d new Goal(goalStorage.loadGoal());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        myGoalScan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Method to run when entering goal of the day."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void runGoal() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView.showGoalPromptDate();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String goalDate \u003d myGoalScan.next();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showGoalAllActions(goalDate);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                int executeType \u003d myGoalScan.nextInt();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                myGoalScan.nextLine();  // This line you have"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                // to add (It consumes the \\n character)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                switch (executeType) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.print(goal.viewGoal(goalDate));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showGoalPromptAddGoal(goalDate);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String myGoal \u003d myGoalScan.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        goal.addGoal("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            goalDate, myGoal, goalStorage));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case indexThree:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showGoalPromptDeleteGoal(goalDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String message \u003d myGoalScan.nextLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        goal.removeGoal("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            goalDate, message, goalStorage));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case indexFour:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(goal.removeAllGoal("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        goalDate, goalStorage));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case indexFive:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    isRunning \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showQuitGoal();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showDontKnow();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showFullCommand();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showCorrectFormat();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 112,
      "Sfloydzy": 11,
      "danisheddie": 3
    }
  },
  {
    "path": "src/main/java/duke/parser/ParserLesson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Lesson;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class ParserLesson {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 3."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexThree \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 4."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexFour \u003d 4;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 5."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexFive \u003d 5;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 6."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexSix \u003d 6;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 7."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexSeven \u003d 7;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 10."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private final int indexTen \u003d 10;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Boolean status to check if the class can exit."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * The lesson that has been loaded."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Lesson lesson;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * The storage of the lesson being accessed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Storage lessonStorage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The ui object responsible for showing things to the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The scanner object responsible for taking in user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner myLessonScan;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor for ParserLesson."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws FileNotFoundException if file does not exist"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException        if user input is not in the correct format"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public ParserLesson() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView \u003d new CliView();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        lessonStorage \u003d new Storage("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \".\\\\src\\\\main\\\\java\\\\duke\\\\data\\\\lessons.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        lesson \u003d new Lesson(lessonStorage.loadLesson());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        myLessonScan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Method to run when entering lesson of the day."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void runLesson() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView.showLessonPromptDate();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String lessonDate \u003d myLessonScan.next();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showLessonAllActions(lessonDate);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                int executeType \u003d myLessonScan.nextInt();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                myLessonScan.nextLine();  // This line you have"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                // to add (It consumes the \\n character)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                switch (executeType) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.print(lesson.viewLesson(lessonDate));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showLessonPromptAddLesson(lessonDate);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String myLesson \u003d myLessonScan.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        lesson.addLesson("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            lessonDate, myLesson, lessonStorage));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case indexThree:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showLessonPromptDeleteLesson(lessonDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String message \u003d myLessonScan.nextLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        lesson.removeLesson("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            lessonDate, message, lessonStorage));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case indexFour:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(lesson.removeAllLesson("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        lessonDate, lessonStorage));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                case indexFive:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    isRunning \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showQuitLesson();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showFullCommand();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showCorrectFormat();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 23,
      "Sfloydzy": 98,
      "danisheddie": 3
    }
  },
  {
    "path": "src/main/java/duke/parser/ParserManageStudents.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.ManageStudents;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyStudent;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class ParserManageStudents implements IParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Declaring the type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ManageStudents students \u003d new ManageStudents();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * To parse ManageStudents commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param input command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void parseCommand(final String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String[] word \u003d input.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String cmd \u003d word[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"Insert Name, Age, Address:\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String newStudent \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String[] splitByComma \u003d newStudent.split(\",\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String name \u003d splitByComma[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String age \u003d splitByComma[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String address \u003d splitByComma[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            MyStudent myNewStudent \u003d new MyStudent("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                name, age, address);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            students.addStudent(myNewStudent);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        // Format: student delete [index]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            students.deleteStudent(Integer.parseInt(word[1]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"details\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"Details for: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (scan.equals(\"add details\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"Details for: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String studentName \u003d scan.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            students.findName(studentName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            //add student details"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.print(\"What do you want to edit for \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            students.getStudentName(Integer.parseInt(word[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"?\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            // editStudentDetails(detail)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            students.listAllStudents();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"search\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            final int limit \u003d 15;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            String searchName \u003d input.substring(limit);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            students.findName(searchName);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"select\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.print(\"You have selected: \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            students.getStudentName(Integer.parseInt(word[1]));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"particulars\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            // Edit particulars of the student"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"progress\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            //Add student progress"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"back\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            ParserCommand parserCommand \u003d new ParserCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            parserCommand.parseCommand(cmd);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"Incorrect Command.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 1,
      "danisheddie": 93
    }
  },
  {
    "path": "src/main/java/duke/parser/ParserSchedule.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.Schedule;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "//@@author Sfloydzy"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class ParserSchedule {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 3."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private final int indexThree \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 4."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private final int indexFour \u003d 4;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constants to represent the index 5."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private final int indexFive \u003d 5;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Boolean status to check if the class can exit."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * The ui object responsible for showing things to the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * The schedule object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Schedule schedule;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * The scanner object responsible for taking in user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * The storage object for Schedule."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Storage scheduleStorage;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor for ParserSchedule."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws FileNotFoundException if file does not exist"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException        if user input is not in the correct format"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public ParserSchedule() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView \u003d new CliView();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        schedule \u003d new Schedule();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method to run when entering daily schedule."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException if user input is not in the correct format"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void dailySchedule() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        cliView.showSchedulePromptDate();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String scheduleDate \u003d sc.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        // String day \u003d schedule.getDay(scheduleDate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        // schedule of timeslot.txt cannot be loaded"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        // todo must fix the storage loading capabilities"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String day \u003d \"empty\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        if (day.equals(\"empty\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            isRunning \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cliView.showEmptyList();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showScheduleAllActions(scheduleDate);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                int executeType \u003d sc.nextInt();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                sc.nextLine();  // This line you have"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                // to add (It consumes the \\n character)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                switch (executeType) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(schedule.getDay(scheduleDate));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showPromptStartTime();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showPromptEndTime();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showPromptClassLocation();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String className \u003d sc.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String startTime \u003d sc.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String endTime \u003d sc.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String location \u003d sc.nextLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showPromptClassName();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println(schedule.addClass(startTime,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        endTime, location,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        className, scheduleStorage));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case indexThree:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showPromptStartTime();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String delstartTime \u003d sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showPromptClassName();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    String delclassName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        schedule.delClass("
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            delstartTime, delclassName, scheduleStorage));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case indexFour:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        schedule.delAllClass(scheduleDate, scheduleStorage));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                case indexFive:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    isRunning \u003d false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showQuitClass();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.showDontKnow();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showFullCommand();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showCorrectFormat();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method to run when entering weekly schedule."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void weeklySchedule() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(schedule.getWeek());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method to run when entering monthly schedule."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void monthlySchedule() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(schedule.getMonth());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    //@@author Sfloydzy"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method to parse the command input from the menu."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void parseCommand() throws ParseException, FileNotFoundException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int dailySchedule \u003d 1;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int weeklySchedule \u003d 2;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int monthlySchedule \u003d 3;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int back \u003d 4;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int input;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        boolean runSchedule \u003d true;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        while (runSchedule) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            cliView.trainingScheduleHeading();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            input \u003d sc.nextInt();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            switch (input) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            case dailySchedule:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                boolean runDaily \u003d true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                while (runDaily) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    cliView.dailyScheduleHeading();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    input \u003d sc.nextInt();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    if (input \u003d\u003d 1) { //access daily schedule"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        dailySchedule();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    } else if (input \u003d\u003d 2) { //access daily goals"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        new ParserGoal().runGoal();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    } else if (input \u003d\u003d 3) { //access daily lessons"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        new ParserLesson().runLesson();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    } else if (input \u003d\u003d 4) { //back"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        runDaily \u003d false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        cliView.showDontKnow();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            case weeklySchedule:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                weeklySchedule();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            case monthlySchedule:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                monthlySchedule();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            case back:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                runSchedule \u003d false;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showDontKnow();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 7,
      "Sfloydzy": 183,
      "danisheddie": 3
    }
  },
  {
    "path": "src/main/java/duke/parser/ParserTrainingPlan.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyPlan;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.view.CliView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "public class ParserTrainingPlan implements IParser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * Ui class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private CliView cliView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * To parse training plan command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * @param input command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws FileNotFoundException in the event the file is not able to be"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *                               located in the directory"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void parseCommand(final String input) throws FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        MyPlan plan \u003d new MyPlan();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String[] word \u003d input.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        String cmd \u003d word[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"plan\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            if (word[1].equals(\"view\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                //plan.loadPlan(word[num].toLowerCase(), word[++num]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(plan.viewPlan());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (word[1].equals(\"new\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                plan.createPlan(word[2].toLowerCase());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            } else if (word[1].equals(\"edit\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"To be created...\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            } else if (word[1].equals(\"save\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                //String fp \u003d plan.getFilePath();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                //new Storage(fp).savePlans(plan.getMap());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                cliView.showSavePlanToMap();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        case \"training\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            switch (word[1]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"view\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"TBC\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(plan.viewPlan());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"add-plan\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                //pass"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"add-activity\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                int num \u003d 2;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(plan.addActivity(word[num],"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    Integer.parseInt(word[++num]),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    Integer.parseInt(word[++num])));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"To be added.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            case \"delete-all\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                System.out.println(\"To be added\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            System.out.println(\"Incorrect Command.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 7,
      "danisheddie": 58,
      "eujingsen": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/package-info.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " * Holds all the parser files for respective functions and parser interface."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.parser;"
      }
    ],
    "authorContributionMap": {
      "danisheddie": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * This is the main superclass that contains all the attributes of the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * status: whether Item is complete or not."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private Boolean status;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * info: the description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * type: the type of the Item created."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Length of time of the item."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Constructor method for the Event class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param desc   This is the information about the task being added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param isDone This determines if whether the Item"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *               added is completed or uncompleted"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Item(final String desc, final Boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.status \u003d isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.info \u003d desc;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function changes the status of the task to true."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Boolean changeStatus() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        status \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function sets the type of the Item."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param t The string type of the Item"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return the newly set type of the Item"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String setType(final String t) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.type \u003d t;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Gets the type of the Item."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String type of the Item"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Gets the date of the Item."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String date of the Item"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Designed for extension."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return Null if method is not inherited"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Date getRawDate() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function returns a 1 or 0 if the status of the Item is complete (true)."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return int 1 | 0"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Integer checkStatus() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return status ? 1 : 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Method checks whether Item is complete."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return if task is complete"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function gets the info of the Item."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return info"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return this.info;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function will give a tick or cross"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * depending if the status of the Item is true or false."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return tick or cross"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return (status ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the string of the"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * status icon as a tick or cross and the info of the Item."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String phrase of all Item details"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String s \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getInfo();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Set duration."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param length time of activity"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void setDuration(final String length) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        duration \u003d length;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Get duration for todo task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return string of duration"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 154,
      "danisheddie": 1
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * TaskList handles all the operations Duke uses."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * List to hold all items that are added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cItem\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Set the list with a newList that has been loaded."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param newList the loaded new list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void setList(final ArrayList\u003cItem\u003e newList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        this.list \u003d newList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Accesses the list that has been saved."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return the saved list of items"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cItem\u003e getList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This method loads all the ArrayList items"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * from the previous load file into the current ArrayList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param storage the storage object of the loaded list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void addAllList(final Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            setList((Objects.requireNonNull(storage.loadFile())));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println(\"No previous list loaded\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This method adds tasks to the list of tasks in duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param i This is the first parameter"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *          it takes the newly created Deadline/ToDo/Event"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void addTask(final Item i) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        list.add(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + list.get(getList().size() - 1).toString() + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"Now you have \" + (list.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the complete list of tasks in the ArrayList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        for (Item i : list) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println(count++ + \".\" + i.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function changes the status of a task from incomplete to complete."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param index This is the index location"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *              of the task to be changed in the ArrayList"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void doneTask(final int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        list.get(index).changeStatus();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + list.get(index).toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function deletes the task from the list of tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * After deleting the function will print out"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * what was deleted and the number of remaining"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * tasks left in the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param index This is the index location of"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *              the task to be deleted in the ArrayList"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws IndexOutOfBoundsException e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void deleteTask(final int index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + getList().get(index).toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Now you have \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + (getList().size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            getList().remove(index);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.err.println(\"Opps! Sorry that Item does not exist!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function locates all tasks that"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * contain a keyword as defined by the user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param word This parameter is the defined"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *             key word that must be searched for"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void findTask(final String word) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        int cnt \u003d 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Item i : getList()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (i.getInfo().contains(word)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (cnt \u003d\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                System.out.println(cnt++ + \". \" + i.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        if (cnt \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \"Sorry, there are no tasks matching your search\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function locates all tasks on a certain date as defined by the user."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     * @param word This parameter is the defined date that much be searched for"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void findDate(final String word) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String[] temp \u003d word.split(\"/\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String dd \u003d numOrdinal(Integer.parseInt(temp[0]));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        Month mm \u003d Month.of(Integer.parseInt(temp[1]));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String yy \u003d temp[2];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        String check \u003d dd + \" of \" + mm + \" \" + yy;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Item i : getList()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            String desc \u003d i.toString();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            if (desc.toLowerCase().contains(check.toLowerCase())) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                System.out.println(\"Here are the tasks on \" + check);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                System.out.println(index + \". \" + desc);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            System.out.println(\"Sorry, there are no tasks on \" + check);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function takes in an integer number"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * adds its correct number ordinal to the number."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param num This parameter is the number taken"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String of the input number with the"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *         ordinal attached to the end of the number"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String numOrdinal(final int num) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int ten \u003d 10;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int eleven \u003d 11;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int twelve \u003d 12;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final int thirteen \u003d 13;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String[] suffix \u003d new String[] {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \"th\", \"st\", \"nd\","
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \"rd\", \"th\", \"th\","
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \"th\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        switch (num) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case eleven:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case twelve:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        case thirteen:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return num + \"th\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return num + suffix[num % ten];"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function takes specific date format"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * and turns it into a string phrase."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date The date taken in by the function"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return The date that has been converted into a string phrase,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *         if in incorrect format return original date"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws StringIndexOutOfBoundsException e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException  e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @throws ParseException                  thrown when date"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *                                         input is in incorrect format"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public Date dateConvert(final String date) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat("
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            Date formatDate \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return formatDate;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        } catch (StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println(\"Please enter a valid date format\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            System.out.println(\"Date error\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function converts the date object to the"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * date format 2nd of December 2019, 6pm."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param date the date to be converted"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return String of new dat format"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String dateToStringFormat(final Date date) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String hour \u003d new SimpleDateFormat(\"h\").format(date);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String min \u003d new SimpleDateFormat(\"mm\").format(date);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String marker \u003d new SimpleDateFormat(\"a\").format(date);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String day \u003d new SimpleDateFormat(\"d\").format(date);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String monthYear \u003d new SimpleDateFormat(\"MMMMM yyyy\").format(date);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        String newDateFormat \u003d this.numOrdinal("
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            Integer.parseInt(day)) + \" of \" + monthYear + \", \""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + hour + (min.equals(\"00\") ? marker : (\".\" + min + marker));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return newDateFormat;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Function checks to see which deadlines"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * are between now and the specified end date."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param todayDate the present time"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param endDate   the specified end date and time"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return null if there are no deadlines"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public ArrayList\u003cItem\u003e getReminderList("
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        final Date todayDate, final Date endDate) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ArrayList\u003cItem\u003e deadlineList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        Boolean isNotEmpty \u003d false;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (Item i : getList()) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            // check if deadline is before today\u0027s date,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            if (i.getType().equals(\"D\") \u0026\u0026 i.getRawDate().before(endDate)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u0026\u0026 todayDate.before(i.getRawDate()) \u0026\u0026 !i.isDone()) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                deadlineList.add(i);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                isNotEmpty \u003d true;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (isNotEmpty) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            return deadlineList;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 23,
      "Sfloydzy": 218,
      "danisheddie": 1,
      "eujingsen": 24
    }
  },
  {
    "path": "src/main/java/duke/task/package-info.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Package holds all Item classes."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Item classes are tasks that the user has to complete."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Package also classes that inherit the Item superclass."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Classes with inheritance:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * Event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * After"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * ToDo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " * TaskList controls all the operations of the main class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "package duke.task;"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 13
    }
  },
  {
    "path": "src/main/java/duke/view/CliView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "package duke.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.parser.ParserCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import duke.models.MyTraining;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eujingsen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "public class CliView {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Scanner object to read user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * Declaring new parser type."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    private ParserCommand parser \u003d new ParserCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     * A method to run the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            showMainMenu();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            final int goodBye \u003d 4;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String command \u003d scan.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                if (command.equals(String.valueOf(goodBye))) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    showGoodBye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                } else if (command.equals(\"home\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    showMainMenu();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                    parser.parseCommand(command);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the welcome message of Duke."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke, your personal coach manager!\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"What can I do for you?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Reads in an entire line of user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The entire line of user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Displays main menu on command line."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showMainMenu() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"SPORTS MANAGER\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"1. View Training Schedule\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"2. Manage Students\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"3. Training Circuits\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"4. Exit\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the goodbye message of Duke."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showGoodBye() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the heading when option 1 is chosen."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void trainingScheduleHeading() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"TRAINING SCHEDULE:\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"1. Daily Schedule\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"2. Weekly Schedule\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"3. Monthly Schedule\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"4. Back\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This function prints out the heading when"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Daily Schedule option is chosen."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void dailyScheduleHeading() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"DAILY SCHEDULE:\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"1. Classes of the day\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"2. Goals of the day\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"3. Lessons learnt of the day\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"4. Back\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the heading when option 2 is chosen."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void manageStudentsHeading() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"MANAGE STUDENTS:\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"1. Student List - View all students available \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"and edit student particulars (Cmd: student list)\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"2. Add student - Adding a new student to the list \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"with main details (Cmd: student add [name],[age],[address]) (\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"3. Remove Student - Remove a student in a list \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"(Cmd: student delete [index of student in the list])\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"4. Search Student - Finding a particular student in the list \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            + \"(Cmd: student search [name])\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * This function prints out the heading when option 3 is chosen."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    public void trainingProgramHeading() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        System.out.println(\"TRAINING PROGRAM:\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"1. Plan list - View all the plans available \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"and check a plan or edit it (cmd: TBC)\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"2. Create plan - Create a new plan of a \""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"specified intensity level (Cmd: plan new [intensity level])\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"3. Edit plan - Edit a specified plan by adding new \""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"activities or switching activity positions \""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "            + \"(Cmd: plan edit [intensity level] [plan number])\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Displays student from student list that is matching to search."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @param foundStudent Name of student that has been found."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * @return Student that has been found"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public String printFoundStudent(final String foundStudent) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "        return \"Here are the matching names in your list: \" + foundStudent;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for date for goal."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showGoalPromptDate() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please enter the date of the day \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"in this format: dd/MM/yyyy\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints all possible actions with goal once entered."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param goalDate The date of the day"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showGoalAllActions(final String goalDate) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"\\nWhat would you like to do on \" + goalDate + \"?\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"1. View goals of the day\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"2. Add a goal of the day\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"3. Delete a goal of the day\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"4. Clear all goals of the day\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"5. Quit goal of the day\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for goal to add."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param goalDate The date of the day"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showGoalPromptAddGoal(final String goalDate) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"To add a goal to \""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + goalDate + \", enter the goal.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for goal to delete."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param goalDate The date of the day"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showGoalPromptDeleteGoal(final String goalDate) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"To delete a goal from \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + goalDate + \", enter the goal.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when quitting goal of the day."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showQuitGoal() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"You have quit the goal of the day.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message asking for full command."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showFullCommand() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please enter the full command.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message asking for correct format."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showCorrectFormat() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"Please enter the details in the correct format.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message showing don\u0027t know what it means."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showDontKnow() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"OOPS!!! I\u0027m sorry,\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for date for lesson."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showLessonPromptDate() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please enter the date of the day \""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"in this format: dd/MM/yyyy\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints all possible actions with lesson once entered."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param lessonDate The date of the day"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showLessonAllActions(final String lessonDate) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"\\nWhat would you like to do on \" + lessonDate + \"?\\n\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"1. View lessons of the day\\n\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"2. Add a lesson of the day\\n\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"3. Delete a lesson of the day\\n\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"4. Clear all lessons of the day\\n\""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"5. Quit lesson of the day\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for lesson to add."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param lessonDate The date of the day"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showLessonPromptAddLesson(final String lessonDate) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"To add a lesson to \""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + lessonDate + \", enter the lesson.\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for lesson to delete."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param lessonDate The date of the day"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showLessonPromptDeleteLesson(final String lessonDate) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"To delete a lesson from \""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + lessonDate + \", enter the lesson.\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when quitting lesson of the day."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showQuitLesson() {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"You have quit the lesson of the day.\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for proper intensity level."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showIntensityLevel() {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please input a proper \""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"intensity level: high, moderate, relaxed\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "danisheddie"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when plan is successfully loaded."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param planNum   The plan number of the plan to be loaded."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param intensity The intensity of the plan to be loaded."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPlanLoaded(final int planNum, final String intensity) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"You have loaded plan \" + planNum + \" of \""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + intensity + \" intensity \" + \" into the list\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for correct intensity level and plan number."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showIntensityAndNumber() {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please input the correct\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \" intensity and plan number.\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when plan is successfully removed."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPlanRemoved() {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Plan successfully removed.\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when plan is successfully created."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPlanCreated() {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Plan successfully created.\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when saving plan to map."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showSavePlanToMap() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "eujingsen"
        },
        "content": "        System.out.println(\"Saved to map.\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message if no activity has been added to show."
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showNoActivity() {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"No activity has been added.\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when plan is being created."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param intensity The intensity of the plan to be created."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPlanCreating(final String intensity) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Creating plan of \" + intensity + \" intensity.\\n\""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"Please input activity to add in format of \""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"[activity] [number of sets] [number of reps].\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when activity is successfully added."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param activity The activity object to be added."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showActivityAdded(final MyTraining activity) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Successfully added activity: \""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + activity.toString());"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message to show all plans loaded into the current list."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param plans The plans to be printed out."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showViewPlan(final String plans) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(plans);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message to prompt the user on what to do next."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPlanPrompt1() {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Continue adding activities, \""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"or finalize plan.\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message to prompt the user on what to do next."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPlanPrompt2() {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please input new activity,\""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"finalize the plan or look at current list.\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for date for schedule."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showSchedulePromptDate() {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please enter the date of the day \""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            + \"in this format: dd/MM/yyyy\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints all possible actions with schedule once entered."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param scheduleDate The date to see classes of the day"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showScheduleAllActions(final String scheduleDate) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"\\nWhat would you like to do on \" + scheduleDate + \"?\\n\""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"1. View all classes\\n\""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"2. Add a class\\n\""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"3. Delete a class\\n\""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"4. Clear all classes\\n\""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"5. Quit classes\");"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when quitting class."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showQuitClass() {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"You have quit class.\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for the start time of a class."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPromptStartTime() {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"Please enter the start time in this format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for the end time of a class."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPromptEndTime() {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \"Please enter the end time in this format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for the location of a class."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPromptClassLocation() {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please enter the location the class will be held\");"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Prints message when asking for the name of a class."
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showPromptClassName() {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Please enter the name of the class.\");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     * Prints error message when there is incomplete daily list."
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    public void showEmptyList() {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        System.out.println(\"Sorry, there are no days matching what you have entered.\");"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 310,
      "Sfloydzy": 69,
      "danisheddie": 47,
      "eujingsen": 11
    }
  },
  {
    "path": "src/main/resources/view/daily.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.web.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "\u003cVBox prefHeight\u003d\"720.0\" prefWidth\u003d\"1280.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.launcher.gui.Controller\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003cMenuBar prefHeight\u003d\"26.0\" prefWidth\u003d\"600.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003cmenus\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"New\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Open…\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Open Recent\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save As…\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Revert\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Preferences…\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Quit\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Undo\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Redo\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Cut\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Copy\" /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Paste\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Delete\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Select All\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Unselect All\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About MyHelloApp\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003c/menus\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cAnchorPane prefHeight\u003d\"693.0\" prefWidth\u003d\"1280.0\" style\u003d\"-fx-background-color: #43436e;\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"161.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"55.0\" prefWidth\u003d\"1105.0\" style\u003d\"-fx-background-color: CECCCC;\" text\u003d\"SCHEDULE\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cFont name\u003d\"Arial\" size\u003d\"27.0\" /\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"161.0\" layoutY\u003d\"78.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"1105.0\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"2.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"316.0\" style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"8.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"297.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Goals of The Day\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cCheckBox layoutX\u003d\"21.0\" layoutY\u003d\"66.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"42.0\" prefWidth\u003d\"189.0\" text\u003d\"Goal 1\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/CheckBox\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cCheckBox layoutX\u003d\"21.0\" layoutY\u003d\"114.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"42.0\" prefWidth\u003d\"189.0\" text\u003d\"Goal 2\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/CheckBox\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cCheckBox layoutX\u003d\"21.0\" layoutY\u003d\"171.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"42.0\" prefWidth\u003d\"189.0\" text\u003d\"Goal 3\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/CheckBox\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cCheckBox layoutX\u003d\"21.0\" layoutY\u003d\"229.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"42.0\" prefWidth\u003d\"189.0\" text\u003d\"Goal 4\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/CheckBox\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton fx:id\u003d\"btnAddGoal\" layoutX\u003d\"17.0\" layoutY\u003d\"478.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"31.0\" prefWidth\u003d\"286.0\" text\u003d\"Add Goal\" /\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton fx:id\u003d\"btnEditGoal\" layoutX\u003d\"17.0\" layoutY\u003d\"509.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"31.0\" prefWidth\u003d\"286.0\" text\u003d\"Edit\" /\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton fx:id\u003d\"btnDeleteGoal\" layoutX\u003d\"17.0\" layoutY\u003d\"540.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"31.0\" prefWidth\u003d\"286.0\" text\u003d\"Delete\" /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"337.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"767.0\" style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"10.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"271.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Date\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton fx:id\u003d\"btnPrevDay\" layoutX\u003d\"146.0\" layoutY\u003d\"525.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"31.0\" prefWidth\u003d\"116.0\" text\u003d\"Previous\" /\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton fx:id\u003d\"btnNextDay\" layoutX\u003d\"559.0\" layoutY\u003d\"525.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"31.0\" prefWidth\u003d\"116.0\" text\u003d\"Next\" /\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextArea layoutX\u003d\"120.0\" layoutY\u003d\"120.0\" prefHeight\u003d\"300.0\" prefWidth\u003d\"562.0\" promptText\u003d\"Time table goes here\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextField fx:id\u003d\"DateField\" alignment\u003d\"CENTER\" layoutX\u003d\"299.0\" layoutY\u003d\"15.0\" promptText\u003d\"Date goes here\" /\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"14.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"658.0\" prefWidth\u003d\"139.0\" style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"12.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"116.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Menu\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cFont name\u003d\"Arial\" size\u003d\"24.0\" /\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnHome\" layoutX\u003d\"17.0\" layoutY\u003d\"60.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#viewMenu\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Home\" /\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnStudents\" layoutX\u003d\"17.0\" layoutY\u003d\"112.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#viewStudents\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Students\" /\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnTraining\" layoutX\u003d\"17.0\" layoutY\u003d\"160.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#viewTraining\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Training\" /\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnBack\" layoutX\u003d\"17.0\" layoutY\u003d\"204.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#viewSchedule\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Back\" /\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 54,
      "Sfloydzy": 70,
      "danisheddie": 1
    }
  },
  {
    "path": "src/main/resources/view/menu.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003cVBox prefHeight\u003d\"720.0\" prefWidth\u003d\"1280.0\" style\u003d\"-fx-background-color: #43436e;\" xmlns\u003d\"http://javafx.com/javafx/8\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "      xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.launcher.gui.Controller\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cMenuBar VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003cmenus\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"New\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Open…\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Open Recent\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save As…\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Revert\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Preferences…\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Quit\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Undo\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Redo\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Cut\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Copy\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Paste\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Delete\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Select All\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Unselect All\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About MyHelloApp\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/menus\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cAnchorPane maxHeight\u003d\"-1.0\" maxWidth\u003d\"-1.0\" prefHeight\u003d\"-1.0\" prefWidth\u003d\"-1.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cVBox prefHeight\u003d\"637.0\" prefWidth\u003d\"640.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSplitPane dividerPositions\u003d\"0.5\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"637.0\" prefWidth\u003d\"620.0\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003citems\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"14.0\" layoutY\u003d\"14.0\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               prefHeight\u003d\"46.0\" prefWidth\u003d\"597.0\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               style\u003d\"-fx-background-color: #fbd253;\" text\u003d\"Menu\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                \u003cFont size\u003d\"27.0\"/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cButton fx:id\u003d\"btnTraining\" layoutX\u003d\"89.0\" layoutY\u003d\"225.0\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                mnemonicParsing\u003d\"false\" onAction\u003d\"#viewTraining\" prefHeight\u003d\"65.0\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                prefWidth\u003d\"447.0\" style\u003d\"-fx-background-color: #e9e9f9;\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                text\u003d\"Training\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                \u003cFont name\u003d\"Arial\" size\u003d\"26.0\"/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003c/Button\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cButton fx:id\u003d\"btnStudents\" layoutX\u003d\"89.0\" layoutY\u003d\"152.0\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                mnemonicParsing\u003d\"false\" onAction\u003d\"#viewStudents\" prefHeight\u003d\"65.0\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                prefWidth\u003d\"447.0\" style\u003d\"-fx-background-color: #4CAF50;;\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                text\u003d\"Students\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                \u003cFont name\u003d\"Arial\" size\u003d\"26.0\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003c/Button\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cButton fx:id\u003d\"btnSchedule\" layoutX\u003d\"89.0\" layoutY\u003d\"77.0\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                mnemonicParsing\u003d\"false\" onAction\u003d\"#viewSchedule\" prefHeight\u003d\"65.0\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                prefWidth\u003d\"447.0\" style\u003d\"-fx-background-color: #7782c5;\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                text\u003d\"Schedule\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                \u003cFont name\u003d\"Arial\" size\u003d\"26.0\"/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003c/Button\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/children\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"217.0\" prefWidth\u003d\"618.0\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"3.0\" layoutY\u003d\"14.0\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               prefHeight\u003d\"46.0\" prefWidth\u003d\"613.0\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               style\u003d\"-fx-background-color: #93a73b;\" text\u003d\"Terminal\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                \u003cFont size\u003d\"27.0\"/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/children\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/items\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cVBox layoutX\u003d\"636.0\" layoutY\u003d\"10.0\" prefHeight\u003d\"617.0\" prefWidth\u003d\"633.0\"\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSplitPane dividerPositions\u003d\"0.5\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"629.0\" prefWidth\u003d\"640.0\"\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003citems\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"287.0\" prefWidth\u003d\"620.0\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"8.0\" layoutY\u003d\"6.0\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               prefHeight\u003d\"46.0\" prefWidth\u003d\"597.0\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               style\u003d\"-fx-background-color: #6b88ff;\" text\u003d\"Calender\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                \u003cFont size\u003d\"27.0\"/\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cDatePicker layoutX\u003d\"14.0\" layoutY\u003d\"58.0\"/\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/children\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"160.0\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cLabel alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutY\u003d\"14.0\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               prefHeight\u003d\"46.0\" prefWidth\u003d\"613.0\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               style\u003d\"-fx-background-color: #f37f20;\" text\u003d\"Classes Today\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                               textAlignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003cfont\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                                \u003cFont size\u003d\"27.0\"/\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            \u003c/font\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/children\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/items\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cpadding\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/padding\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cVBox layoutX\u003d\"9.0\" layoutY\u003d\"637.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"1259.0\"\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSplitPane dividerPositions\u003d\"0.5\" prefHeight\u003d\"65.0\" prefWidth\u003d\"1283.0\"\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003citems\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton fx:id\u003d\"submit\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSubmit\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefHeight\u003d\"46.0\" prefWidth\u003d\"151.0\" text\u003d\"Enter\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Button\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextField id\u003d\"cmdInput\" maxWidth\u003d\"1120.0\" prefHeight\u003d\"34.0\" prefWidth\u003d\"1088.0\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           promptText\u003d\"Command\"\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccursor\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cCursor fx:constant\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/cursor\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Microsoft Sans Serif\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/items\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cInsets/\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "Sfloydzy": 186,
      "danisheddie": 1
    }
  },
  {
    "path": "src/main/resources/view/schedule.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003cVBox prefHeight\u003d\"720.0\" prefWidth\u003d\"1280.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "      fx:controller\u003d\"duke.launcher.gui.Controller\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003cMenuBar prefHeight\u003d\"26.0\" prefWidth\u003d\"600.0\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003cmenus\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"New\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Open…\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Open Recent\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save As…\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Revert\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Preferences…\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Quit\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Undo\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Redo\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Cut\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Copy\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Paste\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Delete\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Select All\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Unselect All\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About MyHelloApp\"/\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003c/menus\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cAnchorPane prefHeight\u003d\"693.0\" prefWidth\u003d\"1280.0\" style\u003d\"-fx-background-color: #43436e;\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"161.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"55.0\" prefWidth\u003d\"1105.0\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                       style\u003d\"-fx-background-color: CECCCC;\" text\u003d\"SCHEDULE\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cFont name\u003d\"Arial\" size\u003d\"27.0\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"161.0\" layoutY\u003d\"78.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"1105.0\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"2.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"215.0\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                              style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTableView layoutX\u003d\"-1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"215.0\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccolumns\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"214.0\" resizable\u003d\"false\" text\u003d\"Month\"/\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/columns\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TableView\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"224.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"880.0\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                              style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cDatePicker layoutX\u003d\"318.0\" layoutY\u003d\"14.0\" promptText\u003d\"Select date\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                            showWeekNumbers\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"10.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"271.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Calender\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTableView layoutX\u003d\"90.0\" layoutY\u003d\"112.0\" prefHeight\u003d\"398.0\" prefWidth\u003d\"700.0\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccolumns\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"100.0\" text\u003d\"Monday\"/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"100.0\" text\u003d\"Tuesday\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"100.0\" text\u003d\"Wednesday\"/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"100.0\" text\u003d\"Thursday\"/\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"100.0\" text\u003d\"Friday\"/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"100.0\" text\u003d\"Saturday\"/\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cTableColumn prefWidth\u003d\"100.0\" text\u003d\"Sunday\"/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/columns\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TableView\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton fx:id\u003d\"btnDay\" layoutX\u003d\"582.0\" layoutY\u003d\"15.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        onAction\u003d\"#viewDay\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"View Day\"/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton layoutX\u003d\"202.0\" layoutY\u003d\"525.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"31.0\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefWidth\u003d\"116.0\" text\u003d\"Previous\"/\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton layoutX\u003d\"577.0\" layoutY\u003d\"525.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"31.0\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefWidth\u003d\"116.0\" text\u003d\"Next\"/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"10.0\" layoutY\u003d\"64.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"271.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"October 2019\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"14.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"658.0\" prefWidth\u003d\"139.0\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"12.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"116.0\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                               style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Menu\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnHome\" layoutX\u003d\"17.0\" layoutY\u003d\"60.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewMenu\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Home\"/\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnStudents\" layoutX\u003d\"17.0\" layoutY\u003d\"112.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewStudents\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Students\"/\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnTraining\" layoutX\u003d\"17.0\" layoutY\u003d\"160.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewTraining\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Training\"/\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 48,
      "Sfloydzy": 79,
      "danisheddie": 1
    }
  },
  {
    "path": "src/main/resources/view/student.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.chart.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003cVBox prefHeight\u003d\"720.0\" prefWidth\u003d\"1280.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "      fx:controller\u003d\"duke.launcher.gui.Controller\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cMenuBar prefHeight\u003d\"26.0\" prefWidth\u003d\"600.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003cmenus\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"New\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Open…\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Open Recent\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save As…\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Revert\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Preferences…\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Quit\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Undo\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Redo\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Cut\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Copy\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Paste\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Delete\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Select All\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Unselect All\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About MyHelloApp\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/menus\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cAnchorPane prefHeight\u003d\"693.0\" prefWidth\u003d\"1280.0\" style\u003d\"-fx-background-color: #43436e;\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"161.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"55.0\" prefWidth\u003d\"1105.0\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                       style\u003d\"-fx-background-color: CECCCC;\" text\u003d\"Student\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cFont name\u003d\"Arial\" size\u003d\"27.0\"/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"161.0\" layoutY\u003d\"78.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"1105.0\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"2.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"556.0\" prefWidth\u003d\"215.0\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                              style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cScrollBar layoutX\u003d\"188.0\" layoutY\u003d\"36.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"517.0\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           prefWidth\u003d\"26.0\"/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cListView layoutY\u003d\"30.0\" prefHeight\u003d\"524.0\" prefWidth\u003d\"188.0\"/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"-3.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"222.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Student List\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"21.0\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"225.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"880.0\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                              style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextField alignment\u003d\"TOP_LEFT\" layoutX\u003d\"258.0\" layoutY\u003d\"83.0\" prefHeight\u003d\"31.0\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           prefWidth\u003d\"106.0\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccursor\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cCursor fx:constant\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/cursor\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextField alignment\u003d\"CENTER\" layoutX\u003d\"19.0\" layoutY\u003d\"82.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           prefWidth\u003d\"222.0\" text\u003d\"Paul\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccursor\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cCursor fx:constant\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/cursor\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont size\u003d\"14.0\"/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"19.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"222.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Name\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton layoutX\u003d\"693.0\" layoutY\u003d\"231.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefWidth\u003d\"155.0\" text\u003d\"Edit Particulars\"/\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"258.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"106.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Age\"\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"19.0\" layoutY\u003d\"198.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"222.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Address\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextField alignment\u003d\"TOP_LEFT\" layoutX\u003d\"20.0\" layoutY\u003d\"247.0\" prefHeight\u003d\"65.0\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           prefWidth\u003d\"459.0\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccursor\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cCursor fx:constant\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/cursor\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLineChart layoutX\u003d\"24.0\" layoutY\u003d\"379.0\" prefHeight\u003d\"197.0\" prefWidth\u003d\"836.0\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cxAxis\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cCategoryAxis side\u003d\"BOTTOM\"/\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/xAxis\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cyAxis\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cNumberAxis side\u003d\"LEFT\"/\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/yAxis\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/LineChart\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"19.0\" layoutY\u003d\"339.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"222.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Progress\"\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton layoutX\u003d\"249.0\" layoutY\u003d\"336.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"38.0\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefWidth\u003d\"116.0\" text\u003d\"Edit\"/\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton layoutX\u003d\"693.0\" layoutY\u003d\"282.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefWidth\u003d\"155.0\" text\u003d\"Delete\"/\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cImageView fitHeight\u003d\"169.0\" fitWidth\u003d\"150.0\" layoutX\u003d\"696.0\" layoutY\u003d\"24.0\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cimage\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cImage url\u003d\"@../images/DaDuke.png\"/\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/image\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton layoutX\u003d\"2.0\" layoutY\u003d\"554.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"38.0\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                prefWidth\u003d\"215.0\" text\u003d\"Add Student\"/\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"14.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"658.0\" prefWidth\u003d\"139.0\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"12.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"116.0\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                               style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Menu\"\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnHome\" layoutX\u003d\"17.0\" layoutY\u003d\"60.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewMenu\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Home\"/\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnSchedule\" layoutX\u003d\"17.0\" layoutY\u003d\"112.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewSchedule\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Schedule\"/\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnStudents\" layoutX\u003d\"17.0\" layoutY\u003d\"160.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewStudents\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Students\"/\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 7,
      "Sfloydzy": 167,
      "danisheddie": 1
    }
  },
  {
    "path": "src/main/resources/view/training.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003cVBox prefHeight\u003d\"720.0\" prefWidth\u003d\"1280.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "danisheddie"
        },
        "content": "      fx:controller\u003d\"duke.launcher.gui.Controller\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cMenuBar prefHeight\u003d\"26.0\" prefWidth\u003d\"600.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003cmenus\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"New\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Open…\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Open Recent\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save As…\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Revert\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Preferences…\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Quit\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Undo\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Redo\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Cut\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Copy\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Paste\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Delete\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cSeparatorMenuItem mnemonicParsing\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Select All\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Unselect All\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003citems\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About MyHelloApp\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/items\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Menu\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/menus\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "        \u003cAnchorPane prefHeight\u003d\"693.0\" prefWidth\u003d\"1280.0\" style\u003d\"-fx-background-color: #43436e;\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"161.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"55.0\" prefWidth\u003d\"1105.0\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                       style\u003d\"-fx-background-color: CECCCC;\" text\u003d\"TRAINING\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cFont name\u003d\"Arial\" size\u003d\"27.0\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"161.0\" layoutY\u003d\"78.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"1105.0\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"2.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"556.0\" prefWidth\u003d\"215.0\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                              style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cScrollBar layoutX\u003d\"188.0\" layoutY\u003d\"36.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"517.0\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           prefWidth\u003d\"26.0\"/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cListView layoutY\u003d\"30.0\" prefHeight\u003d\"524.0\" prefWidth\u003d\"188.0\"/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"-3.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"222.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Program List\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"21.0\"/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cPane layoutX\u003d\"225.0\" layoutY\u003d\"-2.0\" prefHeight\u003d\"595.0\" prefWidth\u003d\"880.0\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                              style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cchildren\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextField alignment\u003d\"TOP_LEFT\" layoutX\u003d\"14.0\" layoutY\u003d\"266.0\" prefHeight\u003d\"320.0\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           prefWidth\u003d\"850.0\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccursor\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cCursor fx:constant\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/cursor\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cTextField alignment\u003d\"CENTER\" layoutX\u003d\"14.0\" layoutY\u003d\"79.0\" prefHeight\u003d\"80.0\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                           prefWidth\u003d\"231.0\" text\u003d\"High\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003ccursor\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cCursor fx:constant\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/cursor\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont size\u003d\"36.0\"/\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"19.0\" layoutY\u003d\"36.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"222.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Intensity\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton layoutX\u003d\"748.0\" layoutY\u003d\"33.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"38.0\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefWidth\u003d\"116.0\" text\u003d\"Edit\"/\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cButton layoutX\u003d\"748.0\" layoutY\u003d\"79.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"38.0\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        prefWidth\u003d\"116.0\" text\u003d\"Delete\"/\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"19.0\" layoutY\u003d\"223.0\" prefHeight\u003d\"32.0\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                       prefWidth\u003d\"222.0\" style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Description\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003cfont\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                        \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                    \u003c/font\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003c/Label\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/children\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Pane\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton layoutX\u003d\"2.0\" layoutY\u003d\"554.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"38.0\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                prefWidth\u003d\"215.0\" text\u003d\"Add Program\"/\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003cAnchorPane layoutX\u003d\"14.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"658.0\" prefWidth\u003d\"139.0\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            style\u003d\"-fx-background-color: CECCCC;\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cLabel alignment\u003d\"CENTER\" layoutX\u003d\"12.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"32.0\" prefWidth\u003d\"116.0\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                               style\u003d\"-fx-border-color: #3F6596;\" text\u003d\"Menu\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003cfont\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                \u003cFont name\u003d\"Arial\" size\u003d\"24.0\"/\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                            \u003c/font\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003c/Label\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnHome\" layoutX\u003d\"17.0\" layoutY\u003d\"60.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewMenu\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Home\"/\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnSchedule\" layoutX\u003d\"17.0\" layoutY\u003d\"112.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewSchedule\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Schedule\"/\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                        \u003cButton fx:id\u003d\"btnStudents\" layoutX\u003d\"17.0\" layoutY\u003d\"161.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                                onAction\u003d\"#viewStudents\" prefHeight\u003d\"31.0\" prefWidth\u003d\"106.0\" text\u003d\"Students\"/\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Sfloydzy"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 7,
      "Sfloydzy": 132,
      "danisheddie": 1
    }
  }
]
