[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    archiveBaseName \u003d \"mid\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    archiveVersion \u003d \"v1.1\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"duke/Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 2,
      "-": 39
    }
  },
  {
    "path": "src/main/java/duke/Dishes/DishList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.Dishes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class DishList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private List\u003cDishes\u003e dishlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public DishList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.dishlist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void addDish(Dishes dishName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.dishlist.add(dishName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void deleteDish(int Nb) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        dishlist.remove(Nb);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public Dishes getDish(int Nb) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return dishlist.get(Nb);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return dishlist.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        dishlist.clear();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public String toString(Dishes dish) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return dish.getDishname();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 36
    }
  },
  {
    "path": "src/main/java/duke/Dishes/Dishes.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.Dishes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class Dishes{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private String dishname;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private int total \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private float rating \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private List\u003cString\u003e ingredientsList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public Dishes(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.dishname \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.ingredientsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public Dishes() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        //"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public int getTotalNumberOfOrders() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return total;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void setNumberOfOrders(int amount) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        total \u003d total + amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void clearOrders() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        total \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public String getDishname() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return dishname;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void setRating(int r) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        rating \u003d (total * rating + r) / total;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public float getRating() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return rating;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void addIngredients(String ingredients) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        ingredientsList.add(ingredients);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "//    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "//        return dishname;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 53
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package  duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.dishesCommand.RecipeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * MAIN CLASS DUKE, start from main function."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private DishList dish;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath used to specify the location of the file in the hard disc."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        dish \u003d new DishList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The execution core of the Duke class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "//                Command c \u003d Parser.parse(fullCommand, tasks.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                RecipeCommand c \u003d Parser.Parse(fullCommand); //execute the recipeCommands, add dishes etc"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                c.execute(dish, tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d MAIN FUNCTION \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 16,
      "-": 50
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.Dishes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a Command to add a specific {@link Task} in the {@link TaskList}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for AddCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task : the {@link Task} to be added in the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Public method used to add the task in the taskList, and write it on the hard disc."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param dish1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskList the {@link TaskList} to be expanded"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui       {@link Ui} used for printing the task output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param storage  {@link Storage} writes in the file on the hard disc"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @throws DukeException Error while adding the command to the duke.txt file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.showAddCommand(task.toString(), taskList.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.addCommandInFile(task.printInFile());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException(\"Error while adding the command to the duke.txt file\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 13,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents  an abstract Command that could be an add, delete, exit, done, find or list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public abstract void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the boolean indicating that it is( not) an {@link ExitCommand}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return false by default"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 5,
      "-": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": " * Represents a specific {@link Command} used to delete a {@link Task} from the {@link TaskList}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    private int taskNb;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public DeleteCommand(int taskNb) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskNb \u003d taskNb;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskNb \u003c taskList.size() \u0026\u0026 taskNb \u003e\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            Task removed \u003d taskList.removeTask(taskNb);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e fileContent \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(storage.getPath(), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                fileContent.remove(taskNb); // changing the file content"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                Files.write(storage.getPath(), fileContent, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"Error while deleting the task from the hard disc\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showRemovedTask(removed.toString(), taskList.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException(\"Enter a valid task number after delete, between 1 and \" + taskList.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "saradj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CEGLincoln": 2,
      "9hafidz6": 3,
      "saradj": 1,
      "-": 37,
      "VirginiaYu": 1
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a specific {@link Command} used to mark a {@link Task} as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private int taskNb;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public DoneCommand(int taskNb) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskNb \u003d taskNb;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskNb \u003c taskList.size() \u0026\u0026 taskNb \u003e\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            taskList.markTaskDone(taskNb);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showMarkDone(taskList.getTask(taskNb).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.changeContent(taskNb);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException(\"Enter a valid task number after done, between 1 and \" + taskList.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 5,
      "-": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a specific {@link Command} used to exit the program after the user inputs \"bye\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 4,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindIngredientCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.ingredients.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.ingredients.IngredientsList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "x3chillax"
        },
        "content": " * Represents a specific {@link Command} used to find a String occurring in the {@link TaskList}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "x3chillax"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "public class FindIngredientCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private String toFind;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public FindIngredientCommand(String toFind) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.toFind \u003d toFind;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 6,
      "x3chillax": 22
    }
  },
  {
    "path": "src/main/java/duke/command/FindToday.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "public class FindToday extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private Date today \u003d new Date();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private String pattern \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private String TodayDate \u003d simpleDateFormat.format(today);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        for (Task task : taskList.getAllTasks()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "            if (task.getDescription().contains(TodayDate)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "                sb.append(\"\\t \").append(i++).append(\".\").append(task.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "                sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        if (sb.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "            System.out.println(\"No ingredients for today!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "            System.out.println(\"\\t Here are the ingredients for today\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        sb.setLength(sb.length() - 1);// to remove the last new line"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        System.out.println(sb.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 2,
      "x3chillax": 41
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a specific {@link Command} used to list all the {@link Task}s in the {@link TaskList}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException(\"No tasks yet!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) { // looping to print all the saved tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showTask(\"\\t \" + i + \".\" + taskList.getTask(i - 1).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 7,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/command/RemindCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * One of the B-Extensions."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * @author 9hafidz6"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class RemindCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public RemindCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        //An empty constructor method"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        LocalDate date1 \u003d date.plusDays(5);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        Date startDate \u003d Date.from(date.atStartOfDay(ZoneId.systemDefault()).toInstant());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        Date endDate \u003d Date.from(date1.atStartOfDay(ZoneId.systemDefault()).toInstant());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(\"You have no upcoming events/deadlines/todos\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(\"These are your Tasks in the next 5 days\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            for (int a \u003d 0; a \u003c taskList.size(); a++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                Date taskDate \u003d taskList.getTask(a).getCurrentDate();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                if ((isWithinRange(taskDate, endDate, startDate))) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    System.out.println(num + \": \" + taskList.getTask(a).toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    num++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private boolean isWithinRange(Date taskDate, Date endDate, Date startDate) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return taskDate.before(endDate) \u0026\u0026 taskDate.after(startDate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 50
    }
  },
  {
    "path": "src/main/java/duke/command/Snooze.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * One of the B-Extensions."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * @author saradj"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Snooze extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private int taskNb;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private String until;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for snooze."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param taskNb task number"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param until snooze until when"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public Snooze(int taskNb, String until) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.taskNb \u003d taskNb;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.until \u003d until;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.date \u003d Convert.stringToDate(until);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskNb \u003c taskList.size() \u0026\u0026 taskNb \u003e\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            if (taskList.getTask(taskNb).isDone()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"Seems like you\u0027ve already finished that task, no need to snooze it now\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            taskList.changeTaskDate(taskNb, until);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            ui.showChangedDate(Convert.getDateString(date, until),taskList.getTask(taskNb).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.changeContent(taskNb);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException(\"Enter a valid task number after snooze, between 1 and \" + taskList.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 22,
      "-": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a specific {@link Command} used to find a String occurring in the {@link TaskList}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * One of the B-Extensions."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * @author x3chillax"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date toView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public ViewCommand(Date toView) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.toView \u003d toView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Task task : taskList.getAllTasks()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((task.getCurrentDate()).equals(toView)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    //TODO: needs work on this part. comparing of time use Date always takes into account time 0000"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                    sb.append(\"\\t \").append(i++).append(\".\").append(task.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            if (sb.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                System.out.println(\"No matching date found! \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                System.out.println(\"\\t Here are the tasks in the requested date:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            sb.setLength(sb.length() - 1); // to remove the last new line"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(sb.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 15,
      "-": 31
    }
  },
  {
    "path": "src/main/java/duke/dishesCommand/AddDishCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.dishesCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.Dishes;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class AddDishCommand extends RecipeCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private Dishes dish;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private int amount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private int Nb;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public AddDishCommand(Dishes dish, int amount) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.dish \u003d dish;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        boolean flag \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            if(dish1.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                dish1.addDish(dish);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                dish1.getDish(0).setNumberOfOrders(amount);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                ui.showAddedDishes(dish.getDishname(), amount);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                for( int i \u003d 0; i \u003c dish1.getSize(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    if(dish1.getDish(i).getDishname().equals(dish.getDishname())){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                        Nb \u003d i;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                        flag \u003d false; //dish already exist in list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                if(flag) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    dish1.addDish(dish); // add dish into list found in dishes class"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    dish1.getDish(dish1.getSize() - 1).setNumberOfOrders(amount);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    ui.showAddedDishes(dish.getDishname(), dish1.getDish(dish1.getSize() - 1).getTotalNumberOfOrders());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    dish1.getDish(Nb).setNumberOfOrders(amount);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    System.out.println(\"\\t your updated orders:\\n\\t \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                            + dish.getDishname() + \"\\t amount: \" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                            String.valueOf(dish1.getDish(Nb).getTotalNumberOfOrders()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            throw new DukeException(\"unable to add dish\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 54
    }
  },
  {
    "path": "src/main/java/duke/dishesCommand/AddIngredient.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.dishesCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class AddIngredient extends RecipeCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private String ingredient;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private int Nb;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public AddIngredient(String ingredient, int Nb) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.ingredient \u003d ingredient;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.Nb \u003d Nb;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            dish1.getDish(Nb - 1).addIngredients(ingredient);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(\"\\t added ingredient: \" + ingredient + \"\\n\\t to dish: \" + dish1.getDish(Nb - 1).getDishname());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            throw new DukeException(\"cannot add ingredient\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 29
    }
  },
  {
    "path": "src/main/java/duke/dishesCommand/DeleteDishCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.dishesCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.function.DoubleUnaryOperator;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class DeleteDishCommand extends RecipeCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private int Nb;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public DeleteDishCommand(int dishNb) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.Nb \u003d dishNb;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            ui.showDeletedDIsh(dish1.getDish(Nb - 1).getDishname());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            dish1.deleteDish(Nb - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            throw new DukeException(\"dish does not exist\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 34
    }
  },
  {
    "path": "src/main/java/duke/dishesCommand/InitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.dishesCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.Dishes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class InitCommand extends RecipeCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public InitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        //clears all the amount in dishes"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        System.out.println(\"\\t are you sure you want to clear list? (yes or no)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if(command.equals(\"yes\")){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            dish1.clearList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(\"\\t LIST IS CLEARED\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        else if(command.equals(\"no\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(\"\\t LIST IS NOT CLEARED\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 28
    }
  },
  {
    "path": "src/main/java/duke/dishesCommand/ListDishCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.dishesCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class ListDishCommand extends RecipeCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (dish1.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            throw new DukeException(\"No Dishes yet!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(\"\\t Here are the dishes in your list:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d dish1.getSize(); i++) { // looping to print all the saved tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                ui.showDishes(\"\\t \" + i + \".\" + dish1.getDish(i - 1).getDishname()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                        , dish1.getDish(i - 1).getTotalNumberOfOrders());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 24
    }
  },
  {
    "path": "src/main/java/duke/dishesCommand/RecipeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.dishesCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.DishList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents  an abstract Command that could be an add, delete, exit, done, find or list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public abstract class RecipeCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public abstract void execute(DishList dish1, TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the boolean indicating that it is( not) an {@link ExitCommand}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @return false by default"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents an {@link Exception} class used to throw exceptions from the Duke class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        super(\"\\t ☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/ingredients/Ingredients.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "package duke.ingredients;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "public abstract class Ingredients"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private Integer Nb;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private Integer amount;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private Date date \u003d new Date();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public Ingredients(String ingredients, Integer amount, Date date)       //beef 200 19/07/2019"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.name \u003d ingredients;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public void changeDate(Date date)       //to change date, we need new date"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public void setName(String name)        //to change name, we need new name"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public void changeAmount(Integer amount) //to change amount, we need new amount"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    //private String pattern \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    //private SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    //private String TodayDate \u003d simpleDateFormat.format(today);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "x3chillax": 34
    }
  },
  {
    "path": "src/main/java/duke/ingredients/IngredientsList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "package duke.ingredients;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.ingredients.Ingredients;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import javax.xml.crypto.Data;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "public class IngredientsList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    private List\u003cIngredients\u003e ingredientsList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public IngredientsList(List\u003cIngredients\u003e ingredientsList)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.ingredientsList \u003d ingredientsList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public IngredientsList()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        this.ingredientsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public void addIngredients(Ingredients ingredients)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        ingredientsList.add(ingredients);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public int size()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        return ingredientsList.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public Ingredients removeIngredients(int Nb)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        return ingredientsList.remove(Nb);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public void changeIngredientsDate(int Nb, Date date) throws DukeException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        ingredientsList.get(Nb).changeDate(date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        String pattern \u003d \"dd/MM/yyyy\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        String TodayDate \u003d simpleDateFormat.format(new Date());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        String newDate \u003d Convert.stringToDate(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        if (newDate.before(TodayDate)) //if date given is already expired,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "            throw new DukeException(\"Ingredient is already expired\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        else"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "            ingredientsList.get(Nb).changeDate(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public void changeIngredientName(int Nb, String name)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        ingredientsList.get(Nb).setName(name);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    public void changeIngredientAmount(int Nb, Integer amount)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "        ingredientsList.get(Nb).changeAmount(amount);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "x3chillax"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "x3chillax": 67
    }
  },
  {
    "path": "src/main/java/duke/order/Order.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.order;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.task.Dish;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represents a general Order to be added by {@link Duke}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Order {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Map\u003cInteger, Integer\u003e content;  //first int is dishNb, second is dishAmount"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * The constructor method for {@link Order}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Order() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.date \u003d new Date();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.content \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.name \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * The constructor method for the {@link Order} in reservation case."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param date date of serving the {@link Order}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Order(String date, String name) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.date \u003d (date\u003d\u003d\"\")? new Date():Convert.stringToDate(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.content \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Used to get the serving date of the {@link Order}."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Date getDate() { return this.date;}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Used to get the customer name of the {@link Order}."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getCustomerName() { return this.name;}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Used to alter the serving date of the {@link Order}."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param date reset date of the {@link Order}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.date \u003d Convert.stringToDate(date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Used to alter the serving date of the {@link Order}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param name reset customer name of the reservation {@link Order}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void setCustomerName(String name) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a boolean indicating whether the {@link Order} was completed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return boolean true if the order was marked as done, false otherwise"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a String representation of the status icon, indicating whether the {@link Order} was done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return a tick or a cross"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns the content of the {@link Order}."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Write the content into file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return content of the Order"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Map\u003cInteger, Integer\u003e getOrder() { return this.content; }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.isDone()) { desc \u003d \"O|1|\" + this.date + \"|\" + this.name; }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        else { desc \u003d \"O|0|\" + this.date + \"|\" + this.name; }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        for (Map.Entry\u003cInteger, Integer\u003e entry : content.entrySet()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            int DishNb \u003d entry.getKey();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            int DishAmount \u003d entry.getValue();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            desc +\u003d \"\\nD|\" + DishAmount + \"|\" + DishNb;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns the content of the {@link Order}."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Show the content to the user/customer."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return content of the Order"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String description \u003d \"[\" + getStatusIcon() + \"] \";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (this.date!\u003dnew Date()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            description +\u003d \"Preorder under \"+ this.name + \" on \" + this.date;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            description +\u003d \"Order Today\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        for (Map.Entry\u003cInteger, Integer\u003e entry : content.entrySet()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                int DishNb \u003d entry.getKey();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                String DishName \u003d getDishName(DishNb);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                int DishAmount \u003d entry.getValue();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                description +\u003d \"\\n\" + DishAmount + DishName;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public double getTotalPrice() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //To do"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //link the price with DishNb s.t. can calculate total price"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        int unitPrice \u003d 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        double total \u003d 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        for (Map.Entry\u003cInteger, Integer\u003e entry : content.entrySet()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            int DishNb \u003d entry.getKey();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            int DishAmount \u003d entry.getValue();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            total +\u003d DishAmount*unitPrice;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return total;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void addDish(int dishNb, int amount) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.content.put(dishNb, amount);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Used to mark the {@link Order} as finished."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getDishName(int dishNb) throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            switch (dishNb) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 1: return \"Beef Noodle\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 2: return \"Pork Dumplings\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 3: return \"Chili Crab\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 4: return \"Cereal Prawn\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 5: return \"Laksa\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 6: return \"Chicken Rice\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case 7: return \"Seasonal Vegetables\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    throw new DukeException(\"No corresponding dishes in today\u0027s menu!\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 168
    }
  },
  {
    "path": "src/main/java/duke/order/OrderList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.order;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represents a list of {@link Order}s added by {@link Duke}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class OrderList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private List\u003cOrder\u003e orderList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * The constructor method(1) for OrderList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public OrderList(List\u003cOrder\u003e orderList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.orderList \u003d orderList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * The constructor method(2) for OrderList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public OrderList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.orderList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Adds a order to the {@link OrderList}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param order {@link Order} to be added to the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void addOrder(Order order) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        orderList.add(order);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns the number of {@link Order}s in the {@link OrderList} so far."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return an integer indicating the size of the list of {@link Order}s stored"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return orderList.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Marks a order as completed if the user finished it."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param orderNb the number of the {@link Order} in the {@link OrderList} that was completed"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void markOrderDone(int orderNb) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        orderList.get(orderNb).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns the {@link Order} at the position indicated by the orderNb."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param orderNb the position of the {@link Order} requested in the {@link OrderList}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return the requested {@link Order}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Order getOrder(int orderNb) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return orderList.get(orderNb);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a list of all the {@link Order}s in the {@link OrderList}."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return  {@link ArrayList} of {@link Order}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public List\u003cOrder\u003e getAllOrders() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return orderList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns a list of all the undone {@link Order}s in the {@link OrderList}."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Not including orders that has been done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return  {@link ArrayList} of {@link Order}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public List\u003cOrder\u003e getAllUndoneOrders() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        List\u003cOrder\u003e udOrderList \u003d null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        for (Order order : orderList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (!order.isDone()) { udOrderList.add(order); }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return udOrderList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns the removed {@link Order} from position orderNb in the {@link OrderList}."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param orderNb the position of the {@link Order} to be removed from the {@link OrderList}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return Order the order list with the order removed"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public Order removeOrder(int orderNb) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return orderList.remove(orderNb);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void changeOrderDate(int orderNb, String date) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        Date newDate \u003d Convert.stringToDate(date);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //If set date is before today"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (newDate.before(new Date())) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"Invalid Date!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }else { orderList.get(orderNb).setDate(date); }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void changeOrderName(int orderNb, String name) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        orderList.get(orderNb).setCustomerName(name);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void addOrderDish(int orderNb, int dishNb, int amount) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        orderList.get(orderNb).addDish(dishNb, amount);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 112
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/AddOrder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.Order;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class AddOrder extends OrderCommand{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Order order;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * The constructor method (1) for AddCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public AddOrder() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.order \u003d new Order();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * The constructor method (2) for AddCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param order : the {@link Order} to be added in the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public AddOrder(Order order) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Public method used to add a new order in the orderList, and write it on the hard disc."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param orderList the {@link OrderList} to be expanded"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param ui       {@link Ui} used for printing the order output"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param storage  {@link Storage} writes in the file on the hard disc"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @throws DukeException Error while adding the command to the duke.txt file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void execute(OrderList orderList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        printStartMsg(ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String orderDate \u003d getOrderDate(ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        printMenu();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        order \u003d new Order();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String[] orders \u003d new String[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        boolean isConfirmed \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        while (!isConfirmed) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                String[] split \u003d fullCommand.split(\", \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                System.out.println(\"You have ordered:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                showOrderContent(split);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                System.out.println(\"Confirm [Y/N]?\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                isConfirmed \u003d (ui.readCommand().toLowerCase()\u003d\u003d\"y\")? true: false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                orders \u003d split;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String customerName \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (orderDate!\u003d\"\") { customerName \u003d getCustomerName(ui); }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        printConfirmMsg(order, orderDate, customerName);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //Add dishes into order"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        for (String s : orders) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String[] Dish \u003d s.split(\"\\\\*\", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            order.addDish(Integer.parseInt(Dish[0]), Integer.parseInt(Dish[1]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        orderList.addOrder(order);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        ui.showAddOrder(order.toString(), orderList.size());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            storage.addCommandInFile(order.printInFile());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            //To do"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            //how to read from order.txt"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            //separate storage from task storage class"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"Error while adding the command to the orders.txt file\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    } //category"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void printStartMsg(Ui ui) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Hello! Welcome to restaurant SUPERDELIOUS!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void printMenu() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Start ordering...\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Here is the menu. What would you like to order?\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"            Today\u0027s Menu                      \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"[1] Beef Noodle           $5.50\\n\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                \"[2] Pork Dumplings        $4.50\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                \"[3] Chili Crab            $8.00\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                \"[4] Cereal Prawn          $6.50\\n\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                \"[5] Laksa                 $4.50\\n\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                \"[6] Chicken Rice          $4.00\\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                \"[7] Seasonal Vegetables   $3.00\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //To do"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //Print out menu info by iteration rather than manually printing out"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //rewritten this part after menu/dish part is done"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void printConfirmMsg(Order orrder, String preOrderDate, String customerName) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (preOrderDate\u003d\u003d\"\") {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(\"Order received. Start preparing now...\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            order.setDate(preOrderDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            order.setCustomerName(customerName);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(\"Order received. Please come at \"+preOrderDate+\" on time.\"); }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getOrderDate(Ui ui) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Reservation or not [Y/N]?\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        boolean isPreOrder \u003d (ui.readCommand().toLowerCase() \u003d\u003d \"y\")? true:false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (isPreOrder) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(\"Please specify the serving date:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String date \u003d ui.readCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {return \"\";}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getCustomerName(Ui ui) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"What name is the reservation under, sir/madam?\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String name \u003d ui.readCommand();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public String getDishName(String dishNb) throws DukeException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            switch (dishNb) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[1]\": return \"Beef Noodle\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[2]\": return \"Pork Dumplings\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[3]\": return \"Chili Crab\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[4]\": return \"Cereal Prawn\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[5]\": return \"Laksa\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[6]\": return \"Chicken Rice\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[7]\": return \"Seasonal Vegetables\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    throw new DukeException(\"No corresponding dishes in today\u0027s menu!\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public double getDishPrice(String dishNb) throws DukeException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            switch (dishNb) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[1]\": return 5.5;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[2]\": return 4.5;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[3]\": return 8.0;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[4]\": return 6.5;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[5]\": return 4.5;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[6]\": return 4.0;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                case \"[7]\": return 3.0;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    throw new DukeException(\"No corresponding dishes in today\u0027s menu!\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }catch (Exception e){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void showOrderContent(String[] commandList) throws DukeException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //commandList contains the dishes number and dishes amount"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        int total \u003d 0;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        int cnt \u003d 0;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        for (String s: commandList) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String[] Dish \u003d s.split(\"\\\\*\", 2);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String DishName \u003d getDishName(Dish[0]);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            String DishAmount \u003d Dish[1];"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            cnt +\u003d Integer.parseInt(DishAmount);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            total +\u003d Integer.parseInt(DishAmount) * getDishPrice(Dish[0]);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(DishAmount+\" \"+DishName);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"Total: \"+cnt+\" dishes, $\"+total);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CEGLincoln": 1,
      "VirginiaYu": 192
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/CancelOrder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.Order;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import javax.swing.border.Border;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represents a specific {@link OrderCommand} used to delete a {@link Order} from the {@link OrderList}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class CancelOrder extends OrderCommand {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int orderNb;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public CancelOrder(String number) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        int orderNb;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try { orderNb \u003d Integer.parseInt(number) - 1; }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        catch (Exception e) { throw new DukeException(e.getMessage()); }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.orderNb \u003d orderNb;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void execute(OrderList orderList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (orderNb \u003c orderList.size() \u0026\u0026 orderNb \u003e\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            Order removed \u003d orderList.removeOrder(orderNb);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            List\u003cString\u003e fileContent \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(storage.getPath(), StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                fileContent.remove(orderNb); // changing the file content"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                Files.write(storage.getPath(), fileContent, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"Error while deleting the order from the hard disc\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            ui.showRemovedOrder(removed.toString(), orderList.size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"Enter a valid order number after delete, between 1 and \" + orderList.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 48
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/DoneOrder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.Order;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represents a specific {@link OrderCommand} used to mark a {@link Order} as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class DoneOrder extends OrderCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int orderNb;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public DoneOrder(String orderNb) throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        int x;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try { x \u003d Integer.parseInt(orderNb) - 1; }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        catch (Exception e) { throw new DukeException(e.getMessage()); }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.orderNb \u003d x;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void execute(OrderList orderList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (orderNb \u003c orderList.size() \u0026\u0026 orderNb \u003e\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            orderList.markOrderDone(orderNb);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            ui.showMarkDone(orderList.getOrder(orderNb).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            storage.changeContent(orderNb);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            //To do"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            //Trigger getFeedback here"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"Enter a valid task number after done, between 1 and \" + orderList.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 36
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/FindOrderByDate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.Order;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class FindOrderByDate extends OrderCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Date toView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public FindOrderByDate(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //expected to be \"date xxxx\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String date \u003d command.split(\" \")[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        Date toView \u003d Convert.stringToDate(date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.toView \u003d toView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void execute(OrderList orderList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            for (Order order : orderList.getAllOrders()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                if ((order.getDate()).equals(toView)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    sb.append(\"\\t \").append(i++).append(\".\").append(order.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (sb.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                System.out.println(\"No matching date found! \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                System.out.println(\"\\t Here are the orders on \"+ toView);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            sb.setLength(sb.length() - 1); // to remove the last new line"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(sb.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 45
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/ListAllOrders.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.Order;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represents a specific {@link OrderCommand} used to list all the {@link Order}s in the {@link OrderList}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class ListAllOrders extends OrderCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void execute(OrderList orderList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (orderList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"No orders yet!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(\"\\t Here are the orders in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d orderList.size(); i++) { // looping to print all the saved tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                ui.showTask(\"\\t \" + i + \".\" + orderList.getOrder(i - 1).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 25
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/ListUndoneOrders.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.Order;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represents a specific {@link OrderCommand} used to list all the undone {@link Order}s in the {@link OrderList}."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class ListUndoneOrders extends OrderCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void execute(OrderList orderList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (orderList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"No orders yet!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.println(\"\\t Searching for undone orders in your list...\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            int i;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            for (i \u003d 1; i \u003c\u003d orderList.size(); i++) { // looping to print all the saved tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                if (!orderList.getOrder(i - 1).isDone()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                    ui.showTask(\"\\t \" + i + \".\" + orderList.getOrder(i - 1).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (i\u003d\u003d1) System.out.println(\"\\t Cannot find undone orders!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 29
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/OrderCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " * Represents  an abstract order Command that could be an add, delete, exit, done, find or list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public abstract class OrderCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public abstract void execute(OrderList orderList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Returns the boolean indicating that it is( not) an {@link ExitCommand}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @return false by default"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 27
    }
  },
  {
    "path": "src/main/java/duke/orderCommand/PostponeOrder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.orderCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.order.OrderList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class PostponeOrder extends OrderCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private int orderNb;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private String until;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * The constructor method for snooze."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param orderNb order number"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param until snooze until when"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public PostponeOrder(int orderNb, String until) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.orderNb \u003d orderNb;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.until \u003d until;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        this.date \u003d Convert.stringToDate(until);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void execute(OrderList orderList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (orderNb \u003c orderList.size() \u0026\u0026 orderNb \u003e\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            if (orderList.getOrder(orderNb).isDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"Seems like you\u0027ve already finished that order, no need to snooze it now\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            orderList.changeOrderDate(orderNb, until);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            ui.showChangedDate(Convert.getDateString(date, until),orderList.getOrder(orderNb).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            storage.changeContent(orderNb);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            throw new DukeException(\"Enter a valid order number after snooze, between 1 and \" + orderList.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 44
    }
  },
  {
    "path": "src/main/java/duke/parser/Convert.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Convert between String and Date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class Convert {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the suffix to be used after the days in the Date, useful for printing the Date in the desired format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param n indication the Day of the month"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @return the suffix accordingly to the day of the month needed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public static String getDaySuffix(int n) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns a {@link Date} representation of a String in the format \"dd/MM/yyyy hhmm\" or \"dd/MM/yyyy\"."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param date String in the format \"dd/MM/yyyy hhmm\" or \"dd/MM/yyyy\", used to extract a {@link Date} instance from"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @return The {@link Date} instance created from the argument string or null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public static Date stringToDate(String date) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        DateFormat formatter;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (date.length() \u003e 11) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return formatter.parse(date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            System.out.println(\"Warning: Unable to convert \\\"\" + date + \"\\\" to a Date.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the {@link Date } instance as a String to be printed in the file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param date deadline {@link Date} for finishing the task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @return String the date for the deadline"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public static String getDateString(Date date, String dateString) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return dateString;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        String pattern;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (dateString.length() \u003e 11) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            pattern \u003d \"d\u0027\" + getDaySuffix(localDate.getDayOfMonth()) + \"\u0027 \u0027of\u0027 MMMM yyyy, ha \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            pattern \u003d \"d\u0027\" + getDaySuffix(localDate.getDayOfMonth()) + \"\u0027 \u0027of\u0027 MMMM yyyy\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return formatter.format(date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 78
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "import duke.command.FindIngredientCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "import duke.command.RemindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "import duke.command.ViewCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "import duke.orderCommand.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.dishesCommand.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.dishesCommand.InitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.Dishes.Dishes;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.DoWithinPeriodTasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": " * Represents a parser used to parse the input String from the user into a Duke understandable {@link Command}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": " * It should deals with making sense of the user command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    //There is no constructor method for all others are static."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Returns a {@link Command} that can be understood by {@link Duke} and executed after."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * We first split the fullCommand into 2, the keyword, followed by everything else."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Then we perform switching based on the keyword."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param fullCommand The String command entered by the user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param size The size of the TaskList"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @return Command The Command to be executed"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @throws DukeException for any invalid input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    public static Command parse(String fullCommand, int size) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        //splitted contains the keyword and the rest (description or task number)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        String[] splitted \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        //switching on the keyword"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        switch (splitted[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "saradj"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "            case \"listtoday\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "                return new FindToday();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "saradj"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                return new DoneCommand(checkNumber(splitted[1], size));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(new Todo(splitted[1]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                String[] getBy \u003d splitAndCheck(splitted[1], \" /by \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(new Deadline(getBy[0], getBy[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                String[] getAt \u003d splitAndCheck(splitted[1], \" /at \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(new Event(getAt[0], getAt[1]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "                return new FindIngredientCommand(splitted[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                return new DeleteCommand(checkNumber(splitted[1], size));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case \"remind\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return new RemindCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"snooze\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                String[] getUntil \u003d splitAndCheck(splitted[1], \" /until \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                return new Snooze(checkNumber(getUntil[0], size), getUntil[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"view\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                Date splittedDate \u003d Convert.stringToDate(splitted[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "x3chillax"
        },
        "content": "                return new ViewCommand(splittedDate);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"period\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                String[] getPart \u003d splitAndCheck(splitted[1], \" /from \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                String[] part \u003d splitAndCheck(getPart[1], \" /to \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                return new AddCommand(new DoWithinPeriodTasks(getPart[0], part[0], part[1]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public static RecipeCommand Parse(String fullCommaand) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        String[] splitted \u003d fullCommaand.split(\" \", 2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        switch (splitted[0]) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case \"dishadd\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                String[] getnum \u003d splitAndCheck(splitted[1], \" /num \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                int amount \u003d Integer.parseInt(getnum[1]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return new AddDishCommand(new Dishes(getnum[0]), amount);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case \"dishlist\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return new ListDishCommand();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case \"dishdelete\" :"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                int Nb \u003d Integer.parseInt(splitted[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return new DeleteDishCommand(Nb);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case \"addingredient\" :"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                String[] getIng \u003d splitAndCheck(splitted[1], \" /add \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                int listNum \u003d Integer.parseInt(getIng[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return new AddIngredient(getIng[0], listNum);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            case \"dishinit\" :"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                return new InitCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public static OrderCommand parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //splitted contains the keyword and the rest (description or task number)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        String[] splitted \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        //switching on the keyword"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        switch (splitted[0]) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                return new AddOrder();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                if (splitted[1].startsWith(\"undone\")) { return new ListUndoneOrders(); }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                else return new ListAllOrders();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                return new DoneOrder(splitted[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case \"cancel\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                return new CancelOrder(splitted[1]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case \"postpone\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                checkLength(splitted);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                String[] getUntil \u003d splitAndCheck(splitted[1], \" /by \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                return new PostponeOrder(Integer.parseInt(getUntil[0]), getUntil[1]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                return new FindOrderByDate(splitted[1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Checks the length of a String array is of size 2."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @throws DukeException when array is not of size 2."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    public static void checkLength(String[] str) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        if (str.length !\u003d 2) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            throw new DukeException(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Split a string and check its length."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    public static String[] splitAndCheck(String str, String regex) throws DukeException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        String[] part \u003d str.split(regex, 2);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        checkLength(part); //Throws DukeException"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        return part;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Converts a string into a number, and checks if it is out of bounds."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @return Returns a valid integer"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @throws DukeException when it is invalid"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    public static int checkNumber(String str, int size) throws DukeException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        int x;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            //Minus one because index starts from zero."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            //Throws NumberFormatException"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            x \u003d Integer.parseInt(str) - 1;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        if (x \u003c 0 || x \u003e\u003d size) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            //Index is out of bounds"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            throw new DukeException(\"FUCK YOU JOEY!\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "saradj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        return x;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CEGLincoln": 75,
      "9hafidz6": 26,
      "saradj": 3,
      "x3chillax": 5,
      "-": 50,
      "VirginiaYu": 23
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.DoWithinPeriodTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a storage used to load {@link Task}s from a text {@link File} and store {@link Task}s in it."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cString\u003e contentSoFar;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for Storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param fp used to specify the location of the file in the hard disc."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public Storage(String fp) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        filePath \u003d fp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        path \u003d Paths.get(fp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Load tasks from file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @return an {@link ArrayList} of {@link Task}s read from the text file indicated by the {@link Path}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            //to get the data from the hard disk until now"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            contentSoFar \u003d new ArrayList\u003c\u003e(Files.readAllLines(path, StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                contentSoFar \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                throw new DukeException(\"Could not create file in the specified directory.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return generateTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Part of the load method, taken out."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Generates tasks based on contentSoFar."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private List\u003cTask\u003e generateTasks() throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String next : contentSoFar) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            //splitting each line to extract the task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            //type - words[0], done or not - words[1], description - words[2], and more."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            String[] words \u003d next.split(\"\\\\|\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (words[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    tasks.add(new Todo(words[2]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    tasks.add(new Deadline(words[2], words[3]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                        tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    tasks.add(new Event(words[2], words[3]));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                        tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                case \"P\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    tasks.add(new DoWithinPeriodTasks(words[2], words[3], words[4]));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                        tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "                    throw new DukeException(\"Error in extracting tasks from file.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the {@link Path} that holds the directory used for I/O."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Path specifies the directory of the text {@link File} used for writing or reading"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public Path getPath() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return path;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Updates the content in the text file, by changing the specific {@link Task} indicated by the taskNb."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param taskNb Positive integer indicating the number of the {@link Task} in the {@link TaskList} to be updated"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException if the taskNb is invalid or there was an I/O Exception"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    public void changeContent(int taskNb) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (taskNb \u003c 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            throw new DukeException(\"The task number should be positive, task number entered was: \" + taskNb);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            contentSoFar \u003d new ArrayList\u003c\u003e(Files.readAllLines(path, StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            contentSoFar.set(taskNb, tasks.get(taskNb).printInFile()); // changing the file content"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.write(path, contentSoFar, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            throw new DukeException(\"Error while updating the file\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Used to add a {@link Task} by writing to {@link File}."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task {@link Task} to be written"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @throws IOException whatever that is"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addCommandInFile(String task) throws IOException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        contentSoFar \u003d new ArrayList\u003c\u003e(Files.readAllLines(path, StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        contentSoFar.add(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.write(path, contentSoFar, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 57,
      "-": 84
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a deadline {@link Task } specified by the due {@link Date}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for Deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public Deadline(String description, String str) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.setNewDate(str);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setNewDate(String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.date \u003d Convert.stringToDate(by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getCurrentDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Formats {@link Deadline} into a String."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String used to print the {@link Task } in the text file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"D|1|\" + this.getDescription() + \"|\" + by;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"D|0|\" + this.getDescription() + \"|\" + by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 19,
      "-": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Dish.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "public class Dish {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VirginiaYu": 4
    }
  },
  {
    "path": "src/main/java/duke/task/DoWithinPeriodTasks.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * One of the B-Extensions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * @author CEGLincoln"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "public class DoWithinPeriodTasks extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private String from;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    private String to;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for DoWithinPeriodTasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public DoWithinPeriodTasks(String d, String f, String t) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        super(d);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        from \u003d f;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        to \u003d t;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setNewDate(String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        //which one?"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getCurrentDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return \"[P]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (super.isDone()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"P|1|\" + super.getDescription() + \"|\" + from + \"|\" + to;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"P|0|\" + super.getDescription() + \"|\" + from + \"|\" + to;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 24,
      "-": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents an Event, a {@link Task} which is happening at a specific Date and time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public Event(String description, String str) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.setNewDate(str);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setNewDate(String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.at \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.date \u003d Convert.stringToDate(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getCurrentDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Formats {@link Event} into a String."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String used to print the {@link Task } in the text file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"E|1|\" + this.getDescription() + \"|\" + at;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"E|0|\" + this.getDescription() + \"|\" + at;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 20,
      "-": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a general Task to be added by {@link Duke}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract void setNewDate(String date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract Date getCurrentDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public abstract String printInFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns a String representation of the status icon, indicating whether the {@link Task} was done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @return a tick or a cross"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the String description of the {@link Task}."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String description of the Task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Used to mark the {@link Task} as finished."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns a boolean indicating whether the {@link Task} was completed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return boolean true if the task was marked as done, false otherwise"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 16,
      "-": 47
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a list of {@link Task}s added by {@link Duke}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method(1) for TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method(2) for TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Adds a task to the {@link TaskList}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param task {@link Task} to be added to the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the number of {@link Task}s in the {@link TaskList} so far."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an integer indicating the size of the list of {@link Task}s stored"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Marks a task as completed if the user finished it."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskNb the number of the {@link Task} in the {@link TaskList} that was completed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markTaskDone(int taskNb) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.get(taskNb).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the {@link Task} at the position indicated by the taskNb."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskNb the position of the {@link Task} requested in the {@link TaskList}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the requested {@link Task}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task getTask(int taskNb) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList.get(taskNb);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns a list of all the {@link Task}s in the {@link TaskList}."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * @return  {@link ArrayList} of {@link Task}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * Returns the removed {@link Task} from position taskNb in the {@link TaskList}."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskNb the position of the {@link Task} to be removed from the {@link TaskList}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task the task that was removed"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task removeTask(int taskNb) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList.remove(taskNb);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void changeTaskDate(int taskNb, String date) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.get(taskNb).setNewDate(date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 20,
      "-": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "import duke.parser.Convert;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": " * Represents a specific {@link Task} todo, not necessarily indicating a deadline or a specific date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     * The constructor method for Todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        date \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setNewDate(String date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        this.date \u003d Convert.stringToDate(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getCurrentDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"T|1|\" + this.getDescription();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "            return \"T|0|\" + this.getDescription();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "9hafidz6": 13,
      "-": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": " * Represents the user interaction, used for getting the user input and printing the output on the screen."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * The constructor method for Ui."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Returns the input entered by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return String the input entered by the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show a line."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t \" + line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Used to print the greeting message from {@link Duke}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show loading error."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t ☹ OOPS!!! Error while loading the list from the hard disc\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show the error to user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param e an error"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show the task to user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param task string"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showTask(String task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show that this task is marked."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param doneTask The task that is marked as done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showMarkDone(String doneTask) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t \" + doneTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show the task that has been snoozed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param date the date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param changedTask the task that has been changed"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public void showChangedDate(String date, String changedTask) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve snoozed this task as until \" + date + \":\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t \" + changedTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show the size of the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    public void showSize(int size) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"\\t Now you have \" + size);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            System.out.print(\" task\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "            System.out.print(\" tasks\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\" in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Show the size of the order list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void showOrderListSize(int size) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.print(\"\\t Now you have \" + size);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.print(\" order\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "            System.out.print(\" orderss\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\" in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Shows that a task has been added."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param command ay"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param size ya"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showAddCommand(String command, int size) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t \" + command);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        showSize(size);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Shows that a order has been added."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param command ay"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param size ya"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void showAddOrder(String command, int size) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this order: \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"\\t \" + command);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        showOrderListSize(size);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * Show the task that has been removed."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param removed the task"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     * @param size size of list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CEGLincoln"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showRemovedTask(String removed, int size) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"\\t \" + removed);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        showSize(size);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * Show the order that has been removed."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param removed the order"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     * @param size size of order list"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    public void showRemovedOrder(String removed, int size) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"\\t Noted. I\u0027ve removed this order:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        System.out.println(\"\\t \" + removed);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "        showOrderListSize(size);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VirginiaYu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void showAddedDishes(String dish, int Nb) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        System.out.println(\"\\t you have added the following dish: \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        System.out.println(\"\\t \" + dish + \" \\tamount: \" + Nb);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void showDishes(String Dish, int Nb) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        System.out.println(Dish + \"\\t orders: \" + Nb);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    public void showDeletedDIsh(String dish) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        System.out.println(\"\\t The following dish have been removed:\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "        System.out.println(\"\\t \" + dish);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "9hafidz6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CEGLincoln": 49,
      "9hafidz6": 12,
      "saradj": 2,
      "-": 72,
      "VirginiaYu": 34
    }
  }
]
