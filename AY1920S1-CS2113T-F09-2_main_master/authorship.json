[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027cube\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"cube.Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "    archiveBaseName \u003d \"cube\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "    archiveVersion \u003d \"0.1.1\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 25,
      "zkathrynx": 7
    }
  },
  {
    "path": "src/main/java/cube/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * This is the main entrance of Duke programme."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import cube.logic.parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.util.FileUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.logic.command.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.storage.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * the main class of Duke Programme"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtil storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private FoodList foodList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Duke constructor with filePath."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath the file path where duke data is stored."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage \u003d new FileUtil(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            storageManager \u003d storage.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            foodList \u003d new FoodList(storageManager.loadFood());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            Food.updateRevenue(storageManager.loadRevenue());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (CubeException | NullPointerException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showLoadingError(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            Food.updateRevenue(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Runs the Duke programme by receiving user commands and executing the commands."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                c.execute(foodList, ui, storageManager);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                storage.save(storageManager);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (CubeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes new Duke user and runs the programme."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args programme arguments."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        //todo: allow user to specify data path"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        new Duke(\"data\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 10,
      "-": 67,
      "zkathrynx": 1
    }
  },
  {
    "path": "src/main/java/cube/exception/CubeLoadingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * This an exception class that handles loading exception when using Cube. Inherits from CubeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.ui.Message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class CubeLoadingException extends CubeException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public CubeLoadingException(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(Message.IO_ERROR + filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 18
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.logic.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import cube.ui.Message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "// design pattern copied from address book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "// reference: https://github.com/nusCS2113-AY1920S1/addressbook-level3/tree/master/src/main/java/seedu/address/logic/parser"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": " * Parse user command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": " * @author Zheng Kaining"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * Parse user command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * Format:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * add -n foodName -t foodType -p price -s stock -e expiryDate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * delete -i index"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * sold -n foodName -q quantity"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * help"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * bye"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * Assumption: no repetitive parameters given."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * @param fullCommand the command that user inputs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * @return corresponding command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\tpublic static Command parse (String fullCommand) throws CubeException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\tString[] inputs \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\tString command \u003d inputs[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\tcommand \u003d command.trim().toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\tswitch (command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"add\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tint foodNameIndex \u003d -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tint foodTypeIndex \u003d -1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tint priceIndex \u003d -1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tint stockIndex \u003d -1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tint expiryDateIndex \u003d -1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tfor (int i \u003d 1; i \u003c inputs.length; i ++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tif (inputs[i].equals(\"-n\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t\tfoodNameIndex \u003d i;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tif (inputs[i].equals(\"-t\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t\tfoodTypeIndex \u003d i;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tif (inputs[i].equals(\"-p\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t\tpriceIndex \u003d i;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tif (inputs[i].equals(\"-s\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t\tstockIndex \u003d i;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tif (inputs[i].equals(\"-e\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t\texpiryDateIndex \u003d i;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tif (foodNameIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tthrow new CubeException(\"Not enough parameter. Please enter food name.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tFood tempFood \u003d new Food(inputs[foodNameIndex+1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tif (foodTypeIndex !\u003d -1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\ttempFood.setType(inputs[foodTypeIndex+1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tif (priceIndex !\u003d -1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\ttempFood.setPrice(Integer.parseInt(inputs[priceIndex+1]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tif (stockIndex !\u003d -1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\ttempFood.updateStock(Integer.parseInt(inputs[stockIndex+1]));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tif (expiryDateIndex !\u003d -1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\ttempFood.setExpiryDate(parseStringToDate(inputs[priceIndex+1]));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\treturn new AddCommand(tempFood);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"list\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\treturn new ListCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"delete\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tif (inputs.length \u003c 3) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tthrow new CubeException(\"Not enough parameters. Please enter index you want to delete.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\treturn new DeleteCommand(Integer.parseInt(inputs[2]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"sold\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tfoodNameIndex \u003d -1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tint quantityIndex \u003d -1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tfor (int i \u003d 1; i \u003c inputs.length; i ++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tif (inputs[i].equals(\"-n\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t\tfoodNameIndex \u003d i;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tif (inputs[i].equals(\"-q\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t\tquantityIndex \u003d i;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tif(foodNameIndex \u003d\u003d -1 || quantityIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t\tthrow new CubeException(\"Not enough parameters. Please enter both food name and quantity sold.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\treturn new SoldCommand(inputs[foodNameIndex+1],Integer.parseInt(inputs[quantityIndex+1]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"help\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\treturn new HelpCommand();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"bye\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"exit\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tcase \"quit\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\treturn new ExitCommand();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\t\tthrow new CubeException(Message.INVALID_COMMAND);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * Returns a Date object by parsing the date String."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * Time zone is set as Singapore time by default."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * @param dateString the String describing the date."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * @return the date"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t * @throws CubeException exception occurs when unable to parse."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\tpublic static Date parseStringToDate(String dateString) throws CubeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\tif (dateString \u003d\u003d null) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\tSimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\tformatter.setTimeZone(TimeZone.getTimeZone(\"GMT-8:00\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\tDate date \u003d formatter.parse(dateString);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\treturn date;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zkathrynx"
        },
        "content": "\t\t\tthrow new CubeException(Message.INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zkathrynx": 116,
      "-": 23
    }
  },
  {
    "path": "src/main/java/cube/model/food/Food.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Food implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected static double revenue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected double price;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected int stock;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected Date expiryDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Constructor with one argument."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param name Name of the food product."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Food(String name) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.revenue \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.stock \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets the type of the product."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param type The type of the product."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setType(String type) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.type \u003d type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the type of the product."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the type of the product."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic String getType() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets/changes the price of the product."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param price The price of the product."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setPrice (double price) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.price \u003d price;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the price of the product."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the price of the product."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic double getPrice() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn price;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets/updates the expiry date of the product."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param expiryDate The expiry date of the product."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setExpiryDate (Date expiryDate) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.expiryDate \u003d expiryDate;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the expiry date of the product."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the expiry date of the product."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Date getExpiryDate() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn expiryDate;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Updates the total revenue made from selling the product."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param newRevenue New total revenue made from selling the product."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic static void updateRevenue(double newRevenue) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\trevenue \u003d newRevenue;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the revenue earned from selling the product."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the revenue earned from selling the product."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic static double getRevenue() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn revenue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Updates the quantity of the product available in stock."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param newStock New quantity of product available."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void updateStock(int newStock) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tstock \u003d newStock;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the quantity of the product available in stock."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return Quantity of product in stock."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic int getStock() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn stock;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Shows that product already exists in the inventory."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return true"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic boolean exists(String foodName) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tif (foodName \u003d\u003d this.name) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Casts the food product to String type."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the String printout of the food product."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn name + \"\\n  Type: \" + type +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Price: \" + price +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Stock: \" + stock +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Expiry Date: \" + expiryDate +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Revenue: \" + revenue;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 127,
      "-": 29
    }
  },
  {
    "path": "src/main/java/cube/model/food/FoodList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "// for testing only"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class FoodList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic enum SortType {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic FoodList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic FoodList(ArrayList\u003cFood\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void add(Food food) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Food get(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Food get(String foodName) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn new Food(foodName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void remove(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic boolean exists(Food food) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void sort(SortType sortType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\t//public Iteator iterator() {}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 1,
      "-": 48
    }
  },
  {
    "path": "src/main/java/cube/storage/FoodStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class FoodStorage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tprivate ArrayList\u003cFood\u003e foodArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodStorage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodStorage(ArrayList\u003cFood\u003e foodArrayList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList \u003d foodArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic ArrayList\u003cFood\u003e loadFood() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn foodArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void appendFood(Food food) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tfoodArrayList.add(food);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void storeFoodList(FoodList foodlist) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 24,
      "-": 6
    }
  },
  {
    "path": "src/main/java/cube/storage/RevenueStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "// for testing only"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class RevenueStorage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private double revenue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public RevenueStorage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.revenue \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic RevenueStorage(double revenue) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.revenue \u003d revenue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public double loadRevenue() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return revenue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void storeRevenue(double revenue) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.revenue \u003d revenue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 14,
      "-": 8
    }
  },
  {
    "path": "src/main/java/cube/storage/StorageManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// this is facade design pattern"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "// reference: https://github.com/nusCS2113-AY1920S1/addressbook-level3/tree/master/src/main/java/seedu/address/storage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\tprivate FoodStorage foodStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\tprivate RevenueStorage revenueStorage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic StorageManager(FoodStorage foodStorage, RevenueStorage revenueStorage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodStorage \u003d foodStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.revenueStorage \u003d revenueStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic ArrayList\u003cFood\u003e loadFood() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn foodStorage.loadFood();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void appendFood(Food food) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tfoodStorage.appendFood(food);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void storeFoodList(FoodList foodlist) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tfoodStorage.storeFoodList(foodlist);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic double loadRevenue() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn revenueStorage.loadRevenue();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void storeRevenue(double revenue) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\trevenueStorage.storeRevenue(revenue);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 11,
      "-": 29
    }
  },
  {
    "path": "src/main/java/cube/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * This is the Task class that used as parent class for all types of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task implements Serializable{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\tprotected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\tprotected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Default constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Calls another constructor with (null) as argument."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Task() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis(null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Constructor with one argument."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Calls another constructor with additional argument date\u003dnull."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param description the description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis(description, null);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Constructor with two arguments."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Sets isDone to false by default."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param description"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param date"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Task(String description, Date date) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.date \u003d date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Casts the task to String type."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return the String printout of the task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Date getDate() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn date;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Gets the status of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return true if the task is done, otherwise false."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic boolean getStatus() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Returns icon \u0027Tick\" if task is done, icon \u0027Cross\u0027 if it is not done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return the icon of the status"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn (isDone ? \"\\u2713\" : \"\\u2718\"); //tick or cross"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Casts the task to String type."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return the String printout of the event."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn \"[\" + getStatusIcon() + \"] \" + description; "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\t *  Sets isDone to true."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void markAsDone() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 1,
      "-": 93
    }
  },
  {
    "path": "src/main/java/cube/ui/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * The task contain all message used when errors occur."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "//todo: could create relevant exception classes with the specific message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_DESCRIPTION"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The description of a task cannot be empty\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_DATE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The date cannot be empty. Please Add date after / Character\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_TASK_NUMBER"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The task number cannot be empty\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String INVALID_TASK_NUMBER"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The task number is invalid\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String INVALID_DATE_FORMAT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The date format is invalid. Please specify date in \u0027dd/mm/yy\u0027\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String INVALID_COMMAND"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The command is invalid. Enter \u0027help\u0027 to view the list of command\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EXISTING_DATE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! There is an existing task that clashes with the date of the task!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EXISTING_DESCRIPTION"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! There is an existing task that contains the exact description!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String IO_ERROR"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The data file is deprecated. Unable to read or write in cube.dat in \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_DURATION"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The duration cannot be empty. Please provide the duration of the task after \\\\ Character\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 1,
      "-": 29
    }
  },
  {
    "path": "src/main/java/cube/util/FileUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Handling of file operation utilities in Cube."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeLoadingException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.FoodStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.RevenueStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String fileFullPath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static final String fileName \u003d \"cube.dat\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param filePath the directory path where data will be stored."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public FileUtil(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileFullPath \u003d filePath + File.separator + fileName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates the parent directory and file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param file the file at which should be created."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void create(File file) throws CubeLoadingException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Returns true if the data file is available, otherwise makes a new data file and returns false."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return true if data file available, otherwise false."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public boolean checkFileAvailable() throws CubeLoadingException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        File file \u003d new File(fileFullPath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            create(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Loads serialized StorageManager object from the file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs in reading from data file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public StorageManager load() throws CubeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        FoodStorage foodStorage \u003d new FoodStorage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        RevenueStorage revenueStorage \u003d new RevenueStorage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        StorageManager storageManager \u003d new StorageManager(foodStorage, revenueStorage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (checkFileAvailable()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            System.out.println(\"Loading file from : \" + fileFullPath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            // read from file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                FileInputStream fileInput \u003d new FileInputStream(fileFullPath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                ObjectInputStream in \u003d new ObjectInputStream(fileInput);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                storageManager \u003d (StorageManager)in.readObject();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                fileInput.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                in.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return storageManager;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Saves the StorageManage object into a file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storageManager containing FoodStorage \u0026 RevenueStorage data to save."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException exception happens in writing to the data file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void save(StorageManager storageManager) throws CubeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        checkFileAvailable();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            FileOutputStream fileSave \u003d new FileOutputStream(fileFullPath, false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(fileSave);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            out.writeObject(storageManager);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            fileSave.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 113
    }
  }
]
