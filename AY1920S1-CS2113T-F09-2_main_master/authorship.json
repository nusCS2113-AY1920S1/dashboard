[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    id \"org.openjfx.javafxplugin\" version \"0.0.8\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027cube\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "version \u00270.1.3\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    main {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            srcDirs\u003d [\"src/main/java\"]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        resources {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            srcDirs\u003d [\"src/main/resources\"]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    mainClassName \u003d \"cube.Cube\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "compileJava {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    options.compilerArgs \u003c\u003c \"-Xlint:unchecked\" \u003c\u003c \"-Xlint:deprecation\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.10.0\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.dataformat\u0027, name: \u0027jackson-dataformat-csv\u0027, version: \u00272.10.0\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    String jUnitVersion \u003d \u00275.5.0\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    ignoreFailures \u003d true"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tygq13"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    archiveBaseName \u003d \"cube\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 66,
      "tygq13": 6,
      "-": 18,
      "ZKathrynx": 4
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "rootProject.name \u003d \u0027Cube\u0027"
      }
    ],
    "authorContributionMap": {
      "kuromono": 1
    }
  },
  {
    "path": "src/main/java/cube/Cube.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.SalesHistory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.util.FileUtilJson;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.util.LogUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class Cube {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private ModelManager modelManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtilJson\u003cStorageManager\u003e storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private FoodList foodList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private SalesHistory salesHistory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private final Logger logger \u003d LogUtil.getLogger(Cube.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Cube constructor with filePath."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param filePath the file path where duke data is stored."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public Cube(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Cube ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage \u003d new FileUtilJson\u003c\u003e(filePath, \"cube.json\", storageManager);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            LogUtil.init(storageManager.getConfig().getLogConfig());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            storageManager \u003d storage.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            foodList \u003d storageManager.getFoodList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            salesHistory \u003d storageManager.getSalesHistory();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            modelManager \u003d new ModelManager(foodList, salesHistory);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            Food.updateRevenue(storageManager.getRevenue());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (CubeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            logger.warning(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            ui.showLoadingError(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            modelManager \u003d new ModelManager();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Runs the Cube programme by receiving user commands and executing the commands."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                logger.info(\"Command Entered : \" + fullCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                CommandResult result \u003d c.execute(modelManager, storageManager);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                ui.showCommandResult(result);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                storage.save(storageManager);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            } catch (CubeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                logger.warning(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[  Exiting Cube  ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Initializes new Duke user and runs the programme."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param args programme arguments."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        //todo: allow user to specify data path"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        new Cube(\"data\").run();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 32,
      "tygq13": 53,
      "ZKathrynx": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/cube/MainApp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.util.FileUtilJson;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.ui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtilJson\u003cStorageManager\u003e storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void init(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage \u003d new FileUtilJson\u003c\u003e(filePath, \"cube.json\", storageManager);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            storageManager \u003d storage.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            Food.updateRevenue(storageManager.getRevenue());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (CubeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        init(\"data\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        MainWindow mwc \u003d new MainWindow(stage, storageManager, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        mwc.initComponents();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        mwc.show();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 37,
      "tygq13": 1
    }
  },
  {
    "path": "src/main/java/cube/exception/CubeException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * The parent exception class that handles general exceptions in Using Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class CubeException extends Exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CubeException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tsuper();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs the exception with message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param message the message to be printed when exception happens."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public CubeException(String message) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 3,
      "-": 23
    }
  },
  {
    "path": "src/main/java/cube/exception/CubeLoadingException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * This an exception class that handles loading exception when using Cube. Inherits from CubeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class CubeLoadingException extends CubeException"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public CubeLoadingException(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        super(ErrorMessage.IO_ERROR + filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 15,
      "tygq13": 1
    }
  },
  {
    "path": "src/main/java/cube/exception/ErrorMessage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * The task contain all messages used when errors occur."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ErrorMessage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String IO_ERROR"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The data file is deprecated. IO Exception is caught. Unable to read or write in cube.dat in \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 11
    }
  },
  {
    "path": "src/main/java/cube/logic/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * The command add a food to food list and storage"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandUtil;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate final Food toAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String MESSAGE_SUCCESS \u003d \"New Food added: \\n\" "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t+ \"%1$s\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t+ \"Now you have %2$s food in the list.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Default constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @param food the food to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic AddCommand (Food food) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.toAdd \u003d food;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Adds food to foodList and store it if the food does not already exists, otherwise throws"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Command exception."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param list The food list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param storage The current Storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @return The message feedback to user before Programme Exit."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CommandResult execute(ModelManager model, StorageManager storage) throws CommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tFoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tCommandUtil.requireNameNotExists(list, toAdd.getName());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tlist.add(toAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// what is this for? not possible that a new food has revenue"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tFood.updateRevenue(Food.getRevenue() + toAdd.getFoodRevenue());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tstorage.storeFoodList(list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn new CommandResult(String.format(MESSAGE_SUCCESS, toAdd, list.size()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 42,
      "ZKathrynx": 6,
      "LL-Pengfei": 1
    }
  },
  {
    "path": "src/main/java/cube/logic/command/BatchCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * BatchCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Support commands related to batch file imports \u0026 exports."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.util.FileUtilCSV;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class BatchCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Use enums to specify the export or import operations to be performed by FileUtilCSV."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public enum OperationType {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        EXPORT, IMPORT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private BatchCommand.OperationType operationType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtilCSV\u003cFood\u003e batchUtil;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private final String MESSAGE_SUCCESS \u003d \"The product list has been successfully %1$s as file:\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        + \"%2$s\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private final String MESSAGE_EXPORT \u003d \"exported\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private final String MESSAGE_IMPORT \u003d \"imported\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param fileName Sets the filename of the CSV file to be loaded/saved from."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param operationType Specifies to either IMPORT or EXPORT operation."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public BatchCommand(String fileName, String operationType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.operationType \u003d OperationType.valueOf(operationType);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.batchUtil \u003d new FileUtilCSV\u003c\u003e(\"data\", fileName, new Food());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Calls \u0026 updates the required functions for CSV batch import operations."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param model ModelManager object to update the FoodList object from the import."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storage StorageManager object to update the FoodList object from the import."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException Throws an exception if error occured during file handling."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void batchImport(ModelManager model, StorageManager storage) throws CubeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ArrayList\u003cFood\u003e foodList \u003d batchUtil.load();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        FoodList importedFoodList \u003d new FoodList(foodList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        model.setFoodList(importedFoodList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage.storeFoodList(importedFoodList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Calls \u0026 updates the required functions for CSV batch export operations."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storage StorageManager object that contains the FoodList object to be saved."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException Throws an exception if error occured during file handling."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void batchExport(StorageManager storage) throws CubeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        batchUtil.save(storage.getFoodList().getFoodList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructs the command result output to be shown to the user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public CommandResult execute(ModelManager model, StorageManager storage) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            switch (operationType) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case IMPORT:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                batchImport(model, storage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS, MESSAGE_IMPORT, fileName));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case EXPORT:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                batchExport(storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS, MESSAGE_EXPORT, fileName));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (CubeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 88
    }
  },
  {
    "path": "src/main/java/cube/logic/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * This an abstract parent class of all commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Indicates whethis this command signals exit. Default is false."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @return false by defualt."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic abstract CommandResult execute(ModelManager model, StorageManager storage) throws CommandException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 25
    }
  },
  {
    "path": "src/main/java/cube/logic/command/ConfigCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * ConfigCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Support commands related to stored settings configurations."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.ConfigStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.LogConfig;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.UiConfig;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class ConfigCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Use enums to specify the configuration type to be configured."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public enum ConfigType {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        UI, LOG, VIEW"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private ConfigType configType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private UiConfig uiConfig;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private LogConfig logConfig;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private final String MESSAGE_SUCCESS \u003d \"The %1$s settings has been configured successfully.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        + \"Settings will be applied when you restart the program.\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String MESSAGE_VIEW \u003d \"All the saved configurations are as below:\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default Constructor for listing all configs."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param configType Type of configuration."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ConfigCommand(ConfigType configType) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.configType \u003d configType;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default Constructor for changing UI-related configurations."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param configType Type of configuration to set."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param uiConfig UiConfig object containing configuration parameters to set."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ConfigCommand(ConfigType configType, UiConfig uiConfig) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.configType \u003d configType;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.uiConfig \u003d uiConfig;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default Constructor for changing Logging-related configurations."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param configType Type of configuration to set."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param logConfig LogConfig object containing configuration parameters to set."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ConfigCommand(ConfigType configType, LogConfig logConfig) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.configType \u003d configType;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.logConfig \u003d logConfig;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Calls \u0026 updates the required functions for updating UiConfig values."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storage StorageManager object that contains the ConfigStorage object to be saved."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void configureUiConfig(StorageManager storage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ConfigStorage configStorage \u003d storage.getConfig();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        configStorage.setUiConfig(uiConfig);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage.setConfig(configStorage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Calls \u0026 updates the required functions for updating LogConfig values."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storage StorageManager object that contains the ConfigStorage object to be saved."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void configureLogConfig(StorageManager storage) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ConfigStorage configStorage \u003d storage.getConfig();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        configStorage.setLogConfig(logConfig);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage.setConfig(configStorage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Lists the configurations stored in various config classes."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storage StorageManager object that contains configuration values stored in ConfigStorage."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void viewConfig(StorageManager storage) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ConfigStorage configStorage \u003d storage.getConfig();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        uiConfig \u003d configStorage.getUiConfig();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logConfig \u003d configStorage.getLogConfig();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        MESSAGE_VIEW +\u003d \"+ UI Configurations:\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        MESSAGE_VIEW +\u003d uiConfig.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        MESSAGE_VIEW +\u003d \"\\n+ Logging Configurations:\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        MESSAGE_VIEW +\u003d logConfig.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructs the command result output to be shown to the user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public CommandResult execute(ModelManager model, StorageManager storage) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        switch (configType) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case UI:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                configureUiConfig(storage);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS, configType.toString()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case LOG:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                configureLogConfig(storage);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS, configType.toString()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case VIEW:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                viewConfig(storage);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new CommandResult(MESSAGE_VIEW);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 114
    }
  },
  {
    "path": "src/main/java/cube/logic/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * This class supports commands related to delete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Use enums to specify the states of the food to be deleted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic enum DeleteBy {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tINDEX, NAME, TYPE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate int deleteIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tprivate String deleteDescription;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tprivate DeleteBy param;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String MESSAGE_SUCCESS_SINGLE \u003d \"Nice! I\u0027ve removed this food:\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ \"%1$s\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t    + \"Now you have %2$s food in the list.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String MESSAGE_SUCCESS_MULTIPLE \u003d \"Nice! I\u0027ve removed this type:\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t+ \"%1$s\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t+ \"This type contains \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t+ \"%2$s food items\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t+ \"Now you have %3$s food in the list.\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * The default constructor, empty since parameters are required to perform delete command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic DeleteCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * The constructor for delete using index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param index The index of the food to be deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param param The parameter is used to specify the type of deletion."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic DeleteCommand(int index, String param) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.deleteIndex \u003d index - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tthis.param \u003d DeleteBy.valueOf(param);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * The constructor for delete using food name or food type."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param deleteDescription The food name or food type to be deleted."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param param The parameter is used to specify the type of deletion."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic DeleteCommand(String deleteDescription, String param) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tthis.deleteDescription \u003d deleteDescription;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tthis.param \u003d DeleteBy.valueOf(param);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * The class removes the food the user wishes to remove."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list The food list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param storage The storage we have."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @return The Feedback to User for Delete Command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @throws CommandException If deletion is unsuccessful."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CommandResult execute(ModelManager model, StorageManager storage) throws CommandException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tFoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tFood toDelete;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tswitch (param) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tcase INDEX:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tCommandUtil.requireValidIndex(list, deleteIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\ttoDelete \u003d list.get(deleteIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tlist.removeIndex(deleteIndex);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tstorage.storeFoodList(list);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new CommandResult(String.format(MESSAGE_SUCCESS_SINGLE, toDelete, list.size()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tcase NAME:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tCommandUtil.requireValidName(list, deleteDescription);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\ttoDelete \u003d list.get(deleteDescription);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tlist.removeName(deleteDescription);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tstorage.storeFoodList(list);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new CommandResult(String.format(MESSAGE_SUCCESS_SINGLE, toDelete, list.size()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tcase TYPE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tCommandUtil.requireValidType(list, deleteDescription);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tint count \u003d list.removeType(deleteDescription);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tstorage.storeFoodList(list);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new CommandResult(String.format(MESSAGE_SUCCESS_MULTIPLE, deleteDescription, count, list.size()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 30,
      "ZKathrynx": 42,
      "LL-Pengfei": 23
    }
  },
  {
    "path": "src/main/java/cube/logic/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * The command signals exit to main process"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String MESSAGE_SUCCESS \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Signals that the user wishes to exit programme."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @return True to signal exit programme."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Provides exit feedback to user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list The food list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param storage The current Storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @return The message feedback to user before Programme Exit."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CommandResult execute(ModelManager model, StorageManager storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn new CommandResult(MESSAGE_SUCCESS, false, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 26,
      "LL-Pengfei": 12
    }
  },
  {
    "path": "src/main/java/cube/logic/command/FindCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList.SortType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Enum to indicate the type of delete."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public enum FindBy {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        INDEX, NAME, TYPE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    SortType sortType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    private int findIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    private String findDescription;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    private FindBy param;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    private final String MESSAGE_SUCCESS_SINGLE \u003d \"This is the food you want to find:\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            + \"%1$s\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    private final String MESSAGE_SUCCESS_MULTIPLE \u003d \"There are in total %1$s food you want to find:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            + \"%2$s\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public FindCommand() {}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Constructor for delete using index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param index the index to be deleted."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param param the parameter to indicate type of deletion."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public FindCommand(int index, String param) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.findIndex \u003d index - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.param \u003d FindBy.valueOf(param);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Constructor for delete using food name or food type."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param description the food name or food type to be deleted."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param param the parameter to indicate type of deletion."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public FindCommand(String description, String param){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.findDescription \u003d description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.param \u003d FindBy.valueOf(param);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Constructor for delete using food name or food type."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param description the food name or food type to be deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param param the parameter to indicate type of deletion."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public FindCommand(String description, String param, SortType sortType){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.findDescription \u003d description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.param \u003d FindBy.valueOf(param);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.sortType \u003d sortType;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public CommandResult execute(ModelManager model, StorageManager storage) throws CommandException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        switch (param) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            case INDEX:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                CommandUtil.requireValidIndex(list, findIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_SINGLE, list.get(findIndex), list.size()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            case NAME:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                CommandUtil.requireValidName(list, findDescription);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_SINGLE, list.get(findDescription), list.size()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            case TYPE:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                CommandUtil.requireValidType(list, findDescription);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                FoodList result \u003d new FoodList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                int count \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                for (int i \u003d 0; i \u003c list.size(); i ++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                    if (list.get(i).getType()!\u003dnull \u0026\u0026 list.get(i).getType().equals(findDescription)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                        result.add(list.get(i));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                        count ++;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                if (sortType !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                    result.sort(sortType);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_MULTIPLE, count,result,list.size()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 10,
      "ZKathrynx": 83
    }
  },
  {
    "path": "src/main/java/cube/logic/command/GenerateRevenueCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * GenerateRevenueCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Support commands related to generating revenue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// need to add support for adding revenue at the start and update revenue later (cmd)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// need to change the name to revenue for user friendliness"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// updated by LL-Pengfei"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// need to store revenue in persistent storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "// need to make the revenue (individual rev) updated when selling specific food"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.logic.command.util.CommandUtil;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * This class supports commands related to generating revenue."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class GenerateRevenueCommand extends Command {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Use enums to specify the states of the object whose revenue is to be generated."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public enum GenerateRevenueBy {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        INDEX, NAME, TYPE, ALL"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private int generateRevenueIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private String generateRevenueDescription;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private GenerateRevenueCommand.GenerateRevenueBy param;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private final String MESSAGE_SUCCESS_ALL \u003d \"Nice! I\u0027ve generated the revenue for all the stocks:\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"$ %1$s\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"In total, you have %2$s food in the list.\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private final String MESSAGE_SUCCESS_SINGLE \u003d \"Nice! I\u0027ve generated the revenue for this food:\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"$ %1$s\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"In total, you have %2$s food in the list.\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private final String MESSAGE_SUCCESS_MULTIPLE \u003d \"Nice! I\u0027ve generated the revenue for this type:\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"$ %1$s\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"This type contains \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"%2$s food items\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            + \"In total, you have %3$s food in the list.\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The default constructor, empty since parameters are required to perform generating revenue command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public GenerateRevenueCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for generating the total revenue."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param param The parameter is used to specify the type of generating revenue."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public GenerateRevenueCommand(String param) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.param \u003d GenerateRevenueCommand.GenerateRevenueBy.valueOf(param);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for generating revenue using index."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param index The index of the food whose revenue is to be generated."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param param The parameter is used to specify the type of generating revenue."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public GenerateRevenueCommand(int index, String param) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.generateRevenueIndex \u003d index - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.param \u003d GenerateRevenueCommand.GenerateRevenueBy.valueOf(param);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The constructor for generating revenue using food name or food type."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param GenerateRevenueDescription The food name or food type whose revenue is to be generated."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param param The parameter is used to specify the type of generating revenue."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public GenerateRevenueCommand(String GenerateRevenueDescription, String param) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.generateRevenueDescription \u003d GenerateRevenueDescription;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.param \u003d GenerateRevenueCommand.GenerateRevenueBy.valueOf(param);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * The class generates the revenue for food whose revenue the user wishes to generate."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param list The food list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param storage The storage we have."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @return The Feedback to User for Generate Revenue Command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @throws CommandException If Generating Revenue is unsuccessful."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public CommandResult execute(ModelManager model, StorageManager storage) throws CommandException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        FoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        Food toGenerateRevenue;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        switch (param) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case ALL:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_ALL, Food.getRevenue(), list.size()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case INDEX:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                CommandUtil.requireValidIndex(list, generateRevenueIndex);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                toGenerateRevenue \u003d list.get(generateRevenueIndex);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_SINGLE, toGenerateRevenue.getFoodRevenue(), list.size()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case NAME:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                CommandUtil.requireValidName(list, generateRevenueDescription);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                toGenerateRevenue \u003d list.get(generateRevenueDescription);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_SINGLE, toGenerateRevenue.getFoodRevenue(), list.size()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case TYPE:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                CommandUtil.requireValidType(list, generateRevenueDescription);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                double totalRevenue \u003d 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                int count \u003d 0, listSize \u003d list.size(); //listSize stored in a variable to speed up the loop below (one time access)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                for (int i \u003d 0; i \u003c listSize; ++i) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    if ((list.get(i).getType() !\u003d null) \u0026\u0026 (list.get(i).getType().equals(generateRevenueDescription))) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        totalRevenue \u003d totalRevenue + list.get(i).getFoodRevenue();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                        ++count;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new CommandResult(String.format(MESSAGE_SUCCESS_MULTIPLE, totalRevenue, count, listSize));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 123
    }
  },
  {
    "path": "src/main/java/cube/logic/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String MESSAGE_SUCCESS \u003d \"Currently we support the following commands: (all command ignore cases)\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ \"Manipulate food:\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027add \u003cfood name\u003e -t \u003cfood type\u003e -p \u003cprice\u003e -s \u003cstock\u003e -e \u003cexpiry date\u003e\u0027 \") + \"add a new food product with all details/description\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027generaterevenue -all OR -i \u003cnumber\u003e OR -n \u003cfood name\u003e OR -t \u003cfood type\u003e\u0027\") + \"generate the revenue for the specified food product in the list, -all for total revenue\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027delete -i \u003cnumber\u003e OR -n \u003cfood name\u003e OR -t \u003cfood type\u003e\u0027\") + \"delete the specified food product in the list\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027sold -n \u003cfood name\u003e -q \u003cquantity\u003e\u0027\") + \"marks quantity q of product n sold\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ \"Show inventory:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027list -sort \u003csort type\u003e\u0027\") + \"shows the list of food products, sort type can be expiry/name/stock\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027find -i \u003cnumber\u003e OR -n \u003cfood name\u003e OR -t \u003cfood type\u003e -sort \u003csort type\u003e\u0027\") + \"find specific food using index/name/type, sort type is only available when finding by type, it can be expiry/name/stock\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027reminder\u0027\") + \"show the list of food products that are low on stock and/or are approaching its expiry date\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ \"Miscellaneous:\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027batch -i \u003cfilename\u003e OR -o \u003cfilename\u003e\u0027\") + \"batch imports or outputs the list of food products as the filename in CSV.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027config VIEW\u0027\") + \"lists all the stored user configurations.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027config UI -h \u003cheight\u003e -w \u003cwidth\u003e\u0027\") + \"updates the default window size configuration with specified values.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027config LOG -c \u003clog count\u003e -s \u003csize in MB\u003e -l \u003clevel\u003e\u0027\") + \"updates the logging configuration with specified values.\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027bye\u0027 OR \u0027exit\u0027 OR \u0027quit\u0027\") + \"to exit the programme\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t+ String.format(\"%1$-50s\", \"  \u0027help\u0027\") + \"to show a list of available command\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Shows the list of available command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param list the list of food products."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param storage storage of Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CommandResult execute(ModelManager model, StorageManager storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn new CommandResult(MESSAGE_SUCCESS, true, false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 7,
      "kuromono": 4,
      "tygq13": 25,
      "ZKathrynx": 1,
      "LL-Pengfei": 2
    }
  },
  {
    "path": "src/main/java/cube/logic/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * The command list all the food."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList.SortType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic SortType sortType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String MESSAGE_SUCCESS \u003d \"Here are the food in your list: \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t+ \"%1$s\\n\" // todo: toString for list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t+ \"The total revenue so far is $ %2$f\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Default constructor of ListCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic ListCommand() {}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Constructor with one argument."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param sortType The type of sorting used for food list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic ListCommand (SortType sortType) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.sortType \u003d sortType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param list The food list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param storage The current Storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @return The message feedback to user before Programme Exit."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CommandResult execute(ModelManager model, StorageManager storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tFoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (sortType !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tlist.sort(sortType);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn new CommandResult(String.format(MESSAGE_SUCCESS, list, Food.getRevenue()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 51
    }
  },
  {
    "path": "src/main/java/cube/logic/command/ReminderCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class ReminderCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    int daysToExpiry;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    int stockIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public ReminderCommand(int daysToExpiry, int stockIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.daysToExpiry \u003d daysToExpiry;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.stockIndex \u003d stockIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private String MESSAGE_SUCCESS \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private void buildExpiryReminder(FoodList list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        MESSAGE_SUCCESS +\u003d \"Here are the upcoming expiry dates:\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            Food food \u003d list.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            MESSAGE_SUCCESS +\u003d String.format(\"%1$s due in %2$s\\n\", food.getName(), ParserUtil.parseDateToString(food.getExpiryDate()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        MESSAGE_SUCCESS +\u003d \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private void buildStockReminder(FoodList list) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        MESSAGE_SUCCESS +\u003d \"Here are the food products that are low in stock:\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            Food food \u003d list.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            MESSAGE_SUCCESS +\u003d String.format(\"%1$s : %2$s left\\n\", food.getName(), food.getStock());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Shows the list of food products that are low on stock (less than quantity of 5)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * or approaching/nearing its expiry date (by a week or lesser)."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param list the list of food products"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param storage storage of Cube"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public CommandResult execute(ModelManager model, StorageManager storage) throws CommandException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        FoodList stockReminder \u003d new FoodList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        FoodList expiryReminder \u003d new FoodList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        cal.setTime(new Date()); // get current time"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        cal.add(Calendar.DATE, daysToExpiry); // deadline within 7 days"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Food food \u003d list.get(i);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Date expiryDate \u003d food.getExpiryDate();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            int stock \u003d food.getStock();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (expiryDate !\u003d null \u0026\u0026 expiryDate.before(cal.getTime())) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                expiryReminder.add(food);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (stock !\u003d 0 \u0026\u0026 stock \u003c stockIndex ) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                stockReminder.add(food);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        buildExpiryReminder(expiryReminder);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        buildStockReminder(stockReminder);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        return new CommandResult(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 47,
      "tygq13": 30
    }
  },
  {
    "path": "src/main/java/cube/logic/command/SoldCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.Sale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.SalesHistory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandUtil;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SoldCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tString foodName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tint quantity;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tDate soldDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tFood toSold;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String MESSAGE_SUCCESS \u003d \"%1$d of %2$s have been sold with $%3$f\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t+ \"you have earn $%4$f\";\t"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic SoldCommand(String foodName, int quantity) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis(foodName, quantity, new Date());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic SoldCommand(String foodName, int quantity, Date soldDate) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.foodName \u003d foodName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.quantity \u003d quantity;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.soldDate \u003d soldDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Acquires the food to sold for this command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param list The food list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @throws CommandException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void obtainFoodSold(FoodList list) throws CommandException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tCommandUtil.requireValidName(list, foodName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\ttoSold \u003d list.get(foodName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * If parameters are valid, this method will generate a sale record and adjust the quantity"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * of food toSold. Finally, changes sale record and food will be saved in storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param list The food list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param storage The storage we have."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @return The Feedback to User for Delete Command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @throws CommandException If deletion is unsuccessful."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CommandResult execute(ModelManager model, StorageManager storage) throws CommandException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t//TODO: check if the user has set price and cost"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tFoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSalesHistory salesHistory \u003d model.getSalesHistory();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tobtainFoodSold(list);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tCommandUtil.requireValidQuantity(toSold, quantity);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tint originalQty \u003d toSold.getStock();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tdouble revenue \u003d quantity * toSold.getPrice();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\ttoSold.setStock(originalQty - quantity);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// old function"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tFood.updateRevenue(Food.getRevenue() + revenue);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// new function"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tdouble profit \u003d revenue - quantity * toSold.getCost();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSale saleRecord \u003d new Sale(foodName, quantity, revenue, profit, soldDate);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tsalesHistory.add(saleRecord);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tstorage.storeSalesHistory(salesHistory);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tstorage.storeRevenue(Food.getRevenue());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn new CommandResult(String.format(MESSAGE_SUCCESS, quantity, foodName, revenue, profit));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 74
    }
  },
  {
    "path": "src/main/java/cube/logic/command/exception/CommandErrorMessage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class CommandErrorMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String FOOD_ALREADY_EXISTS"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The food already exists\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String FOOD_NOT_EXISTS"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The food does not exists\";\t"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String INVALID_QUANTITY_SOLD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The quantity sold is negative or too large\";\t"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String INVALID_INDEX"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The index is out of the range of food list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static final String INVALID_TYPE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The food type does not exist\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 14
    }
  },
  {
    "path": "src/main/java/cube/logic/command/exception/CommandException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class CommandException extends CubeException"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CommandException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tsuper();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Constructs the exception with message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param message the message to be printed when exception happens."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 23
    }
  },
  {
    "path": "src/main/java/cube/logic/command/util/CommandResult.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * The class represents the result of a command execution, it is used to show execution feedback for ui and gui."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command.util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static java.util.Objects.requireNonNull;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private final boolean showHelp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private final boolean exit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified fields."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        this.feedbackToUser \u003d requireNonNull(feedbackToUser);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        this.showHelp \u003d showHelp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * and other fields set to their default value."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        this(feedbackToUser, false, false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public boolean isShowHelp() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        return showHelp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    // used for Junit test for commands"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        if (!(other instanceof CommandResult)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult otherCommandResult \u003d (CommandResult) other;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        return feedbackToUser.equals(otherCommandResult.feedbackToUser)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 61
    }
  },
  {
    "path": "src/main/java/cube/logic/command/util/CommandUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * This class of helper functions for command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command.util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandErrorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class CommandUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * The class checks that a given food name is not in the food list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param list The food list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param foodName The food name to check."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @throws CommandException If the given food name is inside the food list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public static void requireNameNotExists(FoodList list, String foodName) throws CommandException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        if (list.existsName(foodName)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            throw new CommandException(CommandErrorMessage.FOOD_ALREADY_EXISTS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * The class checks that a given food name is in the food list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param list The food list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param foodName The food name to check."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @throws CommandException If the given food name is not inside the food list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public static void requireValidName(FoodList list, String foodName) throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        if (!list.existsName(foodName)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            throw new CommandException(CommandErrorMessage.FOOD_NOT_EXISTS);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * The class checks that a given food tyep is in the food list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param list The food list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param foodType The food type to check."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @throws CommandException If the given food type is not inside the food list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public static void requireValidType(FoodList list, String foodType) throws CommandException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        if (!list.existsType(foodType)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            throw new CommandException(CommandErrorMessage.INVALID_TYPE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * The class checks that a given index is valid."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param list The food list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param index The food index to check."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @throws CommandException If the given index is invalid."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public static void requireValidIndex(FoodList list, int index) throws CommandException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            throw new CommandException(CommandErrorMessage.INVALID_INDEX);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * The class checks that a given index is valid."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param list The food list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param quantity The food quantity to check."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @throws CommandException If the given index is invalid."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public static void requireValidQuantity(Food food, int quantity) throws CommandException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tif (quantity \u003c 0 || quantity \u003e food.getStock()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \t\tthrow new CommandException(CommandErrorMessage.INVALID_QUANTITY_SOLD);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 80
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/AddCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " * Parse add food command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class AddCommandParser implements ParserPrototype\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic AddCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint foodNameIndex \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint foodTypeIndex \u003d -1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint priceIndex \u003d -1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint stockIndex \u003d -1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint expiryDateIndex \u003d -1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-t\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfoodTypeIndex \u003d i;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-p\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tpriceIndex \u003d i;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-s\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tstockIndex \u003d i;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-e\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\texpiryDateIndex \u003d i;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tString foodName \u003d ParserUtil.findFullString(args,foodNameIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (foodName.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tFood tempFood \u003d new Food(foodName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (foodTypeIndex !\u003d -1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\ttempFood.setType(ParserUtil.findFullString(args,foodTypeIndex+1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (priceIndex !\u003d -1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\ttempFood.setPrice(Integer.parseInt(args[priceIndex+1]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (stockIndex !\u003d -1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\ttempFood.setStock(Integer.parseInt(args[stockIndex+1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (expiryDateIndex !\u003d -1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\ttempFood.setExpiryDate(ParserUtil.parseStringToDate(args[expiryDateIndex+1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn new AddCommand(tempFood);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 9,
      "ZKathrynx": 44
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/BatchCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.command.BatchCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class BatchCommandParser implements ParserPrototype\u003cBatchCommand\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public BatchCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (args.length \u003c 3) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        switch (args[1]) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        case \"-o\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return new BatchCommand(args[2], \"EXPORT\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        case \"-i\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return new BatchCommand(args[2], \"IMPORT\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 22
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/ConfigCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.command.ConfigCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.command.ConfigCommand.ConfigType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.UiConfig;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.LogConfig;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class ConfigCommandParser implements ParserPrototype\u003cConfigCommand\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ConfigCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        int configTypeIndex \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ConfigType configType \u003d ConfigType.valueOf(args[configTypeIndex]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        switch (configType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case UI:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                int heightIndex \u003d -1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                int widthIndex \u003d -1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                for (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    if (args[i].equals(\"-h\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                        heightIndex \u003d i;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    if (args[i].equals(\"-w\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                        widthIndex \u003d i;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                UiConfig uiConfig \u003d new UiConfig();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                if (heightIndex !\u003d -1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    uiConfig.setWindowHeight(Double.parseDouble(args[heightIndex + 1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                if (widthIndex !\u003d -1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    uiConfig.setWindowWidth(Double.parseDouble(args[widthIndex + 1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new ConfigCommand(configType, uiConfig);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case LOG:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                int maxFileCountIndex \u003d -1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                int maxFileSizeIndex \u003d -1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                int currentLogLevelIndex \u003d -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                for (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    if (args[i].equals(\"-c\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                        maxFileCountIndex \u003d i;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    if (args[i].equals(\"-s\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                        maxFileSizeIndex \u003d i;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    if (args[i].equals(\"-l\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                        currentLogLevelIndex \u003d i;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                LogConfig logConfig \u003d new LogConfig();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                if (maxFileCountIndex !\u003d -1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    logConfig.setMaxFileCount(Integer.parseInt(args[maxFileCountIndex + 1]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                if (maxFileSizeIndex !\u003d -1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    logConfig.setMaxFileSizeMB(Integer.parseInt(args[maxFileSizeIndex + 1]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                if (currentLogLevelIndex !\u003d -1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    logConfig.setCurrentLogLevel(args[currentLogLevelIndex + 1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new ConfigCommand(configType, logConfig);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            case VIEW:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                return new ConfigCommand(configType);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 75
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/DeleteCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class DeleteCommandParser implements ParserPrototype\u003cDeleteCommand\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic DeleteCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (args.length \u003c 3) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tswitch (args[1]) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tcase \"-i\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new DeleteCommand(Integer.parseInt(args[2]),\"INDEX\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tcase \"-n\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new DeleteCommand(String.join(\" \", Arrays.copyOfRange(args,2,args.length)),\"NAME\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tcase \"-t\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new DeleteCommand(String.join(\" \", Arrays.copyOfRange(args,2,args.length)),\"TYPE\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 8,
      "ZKathrynx": 18
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/FindCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.command.FindCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class FindCommandParser implements ParserPrototype\u003cFindCommand\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public FindCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        if (args.length \u003c 3) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            throw new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        switch (args[1]) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            case \"-i\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                return new FindCommand(Integer.parseInt(args[2]),\"INDEX\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            case \"-n\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                return new FindCommand(new ParserUtil().findFullString(args,2),\"NAME\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            case \"-t\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                String type  \u003d new ParserUtil().findFullString(args,2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                int sortIndex \u003d -1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                for (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                    if (args[i].equals(\"-sort\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                        sortIndex \u003d i;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                if (sortIndex!\u003d-1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                    return new FindCommand(type,\"TYPE\", FoodList.SortType.valueOf(args[sortIndex+1].toUpperCase()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "                return new FindCommand(type,\"TYPE\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 1,
      "ZKathrynx": 34
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/GenerateRevenueCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.logic.command.GenerateRevenueCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class GenerateRevenueCommandParser implements ParserPrototype\u003cGenerateRevenueCommand\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public GenerateRevenueCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            throw new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        switch (args[1]) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case \"-all\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new GenerateRevenueCommand(\"ALL\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case \"-i\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new GenerateRevenueCommand(Integer.parseInt(args[2]),\"INDEX\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case \"-n\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new GenerateRevenueCommand(String.join(\" \", Arrays.copyOfRange(args,2,args.length)),\"NAME\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "            case \"-t\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "                return new GenerateRevenueCommand(String.join(\" \", Arrays.copyOfRange(args,2,args.length)),\"TYPE\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 28
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/ListCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList.SortType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ListCommandParser implements ParserPrototype\u003cListCommand\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic ListCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (args.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn new ListCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (args.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn new ListCommand(SortType.valueOf(args[2].toUpperCase()));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 11,
      "ZKathrynx": 8
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// design pattern copied from address book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// reference: https://github.com/nusCS2113-AY1920S1/addressbook-level3/tree/master/src/main/java/seedu/address/logic/parser"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " * Parse user command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Parse user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Format:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * add foodName -t foodType -p price -s stock -e expiryDate"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * list -sort expiry/name/stock"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * find -i index / -n foodName / -t foodType --sort expiry/name/stock"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * generaterevenue -i index / -n foodName / -t foodType"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * delete -i index / -n foodName / -t foodType"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * sold -n foodName -q quantity"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * reminder"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * help"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * bye / exit / quit"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Assumption: no repetitive parameters given."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @param fullCommand the command that user inputs."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @return corresponding command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic static Command parse (String fullCommand) throws ParserException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tString[] inputs \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tString command \u003d inputs[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tcommand \u003d command.trim().toLowerCase();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tswitch (command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\tcase \"reminder\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\treturn new ReminderCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"add\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new AddCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new ListCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tcase \"find\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new FindCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\tcase \"generaterevenue\" :"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\treturn new GenerateRevenueCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"delete\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new DeleteCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"sold\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\treturn new SoldCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\tcase \"batch\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t\treturn new BatchCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\tcase \"config\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t\treturn new ConfigCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"help\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\treturn new HelpCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"exit\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"quit\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\treturn new ExitCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tthrow new ParserException(ParserErrorMessage.INVALID_COMMAND);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "parvathi14": 2,
      "kuromono": 4,
      "tygq13": 22,
      "ZKathrynx": 36,
      "LL-Pengfei": 4
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/ParserPrototype.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public interface ParserPrototype\u003cT extends Command\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Parses {@code userInput} into a command and returns it."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @throws ParserException if {@code userInput} does not conform the expected format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    T parse(String[] userInput) throws ParserException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 13,
      "ZKathrynx": 4
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/ParserUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ParserUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Returns the string of date by parsing a date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param date the date to be parsed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @return the string of date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic static String parseDateToString(Date date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tformatter.setTimeZone(TimeZone.getTimeZone(\"GMT-8:00\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn formatter.format(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Returns a Date object by parsing the date String."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Time zone is set as Singapore time by default."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @param dateString the String describing the date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @return the date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @throws CubeException exception occurs when unable to parse."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic static Date parseStringToDate(String dateString) throws ParserException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (dateString \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tSimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tformatter.setTimeZone(TimeZone.getTimeZone(\"GMT-8:00\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tDate date \u003d formatter.parse(dateString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\treturn date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new ParserException(ParserErrorMessage.INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Find the full name/type until next parameter/end of input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @param inputs tokens containing the full string to be found."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @param index starting index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @return the full name/type until next parameter/end of input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic static String findFullString (String[] inputs, int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tString fullString \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor (int i \u003d index; i \u003c inputs.length; i ++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif(inputs[i].matches(\"-(.*)\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif(i !\u003d index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfullString +\u003d \" \";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tfullString +\u003d inputs[i];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn fullString;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 23,
      "ZKathrynx": 50
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/ReminderCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import cube.logic.command.ReminderCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import cube.logic.command.SoldCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class ReminderCommandParser implements ParserPrototype\u003cReminderCommand\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public ReminderCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        int daysToExpiryIndex \u003d -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        int stockIndex \u003d -1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        for (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (args[i].equals(\"-d\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                daysToExpiryIndex \u003d i;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (args[i].equals(\"-s\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                stockIndex \u003d i;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if(daysToExpiryIndex \u003d\u003d -1 \u0026\u0026 stockIndex !\u003d -1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            return new ReminderCommand(7, Integer.parseInt(args[stockIndex+1]));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }else if (stockIndex \u003d\u003d -1 \u0026\u0026 daysToExpiryIndex !\u003d -1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            return new ReminderCommand(Integer.parseInt(args[daysToExpiryIndex+1]), 5);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } else if (daysToExpiryIndex \u003d\u003d -1 \u0026\u0026 stockIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            return new ReminderCommand(7,5);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return new ReminderCommand(Integer.parseInt(args[daysToExpiryIndex+1]), Integer.parseInt(args[stockIndex+1]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 32
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/SoldCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.SoldCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserErrorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.exception.ParserException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SoldCommandParser implements ParserPrototype\u003cSoldCommand\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic SoldCommand parse(String[] args) throws ParserException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint foodNameIndex \u003d -1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint quantityIndex \u003d -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-n\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfoodNameIndex \u003d i;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-q\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tquantityIndex \u003d i;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif(foodNameIndex \u003d\u003d -1 || quantityIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new ParserException(ParserErrorMessage.NOT_ENOUGH_PARAMETER);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn new SoldCommand(args[foodNameIndex+1],Integer.parseInt(args[quantityIndex+1]));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 8,
      "ZKathrynx": 17
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/exception/ParserErrorMessage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.logic.parser.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class ParserErrorMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public static final String NOT_ENOUGH_PARAMETER"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            \u003d \"OOPS!!! The parameter you input is not enough\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public static final String INVALID_DATE_FORMAT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            \u003d \"OOPS!!! The date format is invalid. Please specify date in \u0027dd/mm/yy\u0027\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public static final String INVALID_COMMAND"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            \u003d \"OOPS!!! The command is invalid. Enter \u0027help\u0027 to view the list of command\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZKathrynx": 10
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/exception/ParserException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.logic.parser.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class ParserException extends CubeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public ParserException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Constructs the exception with message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param message the message to be printed when exception happens."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public ParserException(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZKathrynx": 22
    }
  },
  {
    "path": "src/main/java/cube/model/ModelManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.SalesHistory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ModelManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate FoodList foodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate SalesHistory salesHistory;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Default constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Creates a new instance of Food \u0026 Revenue Storage Classes."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic ModelManager() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.salesHistory \u003d new SalesHistory();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Constructor with 2 arguments."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Creates a new instance of Food \u0026 Revenue Storage Classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic ModelManager(FoodList foodList, SalesHistory salesHistory) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.foodList \u003d foodList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.salesHistory \u003d salesHistory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic FoodList getFoodList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn foodList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void setFoodList(FoodList foodList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodList \u003d foodList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic SalesHistory getSalesHistory() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn salesHistory;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 4,
      "tygq13": 36
    }
  },
  {
    "path": "src/main/java/cube/model/exception/ModelException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.model.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class ModelException extends CubeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public ModelException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * Constructs the exception with message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     * @param message the message to be printed when exception happens."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public ModelException(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZKathrynx": 22
    }
  },
  {
    "path": "src/main/java/cube/model/exception/ModelExceptionMessage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.model.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class ModelExceptionMessage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public static final String NOT_ENOUGH_PARAMETER"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            \u003d \"OOPS!!! The parameter you input is not enough\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public static final String INVALID_DATE_FORMAT"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            \u003d \"OOPS!!! The date format is invalid. Please specify date in \u0027dd/mm/yy\u0027\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public static final String INVALID_NAME"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "            \u003d \"OOPS!!! The name should only contains alphanumeric characters and spaces, and cannot be blank or start with \u0027-\u0027\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZKathrynx": 10
    }
  },
  {
    "path": "src/main/java/cube/model/food/ExpiryDate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class ExpiryDate {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 1,
      "ZKathrynx": 3
    }
  },
  {
    "path": "src/main/java/cube/model/food/Food.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class Food {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t//Identity fields"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected double price;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprotected double cost;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected int stock;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected Date expiryDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tprotected double foodRevenue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t//Data fields"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tprotected static double revenue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Calls another constructor with (null) as argument."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Food() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t    this(null);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Constructor with one argument."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param name Name of the food product."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Food(String name) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.name \u003d name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tthis.foodRevenue \u003d 350; //ad hoc"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the name of the food product."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the name of the food product."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic String getName() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn name;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets the type of the product."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param type The type of the product."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setType(String type) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.type \u003d type;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the type of the product."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the type of the product."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic String getType() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn type;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets/changes the price of the product."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param price The price of the product."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setPrice (double price) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.price \u003d price;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the price of the product."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the price of the product."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic double getPrice() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn price;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets/updates the expiry date of the product."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param expiryDate The expiry date of the product."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setExpiryDate (Date expiryDate) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.expiryDate \u003d expiryDate;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the expiry date of the product."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the expiry date of the product."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Date getExpiryDate() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn expiryDate;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Updates the total revenue made from selling the product."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param newRevenue New total revenue made from selling the product."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic static void updateRevenue(double newRevenue) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\trevenue \u003d newRevenue;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the revenue earned from selling the product."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the revenue earned from selling the product."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic static double getRevenue() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn revenue;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic double getFoodRevenue() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\treturn foodRevenue;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Updates the quantity of the product available in stock."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param newStock New quantity of product available."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void setStock(int newStock) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tstock \u003d newStock;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the quantity of the product available in stock."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return Quantity of product in stock."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int getStock() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn stock;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void setCost(double cost) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.cost \u003d cost;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic double getCost() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn cost;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Shows that product already exists in the inventory."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return true"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic boolean exists(String foodName) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tif (foodName \u003d\u003d this.name) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Casts the food product to String type."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the String printout of the food product."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn name + \"\\n  Type: \" + type +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\"\\n  Price: $\" + price +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Stock: \" + stock +"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\"\\n  Expiry Date: \" + expiryDate;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t// for Junit test use"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean equals(Object other) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (other instanceof Food) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tFood b \u003d (Food) other;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn name.equals(b.name)"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 ((type \u003d\u003d null \u0026\u0026 b.type \u003d\u003d null) || (type !\u003d null \u0026\u0026 type.equals(b.type)))"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 price \u003d\u003d b.price"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 cost \u003d\u003d b.cost"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 stock \u003d\u003d b.stock"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 expiryDate \u003d\u003d b.expiryDate;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn false;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 143,
      "kuromono": 1,
      "tygq13": 52,
      "ZKathrynx": 4,
      "LL-Pengfei": 6
    }
  },
  {
    "path": "src/main/java/cube/model/food/FoodList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FoodList{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tprivate ArrayList\u003cFood\u003e foodArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic enum SortType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tEXPIRY, NAME, STOCK"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic FoodList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic FoodList(ArrayList\u003cFood\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList \u003d list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void add(Food food) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList.add(food);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t// public getter to allow JSON read/write to work"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic ArrayList\u003cFood\u003e getFoodList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn this.foodArrayList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Food get(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn foodArrayList.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Food get(String foodName) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tfor(Food food : foodArrayList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tif (food.getName().equals(foodName)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\treturn food;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic void removeIndex(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tfoodArrayList.remove(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic void removeName(String foodName) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor(int i \u003d 0; i \u003c foodArrayList.size(); i ++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (foodArrayList.get(i).getName().equals(foodName)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfoodArrayList.remove(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic int removeType(String foodType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint count \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor(int i \u003d 0; i \u003c foodArrayList.size(); i ++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (foodArrayList.get(i).getType()!\u003dnull \u0026\u0026 foodArrayList.get(i).getType().equals(foodType)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfoodArrayList.remove(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tcount ++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn count;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic boolean existsName(String foodName) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tfor(Food food : foodArrayList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tif (food.getName().equals(foodName)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\treturn true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic boolean existsType(String foodType) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor(Food food : foodArrayList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (food.getType() !\u003d null \u0026\u0026 food.getType().equals(foodType)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn foodArrayList.size();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void sort(SortType sortType) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tswitch(sortType) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase EXPIRY:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tCollections.sort(foodArrayList, new SortByExpiry());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase NAME:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tCollections.sort(foodArrayList, new SortByName());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase STOCK:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\tCollections.sort(foodArrayList, new SortByStock());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tString result \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tfor(int i \u003d 0; i \u003c foodArrayList.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tresult +\u003d String.format(\"%1$d. %2$s.\\n\", i + 1, foodArrayList.get(i));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t// for Junit test use"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean equals(Object other) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t    return other \u003d\u003d this // short circuit if same object"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t            || (other instanceof FoodList // instanceof handles nulls"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t                    \u0026\u0026 foodArrayList.equals(((FoodList) other).foodArrayList));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 10,
      "tygq13": 78,
      "ZKathrynx": 31
    }
  },
  {
    "path": "src/main/java/cube/model/food/FoodUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "class SortByName implements Comparator\u003cFood\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int compare(Food a, Food b) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn a.getName().compareTo(b.getName());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "class SortByExpiry implements Comparator\u003cFood\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int compare(Food a, Food b) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tDate first \u003d a.getExpiryDate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tDate second \u003d b.getExpiryDate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (first \u003d\u003d null \u0026\u0026 second \u003d\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn first \u003d\u003d null ? 1 : (second \u003d\u003d null) ? -1 : first.compareTo(second);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "class SortByStock implements Comparator\u003cFood\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int compare(Food a, Food b) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn a.getStock() \u003c b.getStock() ? -1 : (a.getStock() \u003e b.getStock()) ? 1 : 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 28
    }
  },
  {
    "path": "src/main/java/cube/model/food/Name.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " * Represents a food\u0027s name in the food list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " * Guarantees: immutable; is valid"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class Name {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public Name (String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        return other \u003d\u003d this //short circuit if same object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "               || (other instanceof Name \u0026\u0026 name.equals(((Name)other).getName()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 1,
      "ZKathrynx": 30
    }
  },
  {
    "path": "src/main/java/cube/model/food/Price.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class Price {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 4
    }
  },
  {
    "path": "src/main/java/cube/model/food/Stock.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class Stock {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 4
    }
  },
  {
    "path": "src/main/java/cube/model/food/Type.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class Type {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 4
    }
  },
  {
    "path": "src/main/java/cube/model/sale/Sale.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * A sale object represents a transaction."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.sale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonIgnore;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class Sale implements Comparable\u003cSale\u003e{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprotected String foodName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprotected int quantitySold;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprotected double profit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprotected double revenue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprotected Date soldDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Sale(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis(null, 0, 0, 0, null);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * Constructor with four arguments."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param quantitySold The quantitySold sold in this sale."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param profit The profit earned in this sale."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param revenue The revenue earned in this sale."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t * @param soldDate The date of sale."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Sale(String foodName, int quantitySold, double revenue, double profit, Date soldDate) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.foodName \u003d foodName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.quantitySold \u003d quantitySold;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.revenue \u003d revenue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.profit \u003d profit;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.soldDate \u003d soldDate;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic String getName() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn foodName;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int getQuantity() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn quantitySold;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic double getRevenue() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn revenue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic double getProfit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn profit;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Date getDate() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn soldDate;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn \"  Quantity Sold: \" + quantitySold +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\"\\n  Revenue: $\" + revenue +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\"\\n  Profit: \" + profit +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\"\\n  Transaction Date: \" + soldDate;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int compareTo(Sale b) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// expand the list of comparison to reduce chance of equal transaction"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif(soldDate.compareTo(b.getDate()) !\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn soldDate.compareTo(b.getDate());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t} else if (foodName.compareTo(b.getName()) !\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn foodName.compareTo(b.getName());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t// the order does not matter if time and name the same"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t// for Junit test use"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean equals(Object other) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (other instanceof Sale) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tSale b \u003d (Sale) other;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn foodName.equals(b.foodName)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 quantitySold \u003d\u003d b.quantitySold"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 revenue \u003d\u003d b.revenue"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 profit \u003d\u003d b.profit"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\t\t\u0026\u0026 soldDate \u003d\u003d b.soldDate;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 107
    }
  },
  {
    "path": "src/main/java/cube/model/sale/SalesHistory.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.sale;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.TreeSet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SalesHistory {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate TreeSet\u003cSale\u003e salesSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic SalesHistory() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.salesSet \u003d new TreeSet\u003cSale\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic SalesHistory(TreeSet\u003cSale\u003e salesSet) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.salesSet \u003d salesSet;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void add(Sale saleRecord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tsalesSet.add(saleRecord);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn salesSet.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Iterator iterator() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn salesSet.iterator();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t// more for debug use for now"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tString result \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tIterator i \u003d salesSet.iterator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\twhile(i.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tresult +\u003d i.next() + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 2,
      "tygq13": 40
    }
  },
  {
    "path": "src/main/java/cube/storage/ConfigStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Object to store user configurable options."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.ReminderConfig;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.UiConfig;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.LogConfig;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class ConfigStorage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private UiConfig uiConfig;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private ReminderConfig reminderConfig;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private LogConfig logConfig;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a new instance of ConfigStorage class with default settings."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ConfigStorage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.uiConfig \u003d new UiConfig();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.reminderConfig \u003d new ReminderConfig();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.logConfig \u003d new LogConfig();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Getter for UiConfig."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return UiConfig object containing UI specific configurations."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public UiConfig getUiConfig() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return uiConfig;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Setter for UiConfig."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param uiConfig The UiConfig object that contains UI specific configurations."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setUiConfig(UiConfig uiConfig) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.uiConfig \u003d uiConfig;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Getter for ReminderConfig."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return ReminderConfig object containing Reminder Command specific configurations."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ReminderConfig getReminderConfig() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return reminderConfig;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Setter for ReminderConfig."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param reminderConfig The ReminderConfig object that contains Reminder Command specific configurations."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setReminderConfig(ReminderConfig reminderConfig) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.reminderConfig \u003d reminderConfig;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Getter for LogConfig."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return LogConfig object containing logger configurations."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public LogConfig getLogConfig() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return logConfig;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Setter for LogConfig."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param logConfig The LogConfig object that contains logger configurations to be set."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setLogConfig(LogConfig logConfig) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.logConfig \u003d logConfig;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 74
    }
  },
  {
    "path": "src/main/java/cube/storage/FoodStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Support food-related methods for storage."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FoodStorage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tprivate FoodList foodList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Default constructor for FoodStorage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodStorage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Getter for FoodList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @return FoodList containing list of Food objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodList getFoodList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn foodList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Setter for FoodList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @param foodlist Object containing the list of Food objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void storeFoodList(FoodList foodlist) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodList \u003d foodlist;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 30,
      "tygq13": 5
    }
  },
  {
    "path": "src/main/java/cube/storage/RevenueStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * RevenueStorage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Support revenue-related methods for storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * This class supports revenue-related methods for storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class RevenueStorage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    private double revenue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Default constructor, setting revenue to 0."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public RevenueStorage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.revenue \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Getter for revenue."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @return The revenue value."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public double getRevenue() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        return revenue;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * Setter for revenue."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     * @param revenue The revenue variable, kept for convenient access to the total revenue."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void storeRevenue(double revenue) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        this.revenue \u003d revenue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 38
    }
  },
  {
    "path": "src/main/java/cube/storage/SaleStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * This class supports sale-relevant methods for storage."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.SalesHistory;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SaleStorage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private SalesHistory salesHistory;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default constructor for SaleStorage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public SaleStorage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        this.salesHistory \u003d new SalesHistory();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Getter for SalesHistory."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return SalesHistory object containing previous sales histories."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public SalesHistory getSalesHistory() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        return salesHistory;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Setter for SalesHistory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param salesHistory object containing sales histories."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void storeSalesHistory(SalesHistory salesHistory) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        this.salesHistory \u003d salesHistory;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 14,
      "tygq13": 21
    }
  },
  {
    "path": "src/main/java/cube/storage/StorageManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Handling of JSON File Read/Write operations in Cube"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonProperty;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonIgnore;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.sale.SalesHistory;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate FoodStorage foodStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate RevenueStorage revenueStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tprivate ConfigStorage configStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonProperty"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tprivate SaleStorage saleStorage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Default constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Creates a new instance of Food \u0026 Revenue Storage Classes."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic StorageManager() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodStorage \u003d new FoodStorage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.revenueStorage \u003d new RevenueStorage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.configStorage \u003d new ConfigStorage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.saleStorage \u003d new SaleStorage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Constructor with 2 arguments."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Creates a new instance of Food \u0026 Revenue Storage Classes."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic StorageManager(FoodStorage foodStorage, RevenueStorage revenueStorage, SaleStorage saleStorage, ConfigStorage configStorage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodStorage \u003d foodStorage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.revenueStorage \u003d revenueStorage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.saleStorage \u003d saleStorage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.configStorage \u003d configStorage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Retrieves the FoodList stored in the FoodStorage."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @return FoodList object stored in the FoodStorage."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodList getFoodList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn foodStorage.getFoodList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Stores the specified FoodList object into the FoodStorage."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @param foodlist FoodList object to be stored into the FoodStorage."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void storeFoodList(FoodList foodlist) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tfoodStorage.storeFoodList(foodlist);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Retrieves the revenue stored in the RevenueStorage."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @return Revenue stored in the RevenueStorage."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic double getRevenue() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn revenueStorage.getRevenue();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Stores the specified revenue into the RevenueStorage."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @param revenue Revenue amount to be stored in the RevenueStorage."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void storeRevenue(double revenue) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\trevenueStorage.storeRevenue(revenue);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Retrieves the past sales histories stored in SaleStorage."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @return SalesHistory object containing past sale histories stored in SaleStroage."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic SalesHistory getSalesHistory() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn saleStorage.getSalesHistory();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Stores the SalesHistory object into SaleStorage."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @param salesHistory SalesHistory object to be stored in the SaleStorage."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void storeSalesHistory(SalesHistory salesHistory) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tsaleStorage.storeSalesHistory(salesHistory);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Retrieves the configuration storage containing user-defined configurations."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @return ConfigStorage object containing the user-defined configurations."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic ConfigStorage getConfig() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn configStorage;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * Sets the configuration storage containing user-defined configurations."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t * @return ConfigStorage object containing the user-defined configurations."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t@JsonIgnore"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void setConfig(ConfigStorage configStorage) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.configStorage \u003d configStorage;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 98,
      "tygq13": 16
    }
  },
  {
    "path": "src/main/java/cube/storage/config/LogConfig.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Config object containing configurations for logging."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.storage.config;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class LogConfig {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private int maxFileCount;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private int maxFileSizeBytes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String currentLogLevel;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a new instance of LogConfig class with default settings."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public LogConfig() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.maxFileCount \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.maxFileSizeBytes \u003d (int)(Math.pow(2, 20) * 10); // 10MB"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.currentLogLevel \u003d \"INFO\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public int getMaxFileCount() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return maxFileCount;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setMaxFileCount(int maxFileCount) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.maxFileCount \u003d maxFileCount;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public int getMaxFileSizeBytes() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return maxFileSizeBytes;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setMaxFileSizeMB(int maxFileSizeMB) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.maxFileSizeBytes \u003d (int)(Math.pow(2, 20) * maxFileSizeMB);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public String getCurrentLogLevel() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return currentLogLevel;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setCurrentLogLevel(String currentLogLevel) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.currentLogLevel \u003d currentLogLevel;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        result +\u003d String.format(\"%1$s \u003d %2$s\\n\", \"maxFileCount\", maxFileCount);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        result +\u003d String.format(\"%1$s \u003d %2$s\\n\", \"maxFileSizeBytes\", maxFileSizeBytes);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        result +\u003d String.format(\"%1$s \u003d %2$s\\n\", \"currentLogLevel\", currentLogLevel);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 55
    }
  },
  {
    "path": "src/main/java/cube/storage/config/ReminderConfig.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.storage.config;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class ReminderConfig {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private int daysToExpiry;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private int stockIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a new instance of ConfigStorage class with default settings."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ReminderConfig() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.daysToExpiry \u003d 7;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.stockIndex \u003d 5;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor that takes in 2 arguments."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a new instance of ConfigStorage class with supplied settings."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ReminderConfig(int daysToExpiry, int stockIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.daysToExpiry \u003d daysToExpiry;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.stockIndex \u003d stockIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public int getDaysToExpiry() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return daysToExpiry;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setDaysToExpiry(int daysToExpiry) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.daysToExpiry \u003d daysToExpiry;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public int getStockIndex() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return stockIndex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setStockIndex(int stockIndex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.stockIndex \u003d stockIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 40
    }
  },
  {
    "path": "src/main/java/cube/storage/config/UiConfig.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Config object containing configurations for UI."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.storage.config;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class UiConfig {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private double windowHeight;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private double windowWidth;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a new instance of UiConfig class with default settings."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public UiConfig() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.windowHeight \u003d 600;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.windowWidth \u003d 600;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor that takes in 2 arguments."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a new instance of UiConfig class with supplied settings."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public UiConfig(int windowHeight, int windowWidth) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public double getWindowHeight() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return windowHeight;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setWindowHeight(double windowHeight) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.windowHeight \u003d windowHeight;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public double getWindowWidth() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return windowWidth;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setWindowWidth(double windowWidth) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.windowWidth \u003d windowWidth;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        result +\u003d String.format(\"%1$s \u003d %2$s\\n\", \"windowHeight\", windowHeight);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        result +\u003d String.format(\"%1$s \u003d %2$s\\n\", \"windowWidth\", windowWidth);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 54
    }
  },
  {
    "path": "src/main/java/cube/ui/CommandBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.util.FileUtilJson;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class CommandBox extends UiManager\u003cStackPane\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static final String FXML \u003d \"CommandBox.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private TextField commandTextField;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private final CommandExecutor commandExecutor;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtilJson storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FoodList foodList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public CommandBox(CommandExecutor commandExecutor) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.commandExecutor \u003d commandExecutor;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Handles the Enter button pressed event listener."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void handleCommandEntered() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        String fullCommand \u003d commandTextField.getText();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            commandExecutor.execute(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (CubeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        System.out.println(commandTextField.getText());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        commandTextField.clear();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Represents a function that can execute commands."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FunctionalInterface"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public interface CommandExecutor {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "         * Executes the command and returns the result."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "         */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        CommandResult execute(String commandText) throws CubeException;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 57,
      "tygq13": 2
    }
  },
  {
    "path": "src/main/java/cube/ui/FoodListCard.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FoodListCard extends UiManager\u003cHBox\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static final String FXML \u003d \"FoodListCard.fxml\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private Food food;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private HBox cardPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private Label id;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private Label type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public FoodListCard(Food food, int displayedIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.food \u003d food;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        name.setText(food.getName());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        id.setText(displayedIndex + \". \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        type.setText(food.getType());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 29
    }
  },
  {
    "path": "src/main/java/cube/ui/ListPanel.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.control.ListCell;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.control.ListView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class ListPanel extends UiManager\u003cListView\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static final String FXML \u003d \"ListPanel.fxml\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private ListView\u003cFood\u003e productListView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ListPanel() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ListPanel(FoodList foodList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ObservableList\u003cFood\u003e observableList \u003d FXCollections.observableArrayList(foodList.getFoodList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        productListView.setItems(observableList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        //productListView.setCellFactory(listView -\u003e new ListViewCell());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void updateProductList(FoodList foodList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ObservableList\u003cFood\u003e observableList \u003d FXCollections.observableArrayList(foodList.getFoodList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        productListView.setItems(observableList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    class ListViewCell extends ListCell\u003cFood\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        protected void updateItem(Food food, boolean empty) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            super.updateItem(food, empty);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            if (empty || food \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                setGraphic(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                setText(null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                setGraphic(new FoodListCard(food, getIndex() + 1).getRoot());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 45,
      "tygq13": 1
    }
  },
  {
    "path": "src/main/java/cube/ui/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.SalesHistory;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.ConfigStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.util.FileUtilJson;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class MainWindow extends UiManager\u003cStage\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public static final String FXML \u003d \"MainWindow.fxml\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private Stage primaryStage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private ResultDisplay resultDisplay;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private ListPanel listPanel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private StackPane commandBoxPlaceholder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private StackPane resultDisplayPlaceholder;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private StackPane listPanelPlaceholder;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private ConfigStorage configStorage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtilJson\u003cStorageManager\u003e storage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FoodList foodList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private SalesHistory salesHistory;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private ModelManager modelManager;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public MainWindow (Stage primaryStage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public MainWindow (Stage primaryStage, StorageManager storageManager, FileUtilJson\u003cStorageManager\u003e storage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(FXML, primaryStage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.primaryStage \u003d primaryStage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.storageManager \u003d storageManager;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.configStorage \u003d storageManager.getConfig();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.foodList \u003d storageManager.getFoodList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.salesHistory \u003d storageManager.getSalesHistory();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.modelManager \u003d new ModelManager(foodList, salesHistory);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void initComponents() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        primaryStage.setHeight(configStorage.getUiConfig().getWindowHeight());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        primaryStage.setWidth(configStorage.getUiConfig().getWindowWidth());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        CommandBox commandBox \u003d new CommandBox(this::executeCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        resultDisplay \u003d new ResultDisplay();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        listPanel \u003d new ListPanel(foodList);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        listPanelPlaceholder.getChildren().add(listPanel.getRoot());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private CommandResult executeCommand(String command) throws CubeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            CommandResult result \u003d c.execute(modelManager, storageManager);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            resultDisplay.setResultText(result.getFeedbackToUser());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            listPanel.updateProductList(storageManager.getFoodList());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            if (result.isShowHelp()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                handleHelp();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            if (result.isExit()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                handleExit();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            storage.save(storageManager);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (CubeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            resultDisplay.setResultText(e.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Closes the application."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        primaryStage.hide();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Shows the help window."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void handleHelp() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        //add a pop-up box here"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 108,
      "tygq13": 7
    }
  },
  {
    "path": "src/main/java/cube/ui/ResultDisplay.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class ResultDisplay extends UiManager\u003cStackPane\u003e  {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static final String FXML \u003d \"ResultDisplay.fxml\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private TextArea resultDisplay;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ResultDisplay() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(FXML);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void setResultText(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        resultDisplay.setText(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 20
    }
  },
  {
    "path": "src/main/java/cube/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Ui.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * Support user interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import cube.exception.ErrorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * This class is used as an user interface. It supports"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * interactions with the users, including data and instructions"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " * input and output."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tprivate Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Return the next line of user input being read."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @return next line of user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\treturn in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Print the welcome screen of Cube."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showWelcome(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t    String logo \u003d \" ________  ___  ___  ________  _______      \\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"|\\\\   ____\\\\|\\\\  \\\\|\\\\  \\\\|\\\\   __  \\\\|\\\\  ___ \\\\     \\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"\\\\ \\\\  \\\\___|\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\ /\\\\ \\\\   __/|    \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\" \\\\ \\\\  \\\\    \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\   __  \\\\ \\\\  \\\\_|/__  \\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"  \\\\ \\\\  \\\\____\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"   \\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"    \\\\|_______|\\\\|_______|\\\\|_______|\\\\|_______|\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t    System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints a dotted line in anew line."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showLine() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"------------------------------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showError(String e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Print the error message of loading error."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param path the filepath that the user intends to use to load."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showLoadingError(String path) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(ErrorMessage.IO_ERROR + path);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t// temporary use before GUI finish"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showCommandResult(CommandResult result) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(result.getFeedbackToUser());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 68
    }
  },
  {
    "path": "src/main/java/cube/ui/UiManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.MainApp;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public abstract class UiManager\u003cType\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /** Resource folder where FXML files are stored. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public static final String FXML_FILE_FOLDER \u003d File.separator + \"view\" + File.separator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FXMLLoader fxmlLoader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Main Constructor for Root"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param FXML File name for the FXML user interface design file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param root Type of the JavaFX Object type to load."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public UiManager(String FXML, Type root) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        URL fxmlUrl \u003d getFxmlUrl(FXML);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        setRoot(root);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        loadFxmlFile(fxmlUrl);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Secondary Constructor"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param FXML File name for the FXML user interface design file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public UiManager(String FXML) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        URL fxmlUrl \u003d getFxmlUrl(FXML);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        loadFxmlFile(fxmlUrl);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Returns the root object of the FXML Loader."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public Type getRoot() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return fxmlLoader.getRoot();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Sets he root object of the FXML Loader."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param root The root FXML Object to be set."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void setRoot(Type root) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        fxmlLoader.setRoot(root);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Loads the FXML object of the provided type."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param location Location where the FXML files are being stored."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private void loadFxmlFile(URL location) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        fxmlLoader.setLocation(location);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Returns the FXML file URL for the specified FXML file name within FXML_FILE_FOLDER."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static URL getFxmlUrl(String FXML) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        String fxmlPath \u003d FXML_FILE_FOLDER + FXML;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        URL fxmlUrl \u003d MainApp.class.getClassLoader().getResource(fxmlPath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return fxmlUrl;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 79
    }
  },
  {
    "path": "src/main/java/cube/util/FileUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Abstract parent class for FileUtil."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeLoadingException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public abstract class FileUtil {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String fileFullPath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor with two argument."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param filePath The directory path where data will be stored."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param fileName The filename of the file to be read/write."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public FileUtil(String filePath, String fileName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileFullPath \u003d filePath + File.separator + fileName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates the parent directory and file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param file the file at which should be created."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void create(File file) throws CubeLoadingException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Returns true if the data file is available, otherwise makes a new data file and returns false."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return true if data file available, otherwise false."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public boolean checkFileAvailable(String fullPath) throws CubeLoadingException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        File file \u003d new File(fullPath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            create(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 56
    }
  },
  {
    "path": "src/main/java/cube/util/FileUtilCSV.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Handling of CSV File Read/Write operations in Cube"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.JavaType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.SerializationFeature;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.dataformat.csv.CsvMapper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.dataformat.csv.CsvSchema;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.MappingIterator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeLoadingException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FileUtilCSV\u003cType\u003e extends FileUtil {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private Type fileObject;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String fileFullPath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private CsvMapper mapper;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor with two argument."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param filePath the directory path where data will be stored."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public FileUtilCSV(String filePath, String fileName, Type fileObject) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(filePath, fileName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileFullPath \u003d filePath + File.separator + fileName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileObject \u003d fileObject;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.file \u003d new File(fileFullPath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.mapper \u003d new CsvMapper();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Loads data from the CSV file to an ArrayList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException exception happens in reading from the data file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public ArrayList\u003cType\u003e load() throws CubeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ArrayList\u003cType\u003e collectionToLoad \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (checkFileAvailable(fileFullPath)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            System.out.println(\"Loading file from : \" + fileFullPath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                CsvSchema schema \u003d CsvSchema.emptySchema().withHeader();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                JavaType type \u003d mapper.getTypeFactory().constructType(fileObject.getClass());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                ObjectReader reader \u003d mapper.readerFor(type).with(schema);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                MappingIterator\u003cType\u003e iterator \u003d reader.readValues(file);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                while(iterator.hasNext()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    Type currentObject \u003d iterator.next();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                    collectionToLoad.add(currentObject);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return collectionToLoad;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Saves the Collection into a CSV file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param collectionToSave Collection to be saved into CSV."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException exception happens in writing to the data file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void save(Collection\u003cType\u003e collectionToSave) throws CubeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        checkFileAvailable(fileFullPath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            JavaType type \u003d mapper.getTypeFactory().constructType(fileObject.getClass());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            CsvSchema schema \u003d mapper.schemaFor(type);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            schema \u003d schema.withUseHeader(true);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            mapper.writerFor(collectionToSave.getClass()).with(schema).writeValue(file, collectionToSave);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 90
    }
  },
  {
    "path": "src/main/java/cube/util/FileUtilJson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Handling of JSON File Read/Write operations in Cube"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.JavaType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeLoadingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FileUtilJson\u003cType\u003e extends FileUtil {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private Type fileObject;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String fileFullPath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private ObjectMapper mapper;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor with two argument."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param filePath the directory path where data will be stored."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public FileUtilJson(String filePath, String fileName, Type fileObject) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(filePath, fileName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileFullPath \u003d filePath + File.separator + fileName;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileObject \u003d fileObject;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.file \u003d new File(fileFullPath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Loads the serialized object from the JSON file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return De-serialized object read from the JSON file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs in reading from data file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public Type load() throws CubeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (checkFileAvailable(fileFullPath)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            System.out.println(\"Loading file from : \" + fileFullPath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                JavaType type \u003d mapper.getTypeFactory().constructType(fileObject.getClass());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                fileObject \u003d mapper.readValue(file, type);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return fileObject;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Saves the object into a JSON file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param fileObject Object to be saved into JSON."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException exception happens in writing to the data file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void save(Type fileObject) throws CubeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        checkFileAvailable(fileFullPath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            mapper.writeValue(file, fileObject);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 71
    }
  },
  {
    "path": "src/main/java/cube/util/LogUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Handles and configures loggers and handlers."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Default logger is configured to 1 log file, 10MB in size, Level.INFO."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author kuromono"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.config.LogConfig;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.logging.ConsoleHandler;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.logging.FileHandler;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.util.logging.SimpleFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class LogUtil {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static int maxFileCount \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static int maxFileSizeBytes \u003d (int)(Math.pow(2, 20) * 10); // 10MB;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static String logFileName \u003d \"cube.log\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static Level currentLogLevel \u003d Level.INFO;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static Logger logger \u003d LogUtil.getLogger(LogUtil.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static FileHandler fileHandler;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static ConsoleHandler consoleHandler;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Initializes the logger with custom configurations from the LogConfig object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param logConfig Object containing the log configurations to load form."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public static void init(LogConfig logConfig) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logger.info(\"Initializing logger with stored configurations.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        maxFileCount \u003d logConfig.getMaxFileCount();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        maxFileSizeBytes \u003d logConfig.getMaxFileSizeBytes();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        currentLogLevel \u003d Level.parse(logConfig.getCurrentLogLevel());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logger \u003d LogUtil.getLogger(LogUtil.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logger.info(\"Configured Log Level: \" + currentLogLevel);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a logger with the given name."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public static Logger getLogger(String name) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        Logger logger \u003d Logger.getLogger(name);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logger.setUseParentHandlers(false);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        removeHandlers(logger);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        addConsoleHandler(logger);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        addFileHandler(logger);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return Logger.getLogger(name);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a Logger for the given class name."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public static \u003cType\u003e Logger getLogger(Class\u003cType\u003e classType) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (classType \u003d\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return Logger.getLogger(\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return getLogger(classType.getSimpleName());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Adds the ConsoleHandler to the logger."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates the ConsoleHandler if it is null."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static void addConsoleHandler(Logger logger) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (consoleHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            consoleHandler \u003d createConsoleHandler();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        logger.addHandler(consoleHandler);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Remove all the handlers from logger."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static void removeHandlers(Logger logger) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        Arrays.stream(logger.getHandlers()).forEach(logger::removeHandler);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Adds the FileHandler to the logger."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates the FileHandler if it is null."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static void addFileHandler(Logger logger) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            if (fileHandler \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                fileHandler \u003d createFileHandler();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            logger.addHandler(fileHandler);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            logger.warning(\"Error adding file handler for logger.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a FileHandler for the log file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Outputs the logs into a log file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws IOException if there are problems opening the file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static FileHandler createFileHandler() throws IOException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        FileHandler fileHandler \u003d new FileHandler(logFileName, maxFileSizeBytes, maxFileCount, true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        fileHandler.setFormatter(new SimpleFormatter());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        fileHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return fileHandler;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a ConsoleHandler for the log file."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Outputs the logs into the console."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static ConsoleHandler createConsoleHandler() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        consoleHandler.setLevel(currentLogLevel);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return consoleHandler;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 119
    }
  },
  {
    "path": "src/main/resources/view/CommandBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kuromono": 8
    }
  },
  {
    "path": "src/main/resources/view/FoodListCard.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.Region?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.RowConstraints?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003cminWidth\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            \u003c!-- Ensures that the label text is never truncated --\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003c/minWidth\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003cFlowPane fx:id\u003d\"tags\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003cLabel fx:id\u003d\"type\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$type\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "         \u003cRowConstraints /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "  \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c/HBox\u003e"
      }
    ],
    "authorContributionMap": {
      "kuromono": 38
    }
  },
  {
    "path": "src/main/resources/view/ListPanel.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.control.ListView?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "  \u003cListView fx:id\u003d\"productListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "kuromono": 8
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"600\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Cube\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "  \u003cscene\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    \u003cScene\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"200\" prefHeight\u003d\"200\" minWidth\u003d\"400\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cVBox fx:id\u003d\"viewList\" minHeight\u003d\"300\" prefHeight\u003d\"300\" minWidth\u003d\"400\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003cpadding\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003c/padding\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    \u003c/Scene\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "  \u003c/scene\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kuromono": 50
    }
  },
  {
    "path": "src/main/resources/view/ResultDisplay.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\u003c/StackPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kuromono": 8
    }
  },
  {
    "path": "src/test/java/CubeTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "public class CubeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZKathrynx": 10
    }
  },
  {
    "path": "src/test/java/cube/logic/command/AddCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandErrorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate class FoodStub extends Food{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void constructor_valid_person() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tFoodStub food \u003d new FoodStub();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tnew AddCommand(food);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *\t ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_foodAcceptedByModel() throws CommandException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tStorageManager storage \u003d new StorageManager();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tFood food \u003d new Food(\"ok\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tAddCommand command \u003d new AddCommand(food);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult result \u003d command.execute(model, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult expectedResult \u003d new CommandResult(String.format(AddCommand.MESSAGE_SUCCESS, food, model.getFoodList().size()), false, false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tFoodList expectedList \u003d new FoodList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \texpectedList.add(food);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \t"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(model.getFoodList(), expectedList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *\t ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_duplicatedFood_throws_NameExist() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tStorageManager storage \u003d new StorageManager();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tFoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tFood food \u003d new Food(\"ok\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tlist.add(food);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tAddCommand command \u003d new AddCommand(food);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertThrowEquals(CommandException.class, CommandErrorMessage.FOOD_ALREADY_EXISTS, () -\u003e {command.execute(model, storage);});"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 63
    }
  },
  {
    "path": "src/test/java/cube/logic/command/DeleteCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandErrorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.DeleteCommand.DeleteBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate class FoodStub extends Food{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *\t ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_valid_index() throws CommandException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Food toDelete \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        list.add(toDelete);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(1, \"INDEX\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult result \u003d command.execute(model, new StorageManager());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList expectedList \u003d new FoodList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult expectedResult \u003d new CommandResult(String.format(DeleteCommand.MESSAGE_SUCCESS_SINGLE, toDelete, 0));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(model.getFoodList(), expectedList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_invalid_index() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        DeleteCommand deleteTooLargeIndex \u003d new DeleteCommand(1, \"INDEX\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertThrowEquals(CommandException.class, CommandErrorMessage.INVALID_INDEX, () -\u003e {deleteTooLargeIndex.execute(new ModelManager(), new StorageManager());});"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        DeleteCommand deleteNegativeIndex \u003d new DeleteCommand(-1, \"INDEX\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertThrowEquals(CommandException.class, CommandErrorMessage.INVALID_INDEX, () -\u003e {deleteNegativeIndex.execute(new ModelManager(), new StorageManager());});"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *   ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_valid_name() throws CommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Food toDelete \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        list.add(toDelete);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"anyName\", \"NAME\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult result \u003d command.execute(model, new StorageManager());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList expectedList \u003d new FoodList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult expectedResult \u003d new CommandResult(String.format(DeleteCommand.MESSAGE_SUCCESS_SINGLE, toDelete, 0));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(model.getFoodList(), expectedList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_invalid_name() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        DeleteCommand deleteTooLargeIndex \u003d new DeleteCommand(\"anyName\", \"NAME\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertThrowEquals(CommandException.class, CommandErrorMessage.FOOD_NOT_EXISTS, () -\u003e {deleteTooLargeIndex.execute(new ModelManager(), new StorageManager());});"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *   ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_valid_type() throws CommandException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList list \u003d model.getFoodList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Food toDelete \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        toDelete.setType(\"anyType\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        list.add(toDelete);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"anyType\", \"TYPE\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult result \u003d command.execute(model, new StorageManager());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList expectedList \u003d new FoodList();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult expectedResult \u003d new CommandResult(String.format(DeleteCommand.MESSAGE_SUCCESS_MULTIPLE, \"anyType\", 1, 0));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(model.getFoodList(), expectedList);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_invalid_type() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        DeleteCommand deleteTooLargeIndex \u003d new DeleteCommand(\"anyType\", \"TYPE\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertThrowEquals(CommandException.class, CommandErrorMessage.INVALID_TYPE, () -\u003e {deleteTooLargeIndex.execute(new ModelManager(), new StorageManager());});"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 103
    }
  },
  {
    "path": "src/test/java/cube/logic/command/ExitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandErrorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void isExitTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ExitCommand command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(command.isExit(), true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *\t ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_exit_successful() throws CommandException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tExitCommand command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult result \u003d command.execute(new ModelManager(), new StorageManager());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult expectedResult \u003d new CommandResult(ExitCommand.MESSAGE_SUCCESS, false, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 39
    }
  },
  {
    "path": "src/test/java/cube/logic/command/HelpCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList.SortType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandErrorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class HelpCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *\t ModelManager, StorageManager, Food.getRevenue(), CommandResult "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_list_noSort() throws CommandException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tHelpCommand command \u003d new HelpCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult result \u003d command.execute(new ModelManager(), new StorageManager());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult expectedResult \u003d new CommandResult(HelpCommand.MESSAGE_SUCCESS, true, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 33
    }
  },
  {
    "path": "src/test/java/cube/logic/command/ListCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList.SortType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandErrorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private class FoodListStub extends FoodList{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate class ModelStub extends ModelManager{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodListStub list \u003d new FoodListStub();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public FoodListStub getFoodList(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void construct_sortType_successful() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SortType type \u003d SortType.EXPIRY;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ListCommand command \u003d new ListCommand(type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(command.sortType, type);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *\t ModelManager, StorageManager, Food.getRevenue(), CommandResult "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_list_noSort() throws CommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodListStub list \u003d new FoodListStub();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ModelStub model \u003d new ModelStub();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tListCommand command \u003d new ListCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult result \u003d command.execute(model, new StorageManager());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult expectedResult \u003d new CommandResult(String.format(ListCommand.MESSAGE_SUCCESS, list, Food.getRevenue()), false, false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 53
    }
  },
  {
    "path": "src/test/java/cube/logic/command/SoldCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.Sale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.sale.SalesHistory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.ModelManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.util.CommandResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.exception.CommandErrorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SoldCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate class FoodStub extends Food{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void obtainFoodSold_valid() throws CommandException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SoldCommand command \u003d new SoldCommand(\"anyName\", 0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodList list \u003d new FoodList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Food food \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        list.add(food);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        command.obtainFoodSold(list);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(command.toSold, food);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void obtainFoodSold_throws_nameNotExist() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SoldCommand command \u003d new SoldCommand(\"anyName\", 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertThrowEquals(CommandException.class, CommandErrorMessage.FOOD_NOT_EXISTS, () -\u003e {command.obtainFoodSold(new FoodList());});"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *\t ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_correct_model_change() throws CommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tStorageManager storage \u003d new StorageManager();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tFood food \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setStock(100);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setPrice(100);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setCost(50);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        model.getFoodList().add(food);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tSoldCommand command \u003d new SoldCommand(\"anyName\", 50);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tCommandResult result \u003d command.execute(model, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tFood expectedFood \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        expectedFood.setStock(50);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        expectedFood.setPrice(100);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        expectedFood.setCost(50);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    \tassertEquals(food, expectedFood);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *   ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_invalid_quantity() throws CommandException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        StorageManager storage \u003d new StorageManager();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Food food \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setStock(100);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setPrice(100);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setCost(50);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        model.getFoodList().add(food);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SoldCommand largeQuantityCommand \u003d new SoldCommand(\"anyName\", 500);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SoldCommand negativeQuantityCommand \u003d new SoldCommand(\"anyName\", -1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertThrowEquals(CommandException.class, CommandErrorMessage.INVALID_QUANTITY_SOLD, () -\u003e {largeQuantityCommand.execute(model, storage);});"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertThrowEquals(CommandException.class, CommandErrorMessage.INVALID_QUANTITY_SOLD, () -\u003e {negativeQuantityCommand.execute(model, storage);});"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Dependent on correct implementation of following class:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *   ModelManager, StorageManager, FoodList, Food, CommandResult "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Storage not tested."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void execute_correct_sale_record() throws CommandException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        ModelManager model \u003d new ModelManager();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        StorageManager storage \u003d new StorageManager();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Date time \u003d new Date();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Food food \u003d new Food(\"anyName\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setStock(100);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setPrice(100);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        food.setCost(50);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        model.getFoodList().add(food);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SoldCommand command \u003d new SoldCommand(\"anyName\", 50, time);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult result \u003d command.execute(model, storage);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        CommandResult expectedResult \u003d new CommandResult(String.format(SoldCommand.MESSAGE_SUCCESS, 50, \"anyName\", 100*50d, 50*50d));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Sale expectedSale \u003d new Sale(\"anyName\", 50, 100*50, 50*50, time);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        System.out.println(model.getSalesHistory().iterator().next());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(model.getSalesHistory().iterator().next(), expectedSale);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(result, expectedResult);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 111
    }
  },
  {
    "path": "src/test/java/cube/logic/parser/AddCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "class AddCommandParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    public void findFullStringTest () {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        String test1 \u003d \"add super banana\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        String test2 \u003d \"add super banana -t this one -p 12.30\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        ParserUtil test \u003d new ParserUtil();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        assertEquals(test.findFullString(test1.split(\" \"),1),\"super banana\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "        assertEquals(test.findFullString(test2.split(\" \"),4),\"this one\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 3,
      "ZKathrynx": 14
    }
  },
  {
    "path": "src/test/java/cube/model/food/FoodUtilTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class FoodUtilTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private class FoodStub extends Food {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int stock;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public FoodStub(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public FoodStub(String name) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public FoodStub(int stock) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            this.stock \u003d stock;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public FoodStub(Date date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public String getName() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            return name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public int getStock() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            return stock;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        public Date getExpiryDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void SortByNameTest() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodStub f1 \u003d new FoodStub(\"a\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodStub f2 \u003d new FoodStub(\"b\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SortByName sort \u003d new SortByName();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int smaller \u003d sort.compare(f1, f2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int larger \u003d sort.compare(f2, f1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int equal \u003d sort.compare(f1, f1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(smaller, -1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(larger, 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(equal, 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertFalse(sort.compare(f1,f2) \u003d\u003d 0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void SortByStockTest() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodStub f1 \u003d new FoodStub(-1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodStub f2 \u003d new FoodStub(1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SortByStock sort \u003d new SortByStock();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int smaller \u003d sort.compare(f1, f2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int larger \u003d sort.compare(f2, f1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int equal \u003d sort.compare(f1, f1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(smaller, -1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(larger, 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(equal, 0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertFalse(sort.compare(f1, f2) \u003d\u003d 0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void SortByDateTest() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodStub f1 \u003d new FoodStub(new Date(2019, 10, 30));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodStub f2 \u003d new FoodStub(new Date(2019, 11, 30));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        FoodStub f3 \u003d new FoodStub();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        SortByExpiry sort \u003d new SortByExpiry();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int smaller \u003d sort.compare(f1, f2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int equal \u003d sort.compare(f1, f1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int larger \u003d sort.compare(f2, f1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int nullSmaller \u003d sort.compare(f1, f3);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int nullEqual \u003d sort.compare(f3, f3);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int nullLarger \u003d sort.compare(f3, f1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(smaller, -1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(larger, 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(equal, 0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(nullSmaller, -1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(nullLarger, 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(nullEqual, 0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertFalse(sort.compare(f1, f2) \u003d\u003d 0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertFalse(sort.compare(f1, f3) \u003d\u003d 0);        "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 96
    }
  },
  {
    "path": "src/test/java/cube/model/sale/SaleTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.sale;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import static cube.testutil.Assert.assertThrowEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SaleTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public void compareToTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Sale s1 \u003d new Sale(\"b\", 0, 0, 0, new Date(2019, 8, 8));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Sale s2 \u003d new Sale(\"a\", 0, 0, 0, new Date(2019, 8, 8));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Sale s3 \u003d new Sale(\"a\", 0 ,0 ,0, new Date(2019, 9, 9));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int dateSmaller \u003d s2.compareTo(s3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int dateLarger \u003d s3.compareTo(s3);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int dateEqual \u003d s3.compareTo(s3);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int nameSmaller \u003d s2.compareTo(s1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int dateLargerNameSmaller \u003d s3.compareTo(s1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int nameEqual \u003d s1.compareTo(s1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        int nameLarger \u003d s1.compareTo(s2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(dateSmaller, -1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(dateEqual, 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(dateLarger, 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(nameSmaller, -1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(nameEqual, 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(nameLarger, 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        assertEquals(dateLargerNameSmaller, 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 32
    }
  },
  {
    "path": "src/test/java/cube/testutil/Assert.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "//credit: address-book level 3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.testutil;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import org.junit.jupiter.api.function.Executable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * A set of assertion methods useful for writing tests."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class Assert {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public static void assertThrowEquals(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            Executable executable) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        Assertions.assertEquals(expectedMessage, thrownException.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 17
    }
  },
  {
    "path": "src/test/java/cube/ui/UiTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "//@@author LL-Pengfei"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LL-Pengfei": 13
    }
  },
  {
    "path": "src/test/java/cube/util/FileUtilJsonTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.logic.parser.ParserUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FileUtilJsonTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtilJson\u003cStorageManager\u003e storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void init(String filePath, String fileName) throws CubeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage \u003d new FileUtilJson(filePath, fileName, storageManager);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates a sample test JSON file to test Cube."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void createTestFile(int NUM_OF_PRODUCTS) throws CubeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        FoodList foodList \u003d storageManager.getFoodList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        for (int i \u003d 0; i \u003c NUM_OF_PRODUCTS; i +\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            int testFoodIdx \u003d i + 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            Food testFood \u003d new Food(\"Food_\" + testFoodIdx);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            testFood.setType(\"food\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            testFood.setPrice(testFoodIdx);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            testFood.setCost(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            testFood.setStock(5000);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            testFood.setExpiryDate(ParserUtil.parseStringToDate(\"31/12/2020\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            foodList.add(testFood);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storageManager.storeFoodList(foodList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage.save(storageManager);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void testSaveTime() throws CubeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        long startTime \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage.save(storageManager);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        long endTime \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        System.out.println(\"Elapsed Save Time : \" + (endTime - startTime) + \" ms\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void testLoadTime() throws CubeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        long startTime \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storageManager \u003d storage.load();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        long endTime \u003d System.currentTimeMillis();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        System.out.println(\"Elapsed Load Time : \" + (endTime - startTime) + \" ms\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void generateSampleTestFile() throws CubeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        init(\"data\",\"cube.json\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        createTestFile(50);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void testFileUtilPerformance() throws CubeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        for (int i \u003d 5; i \u003c\u003d 50000; i *\u003d 10) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            init(\"test\",i + \".json\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            testLoadTime();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            testSaveTime();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 72
    }
  }
]
