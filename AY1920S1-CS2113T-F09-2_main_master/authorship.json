[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027cube\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"cube.Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.10.0\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    ignoreFailures \u003d true"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    archiveBaseName \u003d \"cube\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    archiveVersion \u003d \"0.1.1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 9,
      "-": 21,
      "ZKathrynx": 7
    }
  },
  {
    "path": "src/main/java/cube/Duke.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * This is the main entrance of Duke programme."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.logic.parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.util.FileUtilJson;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * the main class of Duke Programme"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private StorageManager storageManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private FileUtilJson storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    private FoodList foodList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * Duke constructor with filePath."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param filePath the file path where duke data is stored."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        storage \u003d new FileUtilJson(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            storageManager \u003d storage.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            foodList \u003d storageManager.getFoodList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            Food.updateRevenue(storageManager.getRevenue());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (CubeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showLoadingError(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            Food.updateRevenue(0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * Runs the Duke programme by receiving user commands and executing the commands."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tygq13"
        },
        "content": "                c.execute(foodList, ui, storageManager);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                storage.save(storageManager);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "            } catch (CubeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initializes new Duke user and runs the programme."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param args programme arguments."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        //todo: allow user to specify data path"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        new Duke(\"data\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 10,
      "tygq13": 11,
      "-": 56,
      "ZKathrynx": 1
    }
  },
  {
    "path": "src/main/java/cube/exception/CubeException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * The parent exception class that handles general exceptions in Using Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class CubeException extends Exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic CubeException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tsuper();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Constructs the exception with message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @param message the message to be printed when exception happens."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    public CubeException(String message) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 26
    }
  },
  {
    "path": "src/main/java/cube/exception/CubeLoadingException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * This an exception class that handles loading exception when using Cube. Inherits from CubeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.ui.Message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class CubeLoadingException extends CubeException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Default Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public CubeLoadingException(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        super(Message.IO_ERROR + filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 18
    }
  },
  {
    "path": "src/main/java/cube/logic/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate final Food toAdd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic AddCommand (Food food) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.toAdd \u003d food;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate boolean isValid(FoodList list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn !list.exists(toAdd);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void execute(FoodList list, Ui ui, StorageManager storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (isValid(list)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tlist.add(toAdd);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tstorage.appendFood(toAdd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSystem.out.println(\"reach add\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// todo: ui.showAdd();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 28
    }
  },
  {
    "path": "src/main/java/cube/logic/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic abstract void execute(FoodList list, Ui ui, StorageManager storage) throws CubeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 16
    }
  },
  {
    "path": "src/main/java/cube/logic/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate int deleteIndex;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic DeleteCommand (int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.deleteIndex \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate boolean isValid(FoodList list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn deleteIndex \u003e 0 \u0026\u0026 deleteIndex \u003c list.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void execute(FoodList list, Ui ui, StorageManager storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tif (isValid(list)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tlist.remove(deleteIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tstorage.storeFoodList(list);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSystem.out.println(\"reach delete\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// ui.showDelete()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 27
    }
  },
  {
    "path": "src/main/java/cube/logic/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic ExitCommand () {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void execute(FoodList list, Ui ui, StorageManager storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSystem.out.println(\"reach exit\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 21
    }
  },
  {
    "path": "src/main/java/cube/logic/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic HelpCommand () {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void execute(FoodList list, Ui ui, StorageManager storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSystem.out.println(\"reach help\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// todo: ui.showHelp();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 17
    }
  },
  {
    "path": "src/main/java/cube/logic/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList.SortType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tSortType sortType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic ListCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic ListCommand (SortType sortType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.sortType \u003d sortType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void execute(FoodList list, Ui ui, StorageManager storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tlist.sort(sortType);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSystem.out.println(\"reach list\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t// todo: ui.showList(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 23
    }
  },
  {
    "path": "src/main/java/cube/logic/command/SoldCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SoldCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tString foodName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tint quantity;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic SoldCommand (String foodName, int quantity) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tthis.foodName \u003d foodName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void execute(FoodList list, Ui ui, StorageManager storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tFood food \u003d list.get(foodName);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tint originQty \u003d food.getStock();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tfood.updateStock(originQty - quantity);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tFood.updateRevenue(Food.getRevenue() + quantity * food.getPrice());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tstorage.storeRevenue(Food.getRevenue());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\tSystem.out.println(\"reach sold\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t//ui.showSold(foodName, Food.getRevenue());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 26
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/AddCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.ui.Message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class AddCommandParser implements ParserPrototype\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic AddCommand parse(String[] args) throws CubeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint foodNameIndex \u003d -1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint foodTypeIndex \u003d -1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint priceIndex \u003d -1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint stockIndex \u003d -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint expiryDateIndex \u003d -1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-n\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfoodNameIndex \u003d i;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-t\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfoodTypeIndex \u003d i;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-p\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tpriceIndex \u003d i;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-s\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tstockIndex \u003d i;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-e\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\texpiryDateIndex \u003d i;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (foodNameIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new CubeException(\"Not enough parameter. Please enter food name.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tFood tempFood \u003d new Food(args[foodNameIndex+1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (foodTypeIndex !\u003d -1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\ttempFood.setType(args[foodTypeIndex+1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (priceIndex !\u003d -1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\ttempFood.setPrice(Integer.parseInt(args[priceIndex+1]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (stockIndex !\u003d -1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\ttempFood.updateStock(Integer.parseInt(args[stockIndex+1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (expiryDateIndex !\u003d -1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\ttempFood.setExpiryDate(parseStringToDate(args[priceIndex+1]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn new AddCommand(tempFood);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Returns a Date object by parsing the date String."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Time zone is set as Singapore time by default."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @param dateString the String describing the date."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @return the date"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @throws CubeException exception occurs when unable to parse."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic static Date parseStringToDate(String dateString) throws CubeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (dateString \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\treturn null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tSimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tformatter.setTimeZone(TimeZone.getTimeZone(\"GMT-8:00\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tDate date \u003d formatter.parse(dateString);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\treturn date;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new CubeException(Message.INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 8,
      "ZKathrynx": 71
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/DeleteCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class DeleteCommandParser implements ParserPrototype\u003cDeleteCommand\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic DeleteCommand parse(String[] args) throws CubeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif (args.length \u003c 3) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new CubeException(\"Not enough parameters. Please enter index you want to delete.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn new DeleteCommand(Integer.parseInt(args[2]));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 8,
      "ZKathrynx": 6
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/ListCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class ListCommandParser implements ParserPrototype\u003cListCommand\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic ListCommand parse(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn new ListCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 9,
      "ZKathrynx": 1
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.ui.Message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import java.util.TimeZone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// design pattern copied from address book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// reference: https://github.com/nusCS2113-AY1920S1/addressbook-level3/tree/master/src/main/java/seedu/address/logic/parser"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " * Parse user command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " * @author Zheng Kaining"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Parse user command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Format:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * add -n foodName -t foodType -p price -s stock -e expiryDate"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * delete -i index"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * sold -n foodName -q quantity"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * help"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * bye"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * Assumption: no repetitive parameters given."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @param fullCommand the command that user inputs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t * @return corresponding command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic static Command parse (String fullCommand) throws CubeException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tString[] inputs \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tString command \u003d inputs[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tcommand \u003d command.trim().toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tswitch (command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"add\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new AddCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"list\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new ListCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\treturn new DeleteCommandParser().parse(inputs);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"sold\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"help\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\treturn new HelpCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"bye\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"exit\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tcase \"quit\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\t\treturn new ExitCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tthrow new CubeException(Message.INVALID_COMMAND);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tygq13": 21,
      "ZKathrynx": 42
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/ParserPrototype.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": " * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public interface ParserPrototype\u003cT extends Command\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * Parses {@code userInput} into a command and returns it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     * @throws ParseException if {@code userInput} does not conform the expected format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "    T parse(String[] userInput) throws CubeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 14,
      "ZKathrynx": 2
    }
  },
  {
    "path": "src/main/java/cube/logic/parser/SoldCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.logic.command.SoldCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "public class SoldCommandParser implements ParserPrototype\u003cSoldCommand\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\tpublic SoldCommand parse(String[] args) throws CubeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint foodNameIndex \u003d -1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tint quantityIndex \u003d -1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tfor (int i \u003d 1; i \u003c args.length; i ++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-n\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tfoodNameIndex \u003d i;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tif (args[i].equals(\"-q\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t\tquantityIndex \u003d i;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\tif(foodNameIndex \u003d\u003d -1 || quantityIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t\tthrow new CubeException(\"Not enough parameters. Please enter both food name and quantity sold.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZKathrynx"
        },
        "content": "\t\treturn new SoldCommand(args[foodNameIndex+1],Integer.parseInt(args[quantityIndex+1]));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tygq13": 8,
      "ZKathrynx": 16
    }
  },
  {
    "path": "src/main/java/cube/model/food/Food.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Food implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected static double revenue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected double price;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected int stock;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tprotected Date expiryDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Calls another constructor with (null) as argument."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Food() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t    this(null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Constructor with one argument."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param name Name of the food product."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Food(String name) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.name \u003d name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.revenue \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.stock \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets the type of the product."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param type The type of the product."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setType(String type) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.type \u003d type;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the type of the product."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the type of the product."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic String getType() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn type;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets/changes the price of the product."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param price The price of the product."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setPrice (double price) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.price \u003d price;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the price of the product."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the price of the product."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic double getPrice() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn price;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Sets/updates the expiry date of the product."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param expiryDate The expiry date of the product."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void setExpiryDate (Date expiryDate) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tthis.expiryDate \u003d expiryDate;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the expiry date of the product."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the expiry date of the product."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic Date getExpiryDate() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn expiryDate;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Updates the total revenue made from selling the product."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param newRevenue New total revenue made from selling the product."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic static void updateRevenue(double newRevenue) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\trevenue \u003d newRevenue;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the revenue earned from selling the product."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the revenue earned from selling the product."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic static double getRevenue() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn revenue;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Updates the quantity of the product available in stock."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @param newStock New quantity of product available."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic void updateStock(int newStock) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tstock \u003d newStock;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Gets the quantity of the product available in stock."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return Quantity of product in stock."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int getStock() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn stock;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Shows that product already exists in the inventory."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return true"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic boolean exists(String foodName) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\tif (foodName \u003d\u003d this.name) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Casts the food product to String type."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * @return the String printout of the food product."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn name + \"\\n  Type: \" + type +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Price: \" + price +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Stock: \" + stock +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Expiry Date: \" + expiryDate +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\t\t\t\"\\n  Revenue: \" + revenue;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 145,
      "tygq13": 20
    }
  },
  {
    "path": "src/main/java/cube/model/food/FoodList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.model.food;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// for testing only"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FoodList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tprivate ArrayList\u003cFood\u003e foodArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic enum SortType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic FoodList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic FoodList(ArrayList\u003cFood\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList \u003d list;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void add(Food food) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodArrayList.add(food);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t// public getter to allow JSON read/write to work"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic ArrayList\u003cFood\u003e getFoodList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn this.foodArrayList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Food get(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic Food get(String foodName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t\treturn new Food(foodName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void remove(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic boolean exists(Food food) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\treturn 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void sort(SortType sortType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t//public Iteator iterator() {}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 1,
      "kuromono": 10,
      "tygq13": 46
    }
  },
  {
    "path": "src/main/java/cube/storage/FoodStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FoodStorage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tprivate FoodList foodList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodStorage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodList \u003d new FoodList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodStorage(FoodList foodList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodList \u003d foodList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodList getFoodList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn foodList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void appendFood(Food food) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tfoodList.add(food);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void storeFoodList(FoodList foodlist) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodList \u003d foodlist;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 24,
      "tygq13": 4
    }
  },
  {
    "path": "src/main/java/cube/storage/RevenueStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// for testing only"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class RevenueStorage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private double revenue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public RevenueStorage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.revenue \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic RevenueStorage(double revenue) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.revenue \u003d revenue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public double getRevenue() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return revenue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void storeRevenue(double revenue) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.revenue \u003d revenue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 16,
      "tygq13": 6
    }
  },
  {
    "path": "src/main/java/cube/storage/StorageManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tygq13"
        },
        "content": "package cube.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.Food;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tygq13"
        },
        "content": "import cube.model.food.FoodList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// this is facade design pattern"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tygq13"
        },
        "content": "// reference: https://github.com/nusCS2113-AY1920S1/addressbook-level3/tree/master/src/main/java/seedu/address/storage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate FoodStorage foodStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tprivate RevenueStorage revenueStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic StorageManager() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodStorage \u003d new FoodStorage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.revenueStorage \u003d new RevenueStorage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic StorageManager(FoodStorage foodStorage, RevenueStorage revenueStorage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.foodStorage \u003d foodStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tthis.revenueStorage \u003d revenueStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic FoodList getFoodList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn foodStorage.getFoodList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void appendFood(Food food) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tfoodStorage.appendFood(food);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\tpublic void storeFoodList(FoodList foodlist) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\tfoodStorage.storeFoodList(foodlist);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic double getRevenue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\treturn revenueStorage.getRevenue();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tygq13"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\tpublic void storeRevenue(double revenue) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\trevenueStorage.storeRevenue(revenue);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tygq13"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tygq13"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 19,
      "tygq13": 24
    }
  },
  {
    "path": "src/main/java/cube/task/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * This is the Task class that used as parent class for all types of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task implements Serializable{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\tprotected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\tprotected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Default constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Calls another constructor with (null) as argument."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Task() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis(null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Constructor with one argument."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Calls another constructor with additional argument date\u003dnull."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param description the description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis(description, null);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "\t * Constructor with two arguments."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Sets isDone to false by default."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param description"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param date"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Task(String description, Date date) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.date \u003d date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Casts the task to String type."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return the String printout of the task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Date getDate() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn date;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Gets the status of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return true if the task is done, otherwise false."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic boolean getStatus() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Returns icon \u0027Tick\" if task is done, icon \u0027Cross\u0027 if it is not done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return the icon of the status"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn (isDone ? \"\\u2713\" : \"\\u2718\"); //tick or cross"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Casts the task to String type."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return the String printout of the event."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn \"[\" + getStatusIcon() + \"] \" + description; "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\t *  Sets isDone to true."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void markAsDone() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 1,
      "-": 93
    }
  },
  {
    "path": "src/main/java/cube/ui/Message.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * The task contain all message used when errors occur."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "//todo: could create relevant exception classes with the specific message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_DESCRIPTION"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The description of a task cannot be empty\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_DATE"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The date cannot be empty. Please Add date after / Character\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_TASK_NUMBER"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The task number cannot be empty\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String INVALID_TASK_NUMBER"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The task number is invalid\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String INVALID_DATE_FORMAT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The date format is invalid. Please specify date in \u0027dd/mm/yy\u0027\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String INVALID_COMMAND"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The command is invalid. Enter \u0027help\u0027 to view the list of command\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EXISTING_DATE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! There is an existing task that clashes with the date of the task!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EXISTING_DESCRIPTION"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! There is an existing task that contains the exact description!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String IO_ERROR"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The data file is deprecated. Unable to read or write in cube.dat in \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic static final String EMPTY_DURATION"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\u003d \"OOPS!!! The duration cannot be empty. Please provide the duration of the task after \\\\ Character\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 1,
      "-": 29
    }
  },
  {
    "path": "src/main/java/cube/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": " * This class is used as interface with the user. It could reads from user and print message to the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "package cube.ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import cube.util.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\tprivate Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Returns the next line of user input being read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return next line of user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t//@@author LL-Pengfei"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints the welcome screen of Cube."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showWelcome(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t    String logo \u003d \" ________  ___  ___  ________  _______      \\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"|\\\\   ____\\\\|\\\\  \\\\|\\\\  \\\\|\\\\   __  \\\\|\\\\  ___ \\\\     \\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"\\\\ \\\\  \\\\___|\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\ /\\\\ \\\\   __/|    \\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\" \\\\ \\\\  \\\\    \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\   __  \\\\ \\\\  \\\\_|/__  \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"  \\\\ \\\\  \\\\____\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\_|\\\\ \\\\ \\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"   \\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\ \\\\_______\\\\\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\t\t\"    \\\\|_______|\\\\|_______|\\\\|_______|\\\\|_______|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t    System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints a dotted line with new line."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"------------------------------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints the exit message of Cube."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints the information of the task added."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list the list of tasks stored in Cube."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showAdd(TaskList list) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tTask t \u003d list.get(list.size() -1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints each task in the task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list the list of tasks stored in Cube."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showList(TaskList list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tfor(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\tSystem.out.println((i + 1) + \".\" + list.get(i));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints the list of task with specified keyword."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list the list of task stored in Cube."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showFind(TaskList list) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tfor(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t\tSystem.out.println((i + 1) + \".\" + list.get(i));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Prints the message of task being marked as done."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param finished the task being marked as done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showDone(Task finished) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(finished);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t//@@author LL-Pengfei"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * Show Snooze Message."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param snoozed the task snoozed."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\tpublic void showSnooze(Task snoozed) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(\"Here is the task snoozed for 24 hours:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t\tSystem.out.println(snoozed);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t//@@author"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Prints the list of tasks due in 10 days."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list the list of task stored in Cube."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void showReminder(TaskList list) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(\"Here are the deadline/event within 10 days:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tfor(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tTask task \u003d list.get(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tSystem.out.println(task.getDescription() + \" due in \" + Parser.parseDateToString(task.getDate()));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Prints the message of a task being removed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param removed the task being removed."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list the list of task stored in Cube."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void showRemove(Task removed, TaskList list) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(\"Nice! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(removed);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Prints the message of a task being removed."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param removed the task being removed."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LL-Pengfei"
        },
        "content": "\t * @param list the list of task stored in Cube."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void showFreeDay(Date date) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(\"Your next free day is: \" + Parser.parseDateToString(date));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Prints the error message."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param error the error message."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void showError(String error) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(error);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Prints the error message of loading error."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void showLoadingError(String path) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.println(Message.IO_ERROR + path);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Prints the list of available command and their usage."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void showHelp() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tString help \u003d \"Currently we support the following commands: (all command ignore cases)\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ \"Manipulate tasks:\\n\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027Todo \u003cdescription\u003e\u0027\") + \"add a Todo task with description\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027Deadline \u003cdescription\u003e /by \u003cdd/mm/yy\u003e\u0027\") + \"add a Deadline task with description and time\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027Event \u003cdescription\u003e /by \u003cdd/mm/yy\u003e\u0027\") + \"add a Event task with description and time\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027Done \u003cnumber\u003e\u0027\") + \"mark the nth task in the list as finished\\n\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027Delete \u003cnumber\u003e\u0027\") + \"delete the nth task in the list\\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ \"Show task list:\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027List\u0027\") + \"show the list of tasks\\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027Find \u003ckeywords\u003e\u0027\") + \"show the list of tasks with specified keywords\\n\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027Reminder\u0027\") + \"show the list of tasks due in 10 days\\n\"\t\t\t\t"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027FreeTime \u003cnumber\u003e\u0027\") + \"show the nearest day with free time of n hours\\n\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027ViewSchedule /at \u003cdd/mm/yy\u003e\u0027\") + \"show the list of tasks that falls within specified date\\n\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ \"Miscellaneous:\\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027bye\u0027 OR \u0027exit\u0027 OR \u0027quit\u0027\") + \"to exit the programme\\n\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\t\t+ String.format(\"%1$-50s\", \"  \u0027help\u0027\") + \"to show a list of available command\\n\";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tSystem.out.print(help);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 99,
      "LL-Pengfei": 90
    }
  },
  {
    "path": "src/main/java/cube/util/FileUtil.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * Handling of file operation utilities in Cube."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": " * @author tygq13"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeLoadingException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.FoodStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.RevenueStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String fileFullPath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static final String fileName \u003d \"cube.dat\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param filePath the directory path where data will be stored."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public FileUtil(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileFullPath \u003d filePath + File.separator + fileName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates the parent directory and file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param file the file at which should be created."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void create(File file) throws CubeLoadingException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Returns true if the data file is available, otherwise makes a new data file and returns false."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return true if data file available, otherwise false."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public boolean checkFileAvailable() throws CubeLoadingException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        File file \u003d new File(fileFullPath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            create(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Loads serialized StorageManager object from the file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs in reading from data file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public StorageManager load() throws CubeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        FoodStorage foodStorage \u003d new FoodStorage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        RevenueStorage revenueStorage \u003d new RevenueStorage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        StorageManager storageManager \u003d new StorageManager(foodStorage, revenueStorage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (checkFileAvailable()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            System.out.println(\"Loading file from : \" + fileFullPath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            // read from file"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                FileInputStream fileInput \u003d new FileInputStream(fileFullPath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                ObjectInputStream in \u003d new ObjectInputStream(fileInput);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                storageManager \u003d (StorageManager)in.readObject();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                fileInput.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                in.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return storageManager;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Saves the StorageManage object into a file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storageManager containing FoodStorage \u0026 RevenueStorage data to save."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException exception happens in writing to the data file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void save(StorageManager storageManager) throws CubeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        checkFileAvailable();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            FileOutputStream fileSave \u003d new FileOutputStream(fileFullPath, false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(fileSave);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            out.writeObject(storageManager);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            fileSave.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 113
    }
  },
  {
    "path": "src/main/java/cube/util/FileUtilJson.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kuromono"
        },
        "content": "package cube.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.DeserializationFeature;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.databind.ObjectMapper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.annotation.PropertyAccessor;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.exception.CubeLoadingException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.FoodStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.RevenueStorage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kuromono"
        },
        "content": "import cube.storage.StorageManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kuromono"
        },
        "content": "public class FileUtilJson {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private String fileFullPath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    private static final String fileName \u003d \"cube.json\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Constructor with one argument."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param filePath the directory path where data will be stored."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public FileUtilJson(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        this.fileFullPath \u003d filePath + File.separator + fileName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Creates the parent directory and file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param file the file at which should be created."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void create(File file) throws CubeLoadingException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Returns true if the data file is available, otherwise makes a new data file and returns false."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return true if data file available, otherwise false."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs when unable to create new file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public boolean checkFileAvailable() throws CubeLoadingException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        File file \u003d new File(fileFullPath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            create(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Loads serialized StorageManager object from the file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeLoadingException exception occurs in reading from data file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public StorageManager load() throws CubeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        FoodStorage foodStorage \u003d new FoodStorage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        RevenueStorage revenueStorage \u003d new RevenueStorage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        StorageManager storageManager \u003d new StorageManager(foodStorage, revenueStorage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        if (checkFileAvailable()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            System.out.println(\"Loading file from : \" + fileFullPath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            // read from file"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                File fileSave \u003d new File(fileFullPath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                storageManager \u003d mapper.readValue(fileSave, StorageManager.class);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kuromono"
        },
        "content": "                throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        return storageManager;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * Saves the StorageManage object into a file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @param storageManager containing FoodStorage \u0026 RevenueStorage data to save."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     * @throws CubeException exception happens in writing to the data file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kuromono"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    public void save(StorageManager storageManager) throws CubeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        checkFileAvailable();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            File fileSave \u003d new File(fileFullPath);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            ObjectMapper mapper \u003d new ObjectMapper();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            //mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            //mapper.setVisibility(PropertyAccessor.FIELD, Visibility.ANY);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            mapper.writeValue(fileSave, storageManager);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kuromono"
        },
        "content": "            throw new CubeLoadingException(fileFullPath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kuromono"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kuromono"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kuromono"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kuromono"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kuromono": 112
    }
  }
]
