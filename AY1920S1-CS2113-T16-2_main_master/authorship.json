[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "group \u0027dukemasters\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00271.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "task fatJar(type: Jar) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        attributes \u0027Implementation-Title\u0027: \u0027Duke JAR\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Implementation-Version\u0027: version,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Main-Class\u0027: \u0027Duke\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    baseName \u003d project.name + \u0027-all\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    with jar"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    compile \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    compile \u0027com.google.code.gson:gson:2.8.5\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 3,
      "-": 41
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.extensions.AbnormalityChecker;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * duke.command.AddCommand that deals with the adding of new duke.task.Task objects to the duke.tasklist.TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    boolean isRecurring \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    boolean hasDuration \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    String recurrencePeriod;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(String description, String taskType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        checkForFlag();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private void checkForFlag() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        String[] flagArray \u003d description.split(\"-\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        if (flagArray.length !\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (flagArray[1].charAt(0)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                case \u0027r\u0027:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    isRecurring \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    description \u003d flagArray[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    recurrencePeriod \u003d flagArray[1].substring(2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                case \u0027d\u0027:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                    hasDuration \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws ParseException, IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                if (hasDuration) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                    String[] flagArray \u003d description.split(\" -\", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                    int duration \u003d Integer.parseInt(flagArray[1].substring(2));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                    tasks.add(new FixedDurationTask(flagArray[0], duration));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                } else if (isRecurring) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    tasks.add(new ToDo(description, recurrencePeriod));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                    tasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] dInfo \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                SimpleDateFormat dFormat \u003d new SimpleDateFormat(\"ddMMyyyy HHmm\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                Date by \u003d dFormat.parse(dInfo[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                if (isRecurring) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    tasks.add(new Deadline(dInfo[0], by, recurrencePeriod));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                    tasks.add(new Deadline(dInfo[0], by));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] eInfo \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                SimpleDateFormat eFormat \u003d new SimpleDateFormat(\"ddMMyyyy HHmm\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                Date at \u003d eFormat.parse(eInfo[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                Event newEvent;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                if (isRecurring) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    newEvent \u003d new Event(eInfo[0], at, recurrencePeriod);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    newEvent \u003d new Event(eInfo[0], at);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                AbnormalityChecker abnormalityChecker \u003d new AbnormalityChecker(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                if (abnormalityChecker.checkEventClash(newEvent)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"There is a clash with another event at the same time\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    tasks.add(newEvent);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaun97": 18,
      "nicholasnovakovic": 17,
      "-": 62
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * duke.command.DeleteCommand which executes the procedure for deleting duke.task.Task objects from the duke.tasklist.TaskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\tprivate int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic DeleteCommand(String index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tthrow new DukeException(\"There is no such task.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tui.showLine(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tTask t \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tui.showLine(\"  \" + t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t\ttasks.remove(index - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tif (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tui.showLine(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t\tui.showLine(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tstorage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 4,
      "-": 38
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Class that deals with the saving and loading of all duke.task.Task data the user has saved"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Uses JSON file as the file type which the duke.tasklist.TaskList is saved"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Loads the data stored in the JSON file into an ArrayList of Tasks that"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * can be used to construct a new instance of duke.tasklist.TaskList which has all the saved duke.task.Task data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\tString filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Constructor of the storage class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Takes in the file path of where the JSON file with the saved data is stored on the computer"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param filePath the location in the directory where the JSON file is"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Reads all the data saved in the JSON file specified in the filePath attribute"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Converts the data into an ArrayList of Tasks with all saved duke.task.Task data"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Returns this ArrayList for user to update progress or new tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @return ArrayList of duke.task.Task the ArrayList with all the saved duke.task.Task data"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @throws FileNotFoundException in case of the file not beign found, a new instance will be created and all"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\t * previous data will be lost"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tGson gson \u003d new Gson();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tJsonReader reader \u003d new JsonReader(new FileReader(\"data/duke.json\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tType type \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tArrayList\u003cTask\u003e tasks \u003d gson.fromJson(reader, type);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Transfers all current duke.task.Task data saved in the duke.tasklist.TaskList into an ArrayList of Tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Writes all data in this ArrayList onto the JSON file specified in the filePath attribute"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param tasks the duke.tasklist.TaskList with all the saved duke.task.Task data"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @throws IOException in case of IOException then the error in failure of saving should be shown to user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tFileWriter writer \u003d new FileWriter(\"data/duke.json\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tArrayList\u003cTask\u003e list\u003d tasks.getList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tGson gson \u003d new GsonBuilder().create();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tgson.toJson(list, writer);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\t\twriter.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 1,
      "-": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Subclass of duke.task.Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Describes an event which is classified as a deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    private Date datetime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Constructor of deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Creates an instance of a deadline object by taking in its description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * and the date which it should be done by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaun97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * @param description the description of the deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * @param by          the date and time which the deadline should be done by"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    public Deadline(String description, Date by, String recurrencePeriod) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        super(description, recurrencePeriod);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        this.datetime \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        this.type \u003d \"[D]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        this(description, by, \"none\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        return super.toString() + \" (by: \" + datetime + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaun97": 7,
      "nicholasnovakovic": 15,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Subclass of duke.task.Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Describes specific type of task which can be classified as an event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\tprivate Date datetime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Constructor for duke.task.Event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Takes in a String description like superclass duke.task.Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Takes in another parameter Date to store when the duke.task.Event should be held at"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Allows reminding of user for when the duke.task.Event is going to be"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param description the description of the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param at the date and time at which the event will be held"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\tpublic Event(String description, Date at, String recurrencePeriod) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\t\tsuper(description, recurrencePeriod);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.datetime \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.type \u003d \"[E]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\tpublic Event(String description, Date at) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\t\tthis(description, at, \"none\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic Date getDatetime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn this.datetime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn super.toString() + \" (at: \" + datetime + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaun97": 6,
      "-": 32
    }
  },
  {
    "path": "src/main/java/duke/task/FixedDurationTask.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Subclass of duke.task.Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Describes a task which has a fixed duration to complete"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class FixedDurationTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate Integer duration;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor of FixedDuration"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Creates an instance of a FixedDurationTask which will be able to"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * display to user what the task is and how long it take to complete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param description the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param duration how long the task needs to complete in hours"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic FixedDurationTask(String description, int duration) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.duration \u003d duration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.type \u003d \"[F]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn super.toString() + \" (needs \" + duration + \" hours)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaun97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaun97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Superclass for all Tasks that will be added to the duke.task.Task Manager"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    enum RecurrencePeriod {NONE, DAILY, WEEKLY}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    protected LocalDate dateCreated;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    protected RecurrencePeriod recurrencePeriod;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Constructor function for duke.task.Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Creates a new instance of duke.task.Task by taking in a String description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Automatically flags the boolean isDone as False"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Default Tasks have no type"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaun97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    public Task(String description, String recurrencePeriod) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        this.type \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        this.dateCreated \u003d LocalDate.now();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        switch (recurrencePeriod) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            case \"none\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                this.recurrencePeriod \u003d RecurrencePeriod.NONE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            case \"daily\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                this.recurrencePeriod \u003d RecurrencePeriod.DAILY;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            case \"weekly\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                this.recurrencePeriod \u003d RecurrencePeriod.WEEKLY;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    \tthis(description, \"none\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Returns a String object to show if a duke.task.Task has been marked done or not"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaun97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * @return tick if done or X symbol if not done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Flags the boolean attribute isDone as true in a task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Prints out the confirmation that the task is marked done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    public void markAsUndone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    public void recurringTaskChecker() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        switch (recurrencePeriod) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            case DAILY:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                if (ChronoUnit.HOURS.between(dateCreated, LocalDate.now()) % 24 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    markAsUndone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            case WEEKLY:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                if (ChronoUnit.DAYS.between(dateCreated, LocalDate.now()) % 7 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                    markAsUndone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaun97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaun97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * Returns a String which describes the task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaun97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        String recurringDescription \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        String recurringIcon \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        if (recurrencePeriod \u003d\u003d RecurrencePeriod.DAILY) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            recurringDescription \u003d \"every day\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            recurringIcon \u003d \"[R]\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        } else if (recurrencePeriod \u003d\u003d RecurrencePeriod.WEEKLY) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            recurringDescription \u003d \"every week\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shaun97"
        },
        "content": "            recurringIcon \u003d \"[R]\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shaun97"
        },
        "content": "        return recurringIcon + type + \"[\" + this.getStatusIcon() + \"] \" + description + recurringDescription;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaun97": 58,
      "nicholasnovakovic": 42,
      "-": 12
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Subclass of duke.task.Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * For any task that is not urgent enough to warrant a deadline or any events that are upcoming"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Constructor of duke.task.ToDo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\t * Works similarly as superclass duke.task.Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructs a task which has no fixed duration to complete"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\t * @param description the description of the duke.task.ToDo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\tpublic ToDo(String description, String recurrencePeriod) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\t\tsuper(description, recurrencePeriod);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\t\tthis.type \u003d \"[T]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\tpublic ToDo(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\t\tthis(description, \"none\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaun97"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaun97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\t\treturn super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaun97": 6,
      "nicholasnovakovic": 1,
      "-": 20
    }
  }
]
