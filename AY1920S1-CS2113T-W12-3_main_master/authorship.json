[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    archiveBaseName \u003d \"HallBooker\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    archiveVersion \u003d \"1.4\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.base\u0027 ]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 44,
      "AmosChan97": 24
    }
  },
  {
    "path": "src/main/java/Facility.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class Facility {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected String roomCode;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //protected String Name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected ArrayList\u003cItems\u003e inventory; //convert to 2d array"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected int capacity;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected Facility(String roomCode, int capacity) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.roomCode \u003d roomCode;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.capacity \u003d capacity;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * To add a new item into the room\u0027s inventory."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param item the new entry"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param amount the quantity of the item"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected void addInventory(String item, int amount) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Items entry \u003d new Items(item, amount);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        inventory.add(entry);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * To edit the inventory of the room."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param item to edit"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param amount new quantity of item"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected void editInventory(String item, int amount) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (int i \u003d 0; i \u003c inventory.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if (inventory.get(i).name.contains(item)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                inventory.get(i).amount \u003d amount;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                System.out.println(\"This place now has:\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                System.out.println((i + 1) + \". \" + inventory.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            System.out.println(\"No items match your search!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 52
    }
  },
  {
    "path": "src/main/java/Items.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class Items {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    int amount;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    Items(String name, int amount) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return (this.name + \" : \" + this.amount);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 15
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import control.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * A GUI for control.Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private Duke duke \u003d new Duke(BookingConstants.FILENAME, Constants.ROOMFILENAME,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            Constants.INVENTORYFILENAME, Constants.USERFILENAME);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            stage.setTitle(\"Hall Booker\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.\u003cUi\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            System.out.println(\"Application cannot be run\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 1,
      "zkchang97": 2,
      "AmosChan97": 34
    }
  },
  {
    "path": "src/main/java/booking/ApprovedList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class ApprovedList extends BookingList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * list for approved requests."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param loader load the line from file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException entry error"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public ApprovedList(ArrayList\u003cString\u003e loader) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (String line : loader) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            String[] splitStr \u003d line.split(\" \\\\| \", 7);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.add(new Booking(splitStr[BookingConstants.USERNAME],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    splitStr[BookingConstants.VENUE], splitStr[BookingConstants.DESCRIPTION],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    splitStr[BookingConstants.TIMESTART], splitStr[BookingConstants.TIMEEND],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    splitStr[BookingConstants.STATUS], splitStr[6]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public ApprovedList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 31
    }
  },
  {
    "path": "src/main/java/booking/Booking.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Booking {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected LocalDateTime dateTimeStart;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected LocalDate dateStart;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected LocalTime timeEnd;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected String venue;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String approvedBy;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Facility.booking.Booking constructor to make booking"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param username      the requestor"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param roomcode      the specific room code"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param description   what you are going to use the room for"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param dateTimeStart when you are booking the facility"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param dateTimeEnd   when your booked period ends"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public Booking(String username, String roomcode, String description, String dateTimeStart,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                   String dateTimeEnd) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.venue \u003d roomcode;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            DateTimeFormatter formatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.dateTimeStart \u003d LocalDateTime.parse(dateTimeStart, formatterStart);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.dateStart \u003d this.dateTimeStart.toLocalDate();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.timeEnd \u003d LocalTime.parse(dateTimeEnd, formatterEnd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.name \u003d username;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.status \u003d \"P\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.approvedBy \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(BookingConstants.DATETIMEERROR);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Facility.booking.Booking constructor to generate booking entry from file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param username the requestor"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param roomcode the venue"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param description for what use"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param atStart start date and time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param atEnd end date and time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param status request status"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public Booking(String username, String roomcode, String description, String atStart,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                   String atEnd, String status, String approvedBy) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.venue \u003d roomcode;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Date storedStart \u003d new Date(Long.parseLong(atStart));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Date storedEnd \u003d new Date(Long.parseLong(atEnd));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.dateTimeStart \u003d storedStart.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.dateStart \u003d storedStart.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.timeEnd \u003d storedEnd.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.name \u003d username;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.approvedBy \u003d approvedBy;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * String version of the booking entry."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @return booking entry string version"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        DateTimeFormatter formatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return name + \" \" + venue + \" \" + dateTimeStart.format(formatterStart) + \" to \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                + timeEnd.format(formatterEnd) + \" \" +  status;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Version of entry to be stored in file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @return String entry for file"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Date storeTimeStart \u003d Date.from(dateTimeStart.atZone(ZoneId.systemDefault()).toInstant());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Instant timeEndInstant \u003d timeEnd.atDate(dateStart).atZone(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Date storeTimeEnd \u003d Date.from(timeEndInstant);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return this.name + \" | \" + this.venue + \" | \" + this.description + \" | \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                + storeTimeStart.getTime() + \" | \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + storeTimeEnd.getTime() + \" | \" + this.status + \" | \" + this.approvedBy + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public LocalDateTime getDateTimeStart() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return this.dateTimeStart;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public LocalTime getTimeEnd() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return this.timeEnd;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public String getVenue() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return this.venue;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void setDescription(String newDescription) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void setStatus(String newstatus) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.status \u003d newstatus;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public LocalDate getDateStart() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return dateStart;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public int getStartMonth() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return dateStart.getMonth().getValue();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public LocalTime getTimeStart() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return dateTimeStart.toLocalTime();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public int getStartYear() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return dateStart.getYear();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void approveStatus(String username) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        status \u003d \"A\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        approvedBy \u003d username;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void rejectStatus(String username) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        status \u003d \"R\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        approvedBy \u003d username;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String getApprovedBy() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return approvedBy;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 132,
      "AmosChan97": 30
    }
  },
  {
    "path": "src/main/java/booking/BookingList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class BookingList extends ArrayList\u003cBooking\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Create booking list from text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param loader strings from text file containing booking info"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException if file format incorrect"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public BookingList(ArrayList\u003cString\u003e loader) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (String line : loader) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            String[] splitStr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.add(new Booking(splitStr[BookingConstants.USERNAME],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    splitStr[BookingConstants.VENUE], splitStr[BookingConstants.DESCRIPTION],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    splitStr[BookingConstants.TIMESTART], splitStr[BookingConstants.TIMEEND],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    splitStr[BookingConstants.STATUS], splitStr[BookingConstants.APPROVEDBY]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public BookingList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * To check if a request with the same place and time slot has already been made."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param bookinglist the list of requests"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param roomcode the room in question"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param timeStart the starting time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param timeEnd the ending time"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @return if there is already a request with that venue and time slot"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static boolean checkBooking(BookingList bookinglist, String roomcode, String timeStart, String timeEnd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        DateTimeFormatter formatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        LocalDateTime startDateTime \u003d LocalDateTime.parse(timeStart, formatterStart);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        LocalDate dateStart \u003d startDateTime.toLocalDate();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        LocalTime startTime \u003d startDateTime.toLocalTime();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        LocalTime endTime \u003d LocalTime.parse(timeEnd, formatterEnd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean startAfter \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean startBefore \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean endAfter \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean endBefore \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        boolean startBetween \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        boolean endBetween \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (int i \u003d 0; i \u003c bookinglist.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            startAfter \u003d bookinglist.get(i).getTimeStart().isAfter(startTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            startBefore \u003d bookinglist.get(i).getTimeStart().isBefore(startTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            endAfter \u003d bookinglist.get(i).getTimeEnd().isAfter(endTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            endBefore \u003d bookinglist.get(i).getTimeEnd().isBefore(endTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            startBetween \u003d (bookinglist.get(i).getTimeStart().isAfter(startTime)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u0026\u0026 bookinglist.get(i).getTimeStart().isBefore(endTime))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    || (startTime.isAfter(bookinglist.get(i).getTimeStart())"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u0026\u0026 startTime.isBefore(bookinglist.get(i).getTimeEnd()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            endBetween \u003d (bookinglist.get(i).getTimeEnd().isAfter(startTime)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u0026\u0026 bookinglist.get(i).getTimeEnd().isBefore(endTime))"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    || (endTime.isAfter(bookinglist.get(i).getTimeStart())"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u0026\u0026 endTime.isBefore(bookinglist.get(i).getTimeEnd()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if ((bookinglist.get(i).venue.equals(roomcode)) \u0026\u0026 (bookinglist.get(i).getDateStart().equals(dateStart))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                if ((!startAfter \u0026\u0026 !startBefore) \u0026\u0026 (!endAfter \u0026\u0026 !endBefore)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                } else if (startAfter \u0026\u0026 endBefore) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                } else if (startBefore \u0026\u0026 endAfter) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                } else if (startBetween || endBetween) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 60,
      "zkchang97": 2,
      "AmosChan97": 21
    }
  },
  {
    "path": "src/main/java/command/AddBookingCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class AddBookingCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String[] splitC;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String[] splitD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String[] splitE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String[] datetime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String timeStart;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String timeEnd;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String room;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private BookingList bookingList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@author Alex-Teo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Create new booking request."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * format is add NAME DESCRIPTION /at ROOM_CODE /from DATE TIMESTART /to DATE TIMEEND"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException when entry is incorrect"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public AddBookingCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (!input.contains(\"/from\") || !input.contains(\"/at\") || !input.contains(\"/to\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                   + \"OOPS!!! Please create your booking with the following format: \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"add NAME DESCRIPTION /at ROOM_CODE /from DATE TIMESTART /to TIMEEND\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                   + \", DATE TIME format is dd/mm/yyyy HHMM \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String temp \u003d input.substring(3).trim(); // name description /at roomcode /from dd/mm/yyyy hhmm /to hhmm"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        splitC \u003d temp.split(\"/at\", 2); //splitC[] \u003d {name, description, roomcode, dd/mm/yyyy hhmm /to hhmm)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitC.length \u003c 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"OOPS!!! Please create your booking with the following format: \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"description, roomcode, date and time\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        splitE \u003d splitC[0].split(\" \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.name \u003d splitE[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.description \u003d splitE[1]; // description"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        splitD \u003d splitC[1].split(\"/from\", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.room \u003d splitD[0].trim(); // roomcode"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.datetime \u003d splitD[1].split(\"/to\", 2); // datetime[] \u003d {dd/mm/yyyy hhmm, dd/mm/yyyy hhmm}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.timeStart \u003d datetime[0].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.timeEnd \u003d datetime[1].trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Executes the command to add a room to the system."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param roomList room list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param bookingList bookings list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param allStorage all the storage in command execution"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException if a clash in booking is found"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException if input entry is incorrect"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Booking newBooking \u003d new Booking(name, room, description, timeStart, timeEnd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean clash \u003d BookingList.checkBooking(bookingList, room, timeStart, timeEnd);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (clash) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \" OOPS!!! This slot is already filled, please choose another vacant one\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean valid \u003d roomList.checkRoom(room);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (!valid) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! This room doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        bookingList.add(newBooking);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        allStorage.getBookingStorage().saveToFile(bookingList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(\"Got it. I\u0027ve added this request:\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                + newBooking.toString() + \"\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                + \"Now there are \" + bookingList.size() + \" request(s) in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 89,
      "wyinnnn": 1,
      "AmosChan97": 4,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/AddInventoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "public class AddInventoryCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private int quantity;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private String[] splitC;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private Item newItem;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Creates new inventory item."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * format is: addinventory NAME /qty QUANTITY /in ROOM"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @param input    from user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @throws IOException   when entry is incorrect"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public AddInventoryCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 3) { //length of splitStr array"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create your inventory with the following format: name, quantity\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        if (!input.contains(\" /qty \")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            throw new DukeException(\"Please add the quantity of your item after /qty\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        String temp \u003d input.substring(13);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        splitC \u003d temp.split(\" /qty \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        if (splitC.length \u003c 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create your inventory with the following format:\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \" NAME /qty QUANTITY\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        this.name \u003d splitC[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            this.quantity \u003d Integer.parseInt(splitC[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            throw new DukeException(\"Please only input the Quantity in whole numbers\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        newItem \u003d new Item(name, quantity);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * Executes the command to add a room to the system."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * //@param roomList room list"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @param inventory bookings list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param allStorage all the storage in command execution"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @throws DukeException if a clash in booking is found"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @throws IOException if input entry is incorrect"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        boolean clash \u003d Inventory.checkInventory(inventory, name); //make this function in Inventory class"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        if (clash) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! ITEM ALREADY EXISTS \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        inventory.add(newItem);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        allStorage.getInventoryStorage().saveToFile(inventory);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        ui.addToOutput(\"Got it, I\u0027ve added this to inventory.\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "                + newItem.toString() + \"\\n\" + \"Now you have \" + inventory.size() + \" item(s) in the inventory.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 15,
      "wyinnnn": 69,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/AddRoomCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import room.Room;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class AddRoomCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private String[] splitC;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private String roomcode;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private String[] datesplit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private String dateStartTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private String endTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    //@@author zkchang97"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Creates a new room entry in the list of rooms."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Format is addroom ROOMCODE /date DD/MM/YYYY HHMM /to HHMM"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @throws DukeException when format is incorrect"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public AddRoomCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"Please enter the following to add a room:\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    + \"addroom ROOMCODE /date DD/MM/YYYY HHMM /to HHMM.\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (!input.contains(\" /date \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"Please enter correct date and start-time for the room.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (!input.contains(\" /to \")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"Please enter an end-time for the room.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        // addroom ROOMCODE /date DATE TIMESTART /to TIMEEND"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        String tempAR \u003d input.substring(8);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        splitC \u003d tempAR.split(\" /date \", 2); // splitC[] \u003d {ROOMCODE, DATE TIMESTART /to TIMEEND}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.roomcode \u003d splitC[0]; // ROOMCODE"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.datesplit \u003d splitC[1].split(\" /to \", 2); // datesplit[] \u003d\u003d {DATE TIMESTART, TIMEEND}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.dateStartTime \u003d datesplit[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.endTime \u003d datesplit[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Executes the command to add a room to the system."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param roomList room list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param bookingList bookings list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param allStorage booking storage in command execution"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @throws IOException if input entry is incorrect"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        Room addroom \u003d new Room(roomcode, dateStartTime, endTime);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        roomList.add(addroom);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        allStorage.getRoomStorage().saveToFile(roomList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        ui.addToOutput(\"Got it, I\u0027ve added this room.\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            + addroom.toString() + \"\\n\" + \"Now you have \" + roomList.size() + \" room(s) in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 3,
      "zkchang97": 65,
      "wyinnnn": 3,
      "AmosChan97": 2,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/AddUserCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import control.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.User;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class AddUserCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private String[] splitL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    //@@ AmirAzhar"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * User login."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public AddUserCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! Please enter a username u would like to register!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.splitL \u003d input.split(\"adduser \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throws DukeException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (UserList.checkExistence(userList, splitL[1])) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(\"Sorry, that user already exists!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            User user \u003d new User(splitL[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            userList.add(user);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            allStorage.getUserStorage().saveToFile(userList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            ui.addToOutput(\"You have successfully created an account: \" + user.getUsername());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 6,
      "AmirAzhar": 43
    }
  },
  {
    "path": "src/main/java/command/ApproveCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Item;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class ApproveCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@author Alex-Teo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Approve a request."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * format is approve name roomcode date time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException when entry is incorrect"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public ApproveCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create the booking you want to approve\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \" with the following format: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"index\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            index \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter a index in integer form!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        index -\u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (!userList.getLoginStatus()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"Please log in to approve or reject bookings.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d bookingList.size()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index you have entered is out of bounds\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        bookingList.get(index).approveStatus(userList.getCurrentUser());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(\"This request has been approved\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(bookingList.get(index).toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        //bookingstorage.saveToFile(approvedList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        allStorage.getBookingStorage().saveToFile(bookingList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 61,
      "wyinnnn": 4,
      "AmosChan97": 1,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * command.Command to exit control.Duke programme."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * If \"bye\" is entered."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param bookingList task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if IOException found"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @throws DukeException if control.Duke specific exception found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 6,
      "wyinnnn": 2,
      "-": 22,
      "AmosChan97": 4,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Abstract class from which all Commands are the extended from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Execute command logic."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param bookingList bookings list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @throws DukeException if control.Duke specific exception found"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if IO exception found"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Check if date-time input is in valid format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateTime date and time for some tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true is input is valid"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static boolean isValidDateTime(String dateTime) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        SimpleDateFormat dateTimeFormat \u003d  new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            dateTimeFormat.parse(dateTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 6,
      "zkchang97": 2,
      "wyinnnn": 3,
      "-": 42,
      "AmosChan97": 3,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/DeleteBookingCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "//@@author amoschan97"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class DeleteBookingCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Booking deletedBooking;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    //@@ AmosChan97"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Deletes a booking from the booking list based on the index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param input raw user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param splitStr tokenized user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @throws DukeException if no index is entered or index is not an integer"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public DeleteBookingCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please add the index for the booking you want to delete.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        input \u003d input.substring(7);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            this.index \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!!! Index should be an integer.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (index \u003c 0 || index \u003e bookingList.size() - 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!!! You have entered an index that is out of bounds.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        deletedBooking \u003d bookingList.get(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        bookingList.remove(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            allStorage.getBookingStorage().saveToFile(bookingList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!!! An error occurred while deleting your booking!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.addToOutput(\"This booking has been successfully removed:\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + deletedBooking.toString()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + \"\\nYou now have \" + bookingList.size() + \" bookings in your list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 2,
      "wyinnnn": 2,
      "AmosChan97": 56,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/DeleteRoomCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.Room;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class DeleteRoomCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private Room deletedRoom;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    //@@author zkchang97"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Deletes a room from the room list based on index (1-based)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param splitStr tokenized user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @throws DukeException if no index is entered or index is not an integer"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public DeleteRoomCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please add the index for the room you want to delete.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        input \u003d input.substring(11);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            this.index \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"OOPS!!! Index should be an integer.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Executes the command to delete a room from room list to the system."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param roomList list of rooms"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param bookingList bookings list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param allStorage all the storage related places"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (index \u003c 0 || index \u003e roomList.size() - 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"OOPS!!! You have entered an index that is out of bounds.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        deletedRoom \u003d roomList.get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        roomList.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            allStorage.getRoomStorage().saveToFile(roomList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"OOPS!!! An error occurred while deleting your booking!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        ui.addToOutput(\"This room has been successfully removed:\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + deletedRoom.toString()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"\\nYou now have \" + roomList.size() + \" rooms in your list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 2,
      "zkchang97": 61,
      "wyinnnn": 2,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/EditBookingCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class EditBookingCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private String[] splitC;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String textToEdit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@author Alex-Teo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Edit the description of a booking request."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * format: edit roomcode Start date and time description"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException when format not allowed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException when entry is incorrect"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public EditBookingCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please enter the index of the item you want to edit as well as the \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"updated description of your booking!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            index \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            index -\u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! Please enter the index in integer format\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        splitC \u003d input.split(\" \", 3);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        textToEdit \u003d splitC[2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        bookingList.get(index).setDescription(textToEdit);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(\"The description of this request has been changed!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(bookingList.get(index).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        allStorage.getBookingStorage().saveToFile(bookingList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 56,
      "wyinnnn": 3,
      "AmosChan97": 2,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/FindBookingCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class FindBookingCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String textToFind;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@author Alex-Teo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Find the booking request matching the room, date, time and user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException format error"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException entry error"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public FindBookingCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please input some keywords to search for!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        textToFind \u003d input.substring(5);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (int i \u003d 0; i \u003c bookingList.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if (bookingList.get(i).getDescription().contains(textToFind)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                ui.addToOutput(i + 1 + \". \" + bookingList.get(i).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            ui.addToOutput(\"No items match your search!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 51,
      "wyinnnn": 3,
      "AmosChan97": 1,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/FindBookingIndexCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class FindBookingIndexCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@author  Alex-Teo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Find booking via index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException input error"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public FindBookingIndexCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create your booking with the following format: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"index\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        index \u003d Integer.valueOf(input.substring(10)) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (index \u003e\u003d bookingList.size()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"OOPS!!!  No such entry exist!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            Booking result \u003d bookingList.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            ui.addToOutput((index + 1) + \". \" + result.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 46,
      "wyinnnn": 3,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        ui.showHelp();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 5,
      "zkchang97": 16
    }
  },
  {
    "path": "src/main/java/command/ListBookingDailyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class ListBookingDailyCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private LocalDate dateStart;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Show all bookings on a certain day."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException when entry is invalid"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public ListBookingDailyCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create your booking with the following format: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"date\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String date \u003d input.substring(8);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.dateStart \u003d LocalDate.parse(date, formatterStart);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(BookingConstants.DATEERROR);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        //int n \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(\"Here are the bookings: \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if (i.getDateStart().equals(this.dateStart)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                ui.addToOutput((bookingList.indexOf(i) + 1) + \". \" + i.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 58,
      "wyinnnn": 3,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/ListBookingMonthCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class ListBookingMonthCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private LocalDate dateStart;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private int monthStart;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Show all bookings in a certain month."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException when entry is ivalid due to format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public ListBookingMonthCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create your booking with the following format: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"month value\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.monthStart \u003d Integer.parseInt(input.substring(10));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        boolean bookingExists \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(\"Here are the bookings: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if (i.getStartMonth() \u003d\u003d this.monthStart) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                ui.addToOutput((bookingList.indexOf(i) + 1) + \". \" + i.toString() + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                bookingExists \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!bookingExists) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!! There are no bookings for this month\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 49,
      "wyinnnn": 1,
      "AmosChan97": 5,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/ListBookingYearCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import inventory.Item;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import user.User;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class ListBookingYearCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private LocalDate dateStart;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * listing the bookings in a year."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException input error"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public ListBookingYearCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create your booking with the following format: \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"date\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String date \u003d input.substring(9);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            this.dateStart \u003d LocalDate.parse(date, formatterStart);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(BookingConstants.DATEERROR);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        ui.addToOutput(\"Here are the bookings: \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if (i.getStartYear() \u003d\u003d this.dateStart.getYear()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                ui.addToOutput((bookingList.indexOf(i) + 1) + \". \" + i.toString() + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 60,
      "zkchang97": 2
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "//@@author amoschan97"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    //@@ AmosChan97"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Prints to the UI a list containing all bookings made."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param roomList list of rooms"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param bookingList bookings list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @throws DukeException if there are no bookings"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (bookingList.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS! There are no bookings in your list\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.addToOutput(\"Here are the bookings: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 3,
      "wyinnnn": 3,
      "-": 6,
      "AmosChan97": 23,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/ListInventoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "public class ListInventoryCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyinnnn": 5
    }
  },
  {
    "path": "src/main/java/command/ListRoomCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class ListRoomCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    //@@author zkchang97"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Executes the command to list the rooms in the text file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param roomList list of rooms"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param bookingList bookings list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param allStorage all storages in command execution"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @throws DukeException when entry is invalid due to formatting"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (roomList.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throw new DukeException(\"The room list is empty. Please add a room.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        ui.addToOutput(\"Here are the rooms in the room list: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        for (int i \u003d 0; i \u003c roomList.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            ui.addToOutput(i + 1 + \". \" + roomList.get(i).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 3,
      "zkchang97": 37,
      "wyinnnn": 3,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/LoginCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class LoginCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private String[] splitL;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@ AmirAzhar"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * User login."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public LoginCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! Please login with your username!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.splitL \u003d input.split(\"login \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!userList.getLoginStatus()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            boolean isValid \u003d UserList.checkExistence(userList, splitL[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            if (isValid) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                userList.setCurrentUser(splitL[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                userList.login();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                ui.addToOutput(\"You have successfully logged in as: \" + userList.getCurrentUser());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                throw new DukeException(\"The user does not exist!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(\"You are already logged in!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 10,
      "wyinnnn": 1,
      "AmosChan97": 6,
      "AmirAzhar": 34
    }
  },
  {
    "path": "src/main/java/command/LogoutCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class LogoutCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private String[] splitL;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@ AmirAzhar"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (!userList.getLoginStatus()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!!! You are not currently logged in!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        userList.logout();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.addToOutput(\"You have successfully logged out from: \" + userList.getCurrentUser());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        userList.setCurrentUser(null);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 6,
      "zkchang97": 1,
      "wyinnnn": 1,
      "AmosChan97": 5,
      "AmirAzhar": 18
    }
  },
  {
    "path": "src/main/java/command/RejectCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class RejectCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    //@@author AmosChan97"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Approve a request."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * format is reject name roomcode date time"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @throws IOException when entry is incorrect"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public RejectCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please create the booking you want to approve\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    + \" with the following format: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    + \"name, roomcode, start date and time\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            index \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter a index in integer form!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        index -\u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!userList.getLoginStatus()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"Please log in to approve or reject bookings.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d bookingList.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"OOPS!!! The index you have entered is out of bounds\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        bookingList.get(index).rejectStatus(userList.getCurrentUser());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.addToOutput(\"This request has been rejected\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.addToOutput(bookingList.get(index).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        allStorage.getBookingStorage().saveToFile(bookingList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 15,
      "wyinnnn": 1,
      "AmosChan97": 41,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/command/RemoveUserCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class RemoveUserCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private String[] splitL;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    //@@ AmirAzhar"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * User login."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public RemoveUserCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! Please enter a username you would like to remove!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.splitL \u003d input.split(\"rmuser \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throws DukeException, IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        boolean isValid \u003d UserList.checkExistence(userList, splitL[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            if (splitL[1].equals(userList.getCurrentUser())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                throw new DukeException(\"OOPS! You are currently logged in as \" + userList.getCurrentUser() + \"!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                UserList.removeUser(userList, splitL[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                allStorage.getUserStorage().saveToFile(userList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                ui.addToOutput(\"You have successfully removed user: \" + splitL[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(\"The user you are trying to remove does not exist!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 6,
      "AmosChan97": 2,
      "AmirAzhar": 44
    }
  },
  {
    "path": "src/main/java/command/UnusedCreateAccountCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UnusedLogin;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UnusedUser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class UnusedCreateAccountCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private String[] splitC;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    //@@ AmirAzhar"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Create new Account for user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * format is create email password username usertype"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UnusedCreateAccountCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        File membersFile \u003d new File(\"data\\\\members.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        membersFile.createNewFile(); //if file already exists, won\u0027t create"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"Please create your account with the following format: \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"email, password, username, usertype\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.splitC \u003d input.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (UnusedLogin.checkExistence(splitC[1],\"data\\\\members.txt\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \"OOPS!!! \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"There is already an account registered under that email!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (!splitC[1].contains(\"@u.nus.edu\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"Please create an account using your NUS email ending with \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"@u.nus.edu\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        if (splitC[2].matches(\"[0-9]+\") || splitC[2].matches(\"[a-z]+\") || splitC[2].matches(\"[A-Z]+\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \"OOPS!!! Your password must contain at least \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    + \"one alphabet, one number and no special characters!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throws DukeException, IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        UnusedUser newUser \u003d new UnusedUser(splitC[1], splitC[2], splitC[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(\"data\\\\members.txt\", true));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        bw.write(newUser.toWriteFile());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        bw.newLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.addToOutput(\"Your account has been successfully created!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 37,
      "wyinnnn": 3,
      "AmosChan97": 1,
      "AmirAzhar": 33
    }
  },
  {
    "path": "src/main/java/command/UnusedLoginCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UnusedLogin;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class UnusedLoginCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private String[] splitL;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    //@@ AmirAzhar"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * User login."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UnusedLoginCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        File membersFile \u003d new File(\"data\\\\members.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        membersFile.createNewFile(); //if file already exists, won\u0027t create"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! Please login with NUS email and password\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.splitL \u003d input.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (!splitL[1].contains(\"@u.nus.edu\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    + \" OOPS!!! Please use your NUS email, ending with u.nus.edu, for login!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        boolean isVerified \u003d UnusedLogin.verifyLogin(splitL[1], splitL[2], \"data\\\\members.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (isVerified) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            UnusedLogin.setCurrentUser(splitL[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            ui.addToOutput(\"You have successfully logged in!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            ui.addToOutput(Constants.UNHAPPY + \" OOPS!!! You have entered your email/password incorrectly.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 5,
      "AmirAzhar": 52
    }
  },
  {
    "path": "src/main/java/command/UnusedLogoutCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UnusedLogin;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class UnusedLogoutCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private String[] splitL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    //@@ AmirAzhar"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * User logout."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param input    from user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param splitStr tokenized input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @throws DukeException if format not followed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UnusedLogoutCommand(String input, String[] splitStr) throws DukeException, IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (UnusedLogin.getCurrentUser().equals(\" \")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            throw new DukeException(\"You are not currently logged in!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void execute(UserList userList, Inventory inventory, RoomList roomList,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        BookingList bookingList, ApprovedList approvedList, Ui ui,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                        StorageManager allStorage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        UnusedLogin.setCurrentUser(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        ui.addToOutput(\"You have succesfully logged out!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 5,
      "AmirAzhar": 36
    }
  },
  {
    "path": "src/main/java/control/Duke.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package control;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.ApprovedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.StorageManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import user.User;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * Main control.Duke class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * control.Duke is a chatbot that manage tasks for the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private final User user;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Storage bookingStorage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private BookingList bookingList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private ApprovedList approveList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private RoomList roomList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private static UserList userList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private Storage roomStorage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private Inventory inventory;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private Storage inventoryStorage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private Storage userStorage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private StorageManager allStorages;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Constructor for control.Duke"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param bookingListFile path of text file containing bookings list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public Duke(String bookingListFile, String roomListFile, String inventoryFile, String userFile) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        bookingStorage \u003d new Storage(bookingListFile);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        roomStorage \u003d new Storage(roomListFile);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        inventoryStorage \u003d new Storage(inventoryFile);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        userStorage \u003d new Storage(userFile);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        allStorages \u003d new StorageManager(userStorage, bookingStorage, roomStorage, inventoryStorage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        user \u003d new User(\"null\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        File dir \u003d new File(Constants.DIRECTORY);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ui.addToOutput(\"Could not find data directory. Trying to create /data/\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            if (dir.mkdir()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                ui.addToOutput(\"Created /data/\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                ui.addToOutput(\"Failed to create director. \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        + \"Please manually create directory in order to continue\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            bookingList \u003d new BookingList(bookingStorage.load());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            bookingList \u003d new BookingList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            roomList \u003d new RoomList(roomStorage.load());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            roomList \u003d new RoomList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            inventory \u003d new Inventory(inventoryStorage.load());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            inventory \u003d new Inventory();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            userList \u003d new UserList(userStorage.load());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            userList \u003d new UserList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * gets response."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @return respons from chatbot"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ui.setOutput(\"\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            c.execute(userList, inventory, roomList, bookingList, approveList, ui,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    allStorages);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            System.out.println(ui.getOutput());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            return ui.getOutput();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (DukeException | IOException | ParseException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public BookingList getBookingList() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return bookingList;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public RoomList getRoomList() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return roomList;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /*public UserList getUserList() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return userList;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static UserList getUserList() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return userList;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 23,
      "zkchang97": 4,
      "wyinnnn": 6,
      "AmosChan97": 80,
      "-": 2,
      "AmirAzhar": 11
    }
  },
  {
    "path": "src/main/java/control/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package control;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.AddBookingCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.AddInventoryCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.AddRoomCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.AddUserCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.ApproveCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.ByeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.DeleteBookingCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.DeleteRoomCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.EditBookingCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.FindBookingCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.FindBookingIndexCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.HelpCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.ListBookingDailyCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.ListBookingMonthCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.ListBookingYearCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.ListRoomCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.LoginCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.LogoutCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.RejectCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import command.RemoveUserCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * Parse input and execute respective user command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Converts user input into commands for control.Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param input from user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @return Command to be executed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @throws DukeException if user enters wrong input format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static Command parse(String input) throws DukeException, IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String[] splitStr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        switch (splitStr[0]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        case \"login\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            return new LoginCommand(input, splitStr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        case \"logout\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            return new LogoutCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new AddBookingCommand(input, splitStr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        case \"addroom\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new AddRoomCommand(input, splitStr);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        case \"listroom\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new ListRoomCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new EditBookingCommand(input, splitStr);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"approve\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new ApproveCommand(input, splitStr);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"reject\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new RejectCommand(input, splitStr);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new DeleteBookingCommand(input, splitStr);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"findindex\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new FindBookingIndexCommand(input, splitStr);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new FindBookingCommand(input, splitStr);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"listday\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new ListBookingDailyCommand(input, splitStr);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"listmonth\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            return new ListBookingMonthCommand(input, splitStr);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"listyear\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            return new ListBookingYearCommand(input, splitStr);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        case \"deleteroom\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new DeleteRoomCommand(input, splitStr);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        case \"addinventory\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            return new AddInventoryCommand(input, splitStr);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        case \"adduser\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            return new AddUserCommand(input, splitStr);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        case \"rmuser\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            return new RemoveUserCommand(input, splitStr);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            throw new DukeException(Constants.UNHAPPY + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 19,
      "zkchang97": 30,
      "wyinnnn": 2,
      "AmosChan97": 27,
      "AmirAzhar": 11
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * control.Duke Exception class for exceptions unique to control.Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public DukeException(String message, Throwable throwable) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message, throwable);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "AmosChan97": 1
    }
  },
  {
    "path": "src/main/java/inventory/Inventory.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "package inventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "public class Inventory extends ArrayList\u003cItem\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * Create Inventory from text file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @param loader strings from text file containing Item info"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @throws DukeException if file format incorrect"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public Inventory(ArrayList\u003cString\u003e loader) { //loads previous inventory data stored in text file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        for (String line : loader) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            String[] splitStr \u003d line.split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            this.add(new Item(splitStr[Constants.ITEMNAME], Integer.parseInt(splitStr[Constants.ITEMQTY])));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public Inventory() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * To check if an item already exists in the current inventory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @param inventory the list of requests"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @param inputItem the item in question"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     * @return if the item already exists"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public static boolean checkInventory(Inventory inventory, String inputItem) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        for (int i \u003d 0; i \u003c inventory.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            if (inventory.get(i).getName().equals(inputItem)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 2,
      "wyinnnn": 41
    }
  },
  {
    "path": "src/main/java/inventory/Item.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "package inventory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "public class Item {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    private int quantity;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public Item(String name, int quantity) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        this.quantity \u003d quantity;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        return (this.name + \" | \" + this.quantity);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        return this.name + \" | \" + this.quantity;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyinnnn": 25
    }
  },
  {
    "path": "src/main/java/room/Room.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "package room;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Room {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    protected String roomcode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    protected LocalDateTime dateTimeStart;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    protected LocalTime timeEnd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    //@@author zkchang97"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Public constructor, returns the details of the room to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param roomcode Room code"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param dateTimeStart Available booking date and starting time of the room"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param dateTimeEnd Available booking date and ending time of the room"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Room(String roomcode, String dateTimeStart, String dateTimeEnd) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.roomcode \u003d roomcode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        DateTimeFormatter formatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.dateTimeStart \u003d LocalDateTime.parse(dateTimeStart, formatterStart);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.date \u003d this.dateTimeStart.toLocalDate();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.timeEnd \u003d LocalTime.parse(dateTimeEnd, formatterEnd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Converts text file to Room object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param roomcode room code"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param longTimeStart Available booking date and starting time of the room"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param longTimeEnd Available booking date and ending time of the room"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Room(String roomcode, Long longTimeStart, Long longTimeEnd) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.roomcode \u003d roomcode;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        Date storedTimeStart \u003d new Date(longTimeStart);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        Date storedTimeEnd \u003d new Date(longTimeEnd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.dateTimeStart \u003d storedTimeStart.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.date \u003d this.dateTimeStart.toLocalDate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.timeEnd \u003d storedTimeEnd.toInstant().atZone(ZoneId.systemDefault()).toLocalTime();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Returns the format written into the room list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @return returns the statement and symbols as shown in room list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        DateTimeFormatter formatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return (this.roomcode + \" \" + dateTimeStart.format(formatterStart) + \" to \" + timeEnd.format(formatterEnd));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Returns the format written into the text file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @return returns the statement and symbols as shown in the text file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        Date storeTimeStart \u003d Date.from(dateTimeStart.atZone(ZoneId.systemDefault()).toInstant());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        Instant timeEndInstant \u003d timeEnd.atDate(date).atZone(ZoneId.systemDefault()).toInstant();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        Date storeTimeEnd \u003d Date.from(timeEndInstant);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return (this.roomcode + \" | \" + storeTimeStart.getTime() + \" | \" + storeTimeEnd.getTime() + \" | \" + \"stored\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Getter, returns room code."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @return the room code"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String getRoomcode() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return this.roomcode;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public LocalDateTime getDateTimeStart() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return this.dateTimeStart;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public LocalTime getTimeEnd() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return this.timeEnd;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public LocalDate getDateStart() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Month getStartMonth() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return date.getMonth();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public LocalTime getTimeStart() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return dateTimeStart.toLocalTime();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 96,
      "AmosChan97": 1
    }
  },
  {
    "path": "src/main/java/room/RoomList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "package room;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class RoomList extends ArrayList\u003cRoom\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    //@@author zkchang97"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Creates room list from text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param loader Strings from text file containing room list info"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public RoomList(ArrayList\u003cString\u003e loader) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        for (String line : loader) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String[] splitStr \u003d line.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            Long longDateTimeStart \u003d Long.parseLong(splitStr[Constants.ROOMDATETIMESTART]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            Long longDateTimeEnd \u003d Long.parseLong(splitStr[Constants.ROOMDATETIMEEND]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            this.add(new Room(splitStr[Constants.ROOMCODE], longDateTimeStart, longDateTimeEnd));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Public constructor in Duke.java"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public RoomList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Checks if a room to be added is already present in the room list file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @param roomcode Room code of the target room"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @return if the room already exists in the file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * @throws IOException if the input is in the wrong format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public boolean checkRoom(String roomcode) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        for (Room i : this) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            if (i.roomcode.equals(roomcode)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static boolean checkRoom(RoomList roomlist, String roomcode, String timeStart, String timeEnd) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        DateTimeFormatter formatterEnd \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        LocalDateTime startTime \u003d LocalDateTime.parse(timeStart, formatterStart);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        LocalTime endTime \u003d LocalTime.parse(timeEnd, formatterEnd);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        for (int i \u003d 0; i \u003c roomlist.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            if (roomlist.get(i).roomcode \u003d\u003d roomcode) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                if ((roomlist.get(i).dateTimeStart.isBefore(startTime)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        || roomlist.get(i).dateTimeStart.isEqual(startTime))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        \u0026\u0026 ((roomlist.get(i).timeEnd.isAfter(endTime))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        \u0026\u0026 (roomlist.get(i).timeEnd.isBefore(endTime)))) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    found \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 2,
      "zkchang97": 67,
      "AmosChan97": 1
    }
  },
  {
    "path": "src/main/java/storage/BookingConstants.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class BookingConstants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final String FILENAME \u003d \"data/bookingslist.txt\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final int USERNAME \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final int VENUE \u003d 1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final int DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final int TIMESTART \u003d 3;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final int TIMEEND \u003d 4;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final int STATUS \u003d 5;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final int APPROVEDBY \u003d 6;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final String DATETIMEERROR \u003d \"Not able to parse the date for all patterns given, \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            + \"please use this format: add NAME DESCRIPTION /at ROOM_CODE /from DATE TIMESTART /to TIMEEND\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            + \", DATE TIMESTART format is dd/mm/yyyy HHMM, TIMEEND is HHMM\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final String DATEERROR \u003d \"Not able to parse the date for all patterns given, \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            + \"please use this format: DATE\" + \", DATE format is dd/mm/yyyy\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 15,
      "AmosChan97": 2
    }
  },
  {
    "path": "src/main/java/storage/Constants.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains project-wide constants."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static final String ROOMFILENAME \u003d \"data\\\\roomlist.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public static final String INVENTORYFILENAME \u003d \"data\\\\inventory.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static final String USERFILENAME \u003d \"data\\\\users.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final String DIRECTORY \u003d \"data\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final int TYPE \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final int ISDONE \u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final int DESCRIPTION \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static final int ROOMCODE \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final int TIME \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final int TIMESTART \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final int TIMEEND \u003d 4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public static final int ITEMNAME \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public static final int ITEMQTY \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static final int ROOMDATETIMESTART \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static final int ROOMDATETIMEEND \u003d 2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static final String UNHAPPY \u003d \":-(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 1,
      "zkchang97": 4,
      "wyinnnn": 3,
      "-": 7,
      "AmosChan97": 7,
      "AmirAzhar": 1
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import room.Room;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Inventory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "import inventory.Item;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.User;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles read and write to text file to contain task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Text file to read or write."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private File fileToRead;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        fileToRead \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Convert contents of text file to task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Tasklist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws FileNotFoundException if file not found"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner scanFile \u003d new Scanner(fileToRead);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cString\u003e textLoaded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        while (scanFile.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d scanFile.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            textLoaded.add(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return textLoaded;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * To write new entries or changes from the list of bookings to file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param bookingList the list used"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException entry error"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public void saveToFile(BookingList bookingList) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        FileOutputStream fileOutputStream \u003d new FileOutputStream(fileToRead);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            toWrite +\u003d i.toWriteFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        fileOutputStream.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        fileOutputStream.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * To write new entries or changes from the list of rooms to file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param roomList the list of rooms"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException invalid entry"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void saveToFile(RoomList roomList) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        FileOutputStream fileOutputStream \u003d new FileOutputStream(fileToRead);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (Room i : roomList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            toWrite +\u003d i.toWriteFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        fileOutputStream.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        fileOutputStream.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * To write to file for inventory."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param inventory inventory input"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException parse error"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    public void saveToFile(Inventory inventory) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        FileOutputStream fileOutputStream \u003d new FileOutputStream(fileToRead);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        for (Item i : inventory) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "            toWrite +\u003d i.toWriteFile();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        fileOutputStream.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "        fileOutputStream.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyinnnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * To write to file for users."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param userList list of users"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException entry error"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public void saveToFile(UserList userList) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        FileOutputStream fileOutputStream \u003d new FileOutputStream(fileToRead);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        for (User i : userList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            toWrite +\u003d i.toWriteFile();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        fileOutputStream.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        fileOutputStream.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 23,
      "zkchang97": 12,
      "wyinnnn": 12,
      "-": 49,
      "AmosChan97": 4,
      "AmirAzhar": 7
    }
  },
  {
    "path": "src/main/java/storage/StorageManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Storage inventoryStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Storage userStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Storage bookingStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Storage roomStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Mangaes the different storages."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param userStorage user storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param bookingStorage booking storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param roomStorage room storage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param inventoryStorage inventory stroage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public StorageManager(Storage userStorage, Storage bookingStorage, Storage roomStorage, Storage inventoryStorage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.inventoryStorage \u003d inventoryStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.bookingStorage \u003d bookingStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.roomStorage \u003d roomStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        this.userStorage \u003d userStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public Storage getInventoryStorage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return inventoryStorage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public Storage getUserStorage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return userStorage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public Storage getBookingStorage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return bookingStorage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public Storage getRoomStorage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return roomStorage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 38
    }
  },
  {
    "path": "src/main/java/ui/AnchorPaneNode.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * Create an anchor pane that can store additional data."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class AnchorPaneNode extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    // Date associated with this pane"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Create a anchor pane node. Date is not assigned in the constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param children children of the anchor pane"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public AnchorPaneNode(Node... children) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(children);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Add action handler for mouse clicked"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.setOnMouseClicked(e -\u003e System.out.println(\"This pane\u0027s date is: \" + date));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 33
    }
  },
  {
    "path": "src/main/java/ui/DialogBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private DialogBox(String text, Image img) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"RoomListBox not available\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        dialog.setAlignment(Pos.CENTER_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Visualizes the user\u0027s input from entry."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param text user input"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param img user\u0027s image"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @return user\u0027s input displayed with image like a chat message"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        db.dialog.setBackground(new Background(new BackgroundFill(Color.SKYBLUE, new CornerRadii(3), null)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Visualizes the chatbot\u0027s input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param text input from chatbot"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param img chatbot\u0027s image"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @return chatbot\u0027s input displayed with image like a chat message"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        db.dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTYELLOW, new CornerRadii(3), null)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 12,
      "AmosChan97": 70
    }
  },
  {
    "path": "src/main/java/ui/FullCalendarView.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class FullCalendarView {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private ArrayList\u003cAnchorPaneNode\u003e allCalendarDays \u003d new ArrayList\u003c\u003e(35);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private VBox view;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Text calendarTitle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private YearMonth currentYearMonth;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Create a calendar view."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param yearMonth year month to create the calendar of"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public FullCalendarView(YearMonth yearMonth) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        currentYearMonth \u003d yearMonth;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Create the calendar grid pane"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        GridPane calendar \u003d new GridPane();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        calendar.setPrefSize(600, 400);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        calendar.setGridLinesVisible(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Create rows and columns with anchor panes for the calendar"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            for (int j \u003d 0; j \u003c 7; j++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                AnchorPaneNode ap \u003d new AnchorPaneNode();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                ap.setPrefSize(200,200);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                calendar.add(ap,j,i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                allCalendarDays.add(ap);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Days of the week labels"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Text[] dayNames \u003d new Text[]{ new Text(\"Sunday\"), new Text(\"Monday\"), new Text(\"Tuesday\"),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            new Text(\"Wednesday\"), new Text(\"Thursday\"), new Text(\"Friday\"), new Text(\"Saturday\") };"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        GridPane dayLabels \u003d new GridPane();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        dayLabels.setPrefWidth(600);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Integer col \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (Text txt : dayNames) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            AnchorPane ap \u003d new AnchorPane();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ap.setPrefSize(200, 10);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ap.setBottomAnchor(txt, 5.0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ap.getChildren().add(txt);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            dayLabels.add(ap, col++, 0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Create calendarTitle and buttons to change current month"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        calendarTitle \u003d new Text();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Button previousMonth \u003d new Button(\"\u003c\u003c\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        previousMonth.setOnAction(e -\u003e previousMonth());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Button nextMonth \u003d new Button(\"\u003e\u003e\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        nextMonth.setOnAction(e -\u003e nextMonth());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        HBox titleBar \u003d new HBox(previousMonth, calendarTitle, nextMonth);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        titleBar.setAlignment(Pos.BASELINE_CENTER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Populate calendar with the appropriate day numbers"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        populateCalendar(yearMonth);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Create the calendar view"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        view \u003d new VBox(titleBar, dayLabels, calendar);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Set the days of the calendar to correspond to the appropriate date."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param yearMonth year and month of month to render"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void populateCalendar(YearMonth yearMonth) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Get the date we want to start with on the calendar"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        LocalDate calendarDate \u003d LocalDate.of(yearMonth.getYear(), yearMonth.getMonthValue(), 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Dial back the day until it is SUNDAY (unless the month starts on a sunday)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        while (!calendarDate.getDayOfWeek().toString().equals(\"SUNDAY\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            calendarDate \u003d calendarDate.minusDays(1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Populate the calendar with day numbers"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (AnchorPaneNode ap : allCalendarDays) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            if (ap.getChildren().size() !\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                ap.getChildren().remove(0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            Text txt \u003d new Text(String.valueOf(calendarDate.getDayOfMonth()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ap.setDate(calendarDate);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ap.setTopAnchor(txt, 5.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ap.setLeftAnchor(txt, 5.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ap.getChildren().add(txt);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            calendarDate \u003d calendarDate.plusDays(1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        // Change the title of the calendar"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        calendarTitle.setText(yearMonth.getMonth().toString() + \" \" + String.valueOf(yearMonth.getYear()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Move the month back by one. Repopulate the calendar with the correct dates."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void previousMonth() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        currentYearMonth \u003d currentYearMonth.minusMonths(1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        populateCalendar(currentYearMonth);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Move the month forward by one. Repopulate the calendar with the correct dates."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void nextMonth() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        currentYearMonth \u003d currentYearMonth.plusMonths(1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        populateCalendar(currentYearMonth);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public VBox getView() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return view;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public ArrayList\u003cAnchorPaneNode\u003e getAllCalendarDays() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return allCalendarDays;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void setAllCalendarDays(ArrayList\u003cAnchorPaneNode\u003e allCalendarDays) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.allCalendarDays \u003d allCalendarDays;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 123
    }
  },
  {
    "path": "src/main/java/ui/ListBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class ListBox extends HBox {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Label indexLabel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label nameLabel;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label venueLabel;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Label dateLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Label timeStartLabel;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Label timeEndLabel;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label statusLabel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label descriptionLabel;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label approverLabel;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Container for booking info."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param index of item"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param name name of person booking"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param venue place being booked"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param date start time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param timeStart start time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param timeEnd end time"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param status approve/reject status"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public ListBox(String index, String name, String venue, String date,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                   String timeStart, String timeEnd, String status, String purpose,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                   String approver) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/ListBox.fxml\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"RoomListBox not available\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        indexLabel.setText(index + \".\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        nameLabel.setText(name);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        venueLabel.setText(venue);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        dateLabel.setText(date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        timeStartLabel.setText(timeStart);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        timeEndLabel.setText(timeEnd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        statusLabel.setText(status);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        descriptionLabel.setText(purpose);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        approverLabel.setText(approver);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 14,
      "AmosChan97": 49
    }
  },
  {
    "path": "src/main/java/ui/RoomListBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class RoomListBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label indexLabel;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label roomLabel;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label dateLabel;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label timeStartLabel;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label timeEndLabel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * For displaying room related information."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param index Index of room in the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param room room code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param date active date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param timeStart active time start"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param timeEnd active time end"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws DukeException when input does not exist or invalid"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public RoomListBox(String index, String room, String date, String timeStart, String timeEnd) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Ui.class.getResource(\"/view/RoomListBox.fxml\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"RoomListBox not available\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        indexLabel.setText(index + \".\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        roomLabel.setText(room);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        dateLabel.setText(date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        timeStartLabel.setText(timeStart);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        timeEndLabel.setText(timeEnd);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 7,
      "zkchang97": 2,
      "AmosChan97": 45
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import control.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import room.Room;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": " * Controller for ui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Ui extends AnchorPane {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private ScrollPane scrollPane2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private VBox listContainer;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private AnchorPane flexiblePane;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Label userLabel;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeCat.png\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Do on application start. Prints a welcome message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void initialize() throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                DialogBox.getDukeDialog(showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        userLabel.setText(\"Not Logged In\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing control.Duke\u0027s reply and then"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String[] splitStr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        switch (splitStr[0]) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"approve\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"reject\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            listContainer.getChildren().clear();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            BookingList bookingList \u003d duke.getBookingList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            showList(bookingList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"addroom\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"listroom\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            listContainer.getChildren().clear();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            RoomList roomList \u003d duke.getRoomList();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            showRoomList(roomList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"listday\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            listContainer.getChildren().clear();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            BookingList bookingList1 \u003d duke.getBookingList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            showListDay(bookingList1, splitStr[1]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"listyear\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            listContainer.getChildren().clear();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            BookingList bookingList2 \u003d duke.getBookingList();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            showListYear(bookingList2, splitStr[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        case \"listmonth\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            listContainer.getChildren().clear();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            BookingList bookingList3 \u003d duke.getBookingList();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            showListMonth(bookingList3, splitStr[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"login\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        case \"logout\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            UserList userList \u003d duke.getUserList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            if (userList.getLoginStatus()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                userLabel.setText(\"Logged in as: \" + userList.getCurrentUser());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                userLabel.setText(\"Not Logged In\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void showRoomList(RoomList roomList) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        addToList(new RoomListBox(\"S/N\", \"Room Code\", \"Date\", \"From\", \"To\"));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Integer index \u003d 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (Room i : roomList) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            addToList(new RoomListBox(index.toString(), i.getRoomcode(), i.getDateStart().toString(),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    i.getTimeStart().toString(), i.getTimeEnd().toString()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void showList(BookingList bookingList) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        addToList(new ListBox(\"S/N\", \"Name\", \"Venue\", \"Date\", \"From\","
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"To\", \"Status\", \"Purpose\", \"Approved/ Rejected By:\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Integer index \u003d 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            addToList(customListBox(bookingList, i, index));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private void showListDay(BookingList bookingList, String date) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        addToList(new ListBox(\"S/N\", \"Name\", \"Venue\", \"Date\", \"From\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"To\", \"Status\", \"Purpose\", \"Approved/ Rejected By:\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Integer index \u003d 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            LocalDate dateStart \u003d LocalDate.parse(date, formatterStart);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                if (i.getDateStart().equals(dateStart)) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    addToList(customListBox(bookingList, i, index));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            //new DukeException (BookingConstants.DATEERROR);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private void showListYear(BookingList bookingList, String date) throws DukeException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        addToList(new ListBox(\"S/N\", \"Name\", \"Venue\", \"Date\", \"From\","
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"To\", \"Status\", \"Purpose\", \"Approved/ Rejected By\"));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Integer index \u003d 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            DateTimeFormatter formatterStart \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            LocalDate dateStart \u003d LocalDate.parse(date, formatterStart);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                if (i.getStartYear() \u003d\u003d dateStart.getYear()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    addToList(customListBox(bookingList, i, index));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        } catch (DateTimeParseException error) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            //new DukeException (BookingConstants.DATEERROR);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private void showListMonth(BookingList bookingList, String month) throws DukeException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        addToList(defaultListBox());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Integer index \u003d 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        int intMonth \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        for (Booking i : bookingList) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if (i.getStartMonth() \u003d\u003d intMonth) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                addToList(customListBox(bookingList, i, index));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void addToList(ListBox listBox) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        listContainer.getChildren().addAll(listBox);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private void addToList(RoomListBox roomListBox) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        listContainer.getChildren().addAll(roomListBox);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        setOutput(\":( OOPS!!! File path not found. Creating directory /data/data.txt\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void addToOutput(String string) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        output +\u003d string + \"\\n\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Prints user input to GUI."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * @param string string to display"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void showUserInput(String string) throws DukeException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                DialogBox.getUserDialog(string, userImage)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "     * Show Welcome message on programme start."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * to exit the application."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        setOutput(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void indent() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.print(\"    \");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void setOutput(String text) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        output \u003d text;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String getOutput() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private ListBox defaultListBox() throws DukeException {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return new ListBox(\"S/N\", \"Name\", \"Venue\", \"Date\", \"From\","
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"To\", \"Status\", \"Purpose\", \"Approved/ Rejected By\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private ListBox customListBox(BookingList bookinglist, Booking booking, Integer index) throws DukeException {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return new ListBox(String.valueOf(bookinglist.indexOf(booking) + 1), booking.getName(),"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                booking.getVenue(), booking.getDateStart().toString(),"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                booking.getTimeStart().toString(), booking.getTimeEnd().toString(), booking.getStatus(),"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                booking.getDescription(), booking.getApprovedBy());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Displays help message."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void showHelp() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        setOutput(\"Here are the available commands:\\n\""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"--------------\\n\""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Account\\n\""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Add user: adduser \u003cusername\u003e\\n\""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Remove user: rmuser \u003cusername\u003e\\n\""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Login: login \u003cusername\u003e\\n\""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Logout: logout\\n\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"--------------\\n\""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Booking\\n\""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Add booking: add \u003cdescription\u003e /at \u003croomcode\u003e /from \u003cDD/MM/YYYY\u003e \u003cHHMM\u003e /to \u003cHHMM\u003e\\n\""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"List booking: list\\n\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Edit booking: edit \u003cindex\u003e \u003cdescription\u003e\\n\""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Delete booking: delete \u003cindex\u003e\\n\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"List month: listmonth\\n\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"List day: listday\\n\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Find booking: find \u003ckeyword\u003e, find \u003cindex\u003e\\n\""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"--------------\\n\""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Add room: addroom \u003croomcode\u003e /date \u003cDD/MM/YYYY\u003e \u003cHHMM\u003e /to \u003cHHMM\u003e\\n\""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"List room: listroom\\n\""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                + \"Delete room: deleteroom \u003cindex\u003e\\n\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 80,
      "zkchang97": 37,
      "-": 35,
      "AmosChan97": 148
    }
  },
  {
    "path": "src/main/java/user/UnusedGuest.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "package user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class UnusedGuest extends UnusedUser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     * Dummy class for not logged in user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param username a random name input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UnusedGuest(String username) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(username);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.userType \u003d \"G\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.email \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.password \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 1,
      "AmosChan97": 12,
      "AmirAzhar": 2
    }
  },
  {
    "path": "src/main/java/user/UnusedLogin.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class UnusedLogin {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private static String currentUser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * verfiyLogin verifies if the email and password input by user is a registered account."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param email for login"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param password for login"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param filePath of members login and user info"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws FileNotFoundException when file to refer to is not found"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static boolean verifyLogin(String email, String password, String filePath) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        BufferedReader reader;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        String tempEmail;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        String tempPassword;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            String[] parts \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            tempEmail \u003d parts[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            tempPassword \u003d parts[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            if (email.trim().equals(tempEmail.trim()) \u0026\u0026 password.trim().equals(tempPassword.trim())) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                setCurrentUser(tempEmail);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static String getCurrentUser() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return currentUser;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static void setCurrentUser(String email) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        currentUser \u003d email;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * checkExistance checks if the email supplied exists in the user list or not."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param email email input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param filePath the file we are referring to"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @return boolean value \"found\" if email ca be already found in system"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @throws IOException when line read error occurs"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static boolean checkExistence(String email,String filePath) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        BufferedReader reader;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            String[] parts \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if (parts[0].trim().equals(email.trim())) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public static boolean checkUsername(String username, String filePath) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        BufferedReader reader;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        boolean exists \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        while (line !\u003d null){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            String[] parts \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            if(!parts[0].trim().equals(username.trim())) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                exists \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        return exists;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static User getUser(String username, String filePath) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        BufferedReader reader;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        boolean exists \u003d true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        while (line !\u003d null){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            String[] parts \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            if (parts[0].trim().equals(username.trim())) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                User validUser \u003d new User(parts[0], parts[1], parts[2]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                setCurrentUser(parts[0]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return validUser;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return new Guest(\"guest\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 37,
      "AmosChan97": 17,
      "AmirAzhar": 60
    }
  },
  {
    "path": "src/main/java/user/UnusedUser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class UnusedUser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected String email;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected String password;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected String username;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected String userType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected boolean loginStatus;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * User account."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param email NUS email (xxx@u.nus.edu)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param password alphanumerical with no special characters"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param username preferably name of the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UnusedUser(String email, String password, String username) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.email \u003d email;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.password \u003d password;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.username \u003d username;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UnusedUser(String username, String userType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UnusedUser(String username) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return email + \" | \" + password + \" | \" + username;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public boolean getLoginStatus() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return loginStatus;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public void setLoginStatus() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        loginStatus \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String getUsername() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return username;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 46
    }
  },
  {
    "path": "src/main/java/user/User.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//@@ AmirAzhar"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class User {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String username;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     * Create new user account."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param username preferably name of the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    public User(String username) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.username \u003d username;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return username + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String getUsername() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return username;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 3,
      "zkchang97": 1,
      "AmosChan97": 5,
      "AmirAzhar": 13
    }
  },
  {
    "path": "src/main/java/user/UserList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package user;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//@@ AmirAzhar"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class UserList extends ArrayList\u003cUser\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private boolean loginStatus \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String currentUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * loading userlist from file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * @param loader load line from file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UserList(ArrayList\u003cString\u003e loader) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        for (String line : loader) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            this.add(new User(line));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        loginStatus \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        currentUser \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public UserList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * checkExistence checks if the email supplied exists in the user list or not."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param userList ArrayList of registered usernames"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param username username input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @return boolean value \"found\" if email ca be already found in system"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static boolean checkExistence(UserList userList, String username) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        for (User i : userList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            if (i.username.equals(username)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "     * Remove user from userlist."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param userList list of registered users"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     * @param username input username to remove"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static void removeUser(UserList userList, String username) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        for (int i \u003d 0; i \u003c userList.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            if (userList.get(i).username.equals(username)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                userList.remove(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String getCurrentUser() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return currentUser;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void logout() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        loginStatus \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void setCurrentUser(String username) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        currentUser \u003d username;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void login() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        loginStatus \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public boolean getLoginStatus() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return loginStatus;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 4,
      "zkchang97": 4,
      "AmosChan97": 22,
      "AmirAzhar": 48
    }
  },
  {
    "path": "src/main/resources/css/ListBox.css",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ".label {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    -fx-border-width: 1;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    -fx-border-color: black black black black;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 4
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" HBox.hgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"284.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            \u003cFont size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 23
    }
  },
  {
    "path": "src/main/resources/view/ListBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003cfx:root maxHeight\u003d\"Infinity\" prefHeight\u003d\"36.0\" prefWidth\u003d\"654.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"71.0\" prefWidth\u003d\"32.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"nameLabel\" alignment\u003d\"CENTER\" layoutX\u003d\"2.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"71.0\" prefWidth\u003d\"86.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"statusLabel\" alignment\u003d\"CENTER\" layoutX\u003d\"484.0\" prefHeight\u003d\"71.0\" prefWidth\u003d\"48.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"dateLabel\" alignment\u003d\"CENTER\" layoutX\u003d\"174.0\" layoutY\u003d\"4.0\" prefHeight\u003d\"71.0\" prefWidth\u003d\"91.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"timeStartLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"71.0\" prefWidth\u003d\"50.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"timeEndLabel\" alignment\u003d\"CENTER\" layoutX\u003d\"329.0\" layoutY\u003d\"3.0\" prefHeight\u003d\"71.0\" prefWidth\u003d\"50.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"venueLabel\" alignment\u003d\"CENTER\" layoutX\u003d\"88.0\" layoutY\u003d\"3.0\" prefHeight\u003d\"71.0\" prefWidth\u003d\"86.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"descriptionLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"36.0\" prefWidth\u003d\"139.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"approverLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"36.0\" prefWidth\u003d\"71.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003cstylesheets\u003e\u003cURL value\u003d\"@../css/ListBox.css\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.SplitPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"1094.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.Ui\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cSplitPane dividerPositions\u003d\"0.62\" layoutX\u003d\"81.0\" layoutY\u003d\"19.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"1094.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        \u003citems\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "          \u003cAnchorPane fx:id\u003d\"flexiblePane\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                  \u003cScrollPane fx:id\u003d\"scrollPane2\" layoutX\u003d\"67.0\" layoutY\u003d\"46.0\" prefHeight\u003d\"598.0\" prefWidth\u003d\"652.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                     \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        \u003cVBox fx:id\u003d\"listContainer\" prefHeight\u003d\"598.0\" prefWidth\u003d\"652.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                     \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                  \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "               \u003c/children\u003e\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "          \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"547.0\" prefWidth\u003d\"434.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"80.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"428.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"3.0\" AnchorPane.rightAnchor\u003d\"3.0\" AnchorPane.topAnchor\u003d\"30.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        \u003ccontent\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                            \u003cVBox fx:id\u003d\"dialogContainer\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                        \u003c/content\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                  \u003cLabel fx:id\u003d\"userLabel\" layoutX\u003d\"6.0\" text\u003d\"Label\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        \u003c/items\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 39
    }
  },
  {
    "path": "src/main/resources/view/RoomListBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"35.0\" prefWidth\u003d\"404.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"indexLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"62.0\" prefWidth\u003d\"34.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"roomLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"35.0\" prefWidth\u003d\"151.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"dateLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"118.0\" prefWidth\u003d\"64.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"timeStartLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"118.0\" prefWidth\u003d\"64.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "      \u003cLabel fx:id\u003d\"timeEndLabel\" alignment\u003d\"CENTER\" prefHeight\u003d\"118.0\" prefWidth\u003d\"64.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003cstylesheets\u003e\u003cURL value\u003d\"@../css/ListBox.css\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "   \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 17
    }
  },
  {
    "path": "src/test/java/AddBookingTest1.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import control.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": " //@@Alex-Teo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class AddBookingTest1 {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    void testAddBooking() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String user \u003d \"Bob\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String room \u003d \"room4\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String description \u003d \"study\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String dateTimeStart \u003d \"22/12/2019 1100\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String timeEnd \u003d \"1200\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Booking newBooking \u003d new Booking(user, room, description, dateTimeStart, timeEnd);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals(\"Bob room4 22/12/2019 1100 to 1200 P \", newBooking.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String currentUser \u003d \"Jack\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        assertEquals(\"Bob\", newBooking.getName());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        assertEquals(\"room4\", newBooking.getVenue());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        assertEquals(\"study\", newBooking.getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        assertEquals(\"2019-12-22\", newBooking.getDateStart().toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        assertEquals(\"11:00\", newBooking.getTimeStart().toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        assertEquals(\"12:00 \", newBooking.getTimeEnd().toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 11,
      "AmosChan97": 16
    }
  },
  {
    "path": "src/test/java/AddBookingTest2.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "//@@Alex-Teo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class AddBookingTest2 {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    void testAddBooking() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String user \u003d \"Barry\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String room \u003d \"room4\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String description \u003d \" eat chicken\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String dateTimeStart \u003d \"21/12/2021 1100\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String timeEnd \u003d \"1500\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String status \u003d \"P\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        //String currentUser \u003d \"Bob\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Booking newBooking \u003d new Booking(user, room, description, dateTimeStart, timeEnd);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals(newBooking.toString(), \"Barry room4 21/12/2021 1100 to 1500 P\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 20
    }
  },
  {
    "path": "src/test/java/AddBookingTest3.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.BookingConstants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Constants;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "//@@Alex-Teo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class AddBookingTest3 {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    void testAddBooking() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            String user \u003d \"Null\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            String room \u003d \"room#\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            String description \u003d \" eat chicken\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            String dateTimeStart \u003d \"21-12-2021 1100\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            String timeEnd \u003d \"1500\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            Booking newBooking \u003d new Booking(user, room, description, dateTimeStart, timeEnd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertThrows(DateTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "            new Booking(user, room, description, dateTimeStart, timeEnd);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals(BookingConstants.DATETIMEERROR, \"Not able to parse the date for all patterns given, \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                + \"please use this format: add NAME DESCRIPTION /at ROOM_CODE /from DATE TIMESTART /to TIMEEND\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "                + \", DATE TIMESTART format is dd/mm/yyyy HHMM, TIMEEND is HHMM\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 30
    }
  },
  {
    "path": "src/test/java/ApproveBookingTest1.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import control.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "//@@Alex-Teo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class ApproveBookingTest1 {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Storage userStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private static UserList adminList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    void TestApproveBooking() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String user \u003d \"Bob\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String room \u003d \"room4\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String description \u003d \"study\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String dateTimeStart \u003d \"22/12/2019 1100\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String timeEnd \u003d \"1200\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Booking newBooking \u003d new Booking(user, room, description, dateTimeStart, timeEnd);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals(\"Bob room4 22/12/2019 1100 to 1200 P\", newBooking.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        newBooking.approveStatus(\"amir\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals( \"Bob room4 22/12/2019 1100 to 1200 A\", newBooking.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 32
    }
  },
  {
    "path": "src/test/java/ApproveBookingTest2.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import control.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "//@@Alex-Teo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class ApproveBookingTest2 {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Storage userStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private static UserList adminList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    void TestApproveBooking(/*String userFile*/) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String user \u003d \"Bob\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String room \u003d \"ST4\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String description \u003d \"study\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String dateTimeStart \u003d \"30/12/9999 1400\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String timeEnd \u003d \"1900\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Booking newBooking \u003d new Booking(user, room, description, dateTimeStart, timeEnd);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals(\"Bob ST4 30/12/9999 1400 to 1900 P\", newBooking.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        newBooking.approveStatus(\"amir\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals( \"Bob ST4 30/12/9999 1400 to 1900 A\", newBooking.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 32
    }
  },
  {
    "path": "src/test/java/RejectBookingTest1.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import control.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import user.UserList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "//@@Alex-Teo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class RejectBookingTest1 {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    void TestRejectBooking(/*String userFile*/) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String user \u003d \"Bob\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String room \u003d \"room4\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String description \u003d \"study\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String dateTimeStart \u003d \"22/12/2019 1100\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        String timeEnd \u003d \"1200\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        Booking newBooking \u003d new Booking(user, room, description, dateTimeStart, timeEnd);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals(\"Bob room4 22/12/2019 1100 to 1200 P\", newBooking.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        newBooking.rejectStatus(\"amir\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "        assertEquals( \"Bob room4 22/12/2019 1100 to 1200 R\", newBooking.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 29
    }
  },
  {
    "path": "src/test/java/RoomandBookTest1.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.Booking;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import booking.BookingList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.Room;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import room.RoomList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "public class RoomandBookTest1 {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alex-Teo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alex-Teo": 14
    }
  }
]
