[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "group \u0027moomoo\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    mainClassName \u003d \"moomoo.MooMooLauncher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "sourceSets.main.resources.srcDirs \u003d[\u0027src/main/resources\u0027]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn \u0027cleanTest\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveBaseName \u003d \"MooMooMoney\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveVersion \u003d \"v1.4\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "gradle.projectsEvaluated {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        options.compilerArgs \u003c\u003c \"-Xlint:unchecked\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 13,
      "-": 34
    }
  },
  {
    "path": "src/main/java/moomoo/MooMoo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.Cow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.CategoryStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Cow;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Runs MooMoo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMoo {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private CategoryList categoryList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Budget budget;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleList calendar;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Initializes different Category, Expenditures, Budget, Storage and Ui."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private MooMoo() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        storage \u003d new Storage(\"data/budget.txt\",\"data/schedule.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            storage.preloadData();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Ui.printException(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Ui.showResponse();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList \u003d CategoryStorage.loadFromFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ExpenditureStorage.loadFromFile(categoryList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.printException(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showResponse();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        HashMap\u003cString, Double\u003e loadedBudget \u003d storage.loadBudget(categoryList.getCategoryList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (loadedBudget \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showResponse();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget(loadedBudget);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        HashMap\u003cString, ArrayList\u003cString\u003e\u003e scheduleList \u003d storage.loadCalendar();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (scheduleList \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showResponse();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            calendar \u003d new ScheduleList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            calendar \u003d new ScheduleList(scheduleList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the command line interface, reads input from user and returns result accordingly."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.showWelcome();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Cow moo \u003d new Cow();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(moo.getHappyCow());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.showResponse();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String date \u003d Ui.showDate();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String todaySchedule \u003d calendar.showSchedule(date);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(todaySchedule);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.showResponse();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String helpMessage \u003d \"Start managing your money! Or type \u003chelp\u003e to get started.\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(helpMessage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.showResponse();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.clearScreen();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                Ui.setOutput(ANSI_PURPLE + fullCommand + ANSI_RESET + \"\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.showResponse();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                c.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                if (!Ui.getOutput().equals(\"\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    Ui.showResponse();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "              "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (MooMooException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.printException(e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.showResponse();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns the response to the GUI when given an input by a user."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by user in the GUI"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String Response to display on GUI by the bot."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            c.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (isExit) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.showGoodbye();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return Ui.getOutput();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return Ui.getOutput();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return Ui.printException(e);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs MooMoo."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args Argument values given when running the program"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        new MooMoo().run();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 3,
      "Greatnest": 71,
      "guanyewtan": 8,
      "jinwentay": 7,
      "shannonlee98": 49,
      "-": 3
    }
  },
  {
    "path": "src/main/java/moomoo/MooMooLauncher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Launches the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMooLauncher {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the program in CLI mode."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args If appropriate argument is given, GUI will be launched."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String operatingSystem \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (operatingSystem.contains(\"win\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ProcessBuilder pb \u003d new ProcessBuilder(\"cmd.exe\", \"/c\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        \"chcp\", \"65001\", \"\u003e\", \"nul\", \"2\u003e\u00261\").inheritIO();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                pb.start();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"An error has occurred. Some output may be corrupted\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        MooMoo.main(args);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Greatnest": 30,
      "shannonlee98": 1
    }
  },
  {
    "path": "src/main/java/moomoo/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the various commands to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Command(boolean isExit, String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Executes necessary functions for each different command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget object containing the budget."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryList CategoryList object containing the categories"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param storage Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when error such as invalid input occurs"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public abstract void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                                 Storage storage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 28,
      "shannonlee98": 9
    }
  },
  {
    "path": "src/main/java/moomoo/command/DetectOsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class DetectOsCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public static String osName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Get operating system name the user is running on."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public DetectOsCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.osName \u003d System.getProperty(\"os.name\").toLowerCase();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 3,
      "jinwentay": 9
    }
  },
  {
    "path": "src/main/java/moomoo/command/EditBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Edits the budgets for respective categories."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class EditBudgetCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cDouble\u003e budgets;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the Edit budget command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to edit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budgets List of budgets to change corresponding categories to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public EditBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories, ArrayList\u003cDouble\u003e budgets) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budgets \u003d budgets;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e outputArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isUpdated \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.size(); ++i) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String categoryName \u003d categories.get(i).toLowerCase();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            double categoryBudget \u003d budgets.get(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (categoryList.get(categoryName) !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                double currentBudget \u003d budget.getBudgetFromCategory(categoryName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue \u003d \"Budget for \" + categoryName + \" has not been set. Please set it first.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputArray.add(outputValue);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d categoryBudget) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue \u003d \"The budget for \" + categoryName + \" is the same.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputArray.add(outputValue);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (categoryBudget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue \u003d \"Please set your budget for \" + categoryName + \" to a value more than 0.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputArray.add(outputValue);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isUpdated \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                budget.addNewBudget(categoryName, categoryBudget);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputValue \u003d \"You have changed the budget for \" + categoryName"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        + \" from $\" + df.format(currentBudget) + \" to $\" + df.format(categoryBudget);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputArray.add(outputValue);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d categoryName + \" category does not exist. Please add it first.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputArray.add(outputValue);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        outputValue \u003d Ui.showInCowBox(outputArray);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (isUpdated) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 65,
      "shannonlee98": 14
    }
  },
  {
    "path": "src/main/java/moomoo/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.feature.Cow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the command to exit the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *               Value should be true in this class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ExitCommand(boolean isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList, Storage storage)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ProcessBuilder pb \u003d new ProcessBuilder(\"cmd.exe\", \"/c\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        \"chcp\", \"437\", \"\u003e\", \"nul\", \"2\u003e\u00261\").inheritIO();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                pb.start();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"An error has occurred. Please close the terminal.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Cow cow \u003d new Cow();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String output \u003d cow.getHappyCow() + \"\\nHope you had a great time using MooMooMoney!\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"See you next time :)\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(output);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 30,
      "guanyewtan": 2,
      "jinwentay": 1,
      "shannonlee98": 11
    }
  },
  {
    "path": "src/main/java/moomoo/command/GraphCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class GraphCategoryCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String fullBlock \u003d \"\\u2588\"; //\"H\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String halfBlock \u003d \"\\u258c\"; //\"l\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String topBorder \u003d \"\\u252c\";//\"v\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String bottomBorder \u003d \"\\u2534\";//\"^\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisTop \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisBottom \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String categoryName \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private int month \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private int year \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Constructor requires the category for which to display the graph, and the respective date."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @param categoryName The name of the category that the user enters"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @param month        The user\u0027s desired month"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public GraphCategoryCommand(String categoryName, int month, int year) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        this.categoryName \u003d categoryName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public static double roundToTwoDp(double d) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return Math.floor(d * 100) / 100;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category cat;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            cat \u003d categoryList.get(categoryName);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (cat.equals(null)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                throw new MooMooException(\"OH NO! No such category exists!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"OH NO! No such category exists!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (cat.size() \u003d\u003d 0 || cat.getTotal(month, year) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"No expenditure data found :(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double grandTotal \u003d cat.getTotal(month, year);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int maxAxisUnit \u003d (int) ((cat.getLargestExpenditure(month, year) / grandTotal) * 100) + 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c maxAxisUnit; i +\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisTop +\u003d topBorder;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (!getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisTop \u003d ANSI_YELLOW + horizontalAxisTop + ANSI_RESET;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisBottom \u003d ANSI_YELLOW + horizontalAxisBottom + ANSI_RESET;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String topSpace \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d cat.getLongestExpenditure(); i +\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            topSpace +\u003d \" \";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisTop + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c cat.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            Expenditure expenditure \u003d cat.get(i);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (expenditure.getDate().getMonthValue() !\u003d month || expenditure.getDate().getYear() !\u003d year) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String expenditureName \u003d cat.get(i).getName();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (expenditureName.length() \u003e 14) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                expenditureName \u003d expenditureName.substring(0, 11) + \"...\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (i % 2 \u003d\u003d 0 \u0026\u0026 !getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + ANSI_CYAN + expenditureName;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + expenditureName;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int j \u003d 0; j \u003c (cat.getLongestExpenditure() - expenditureName.length() + 1); j +\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output +\u003d \" \";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            Expenditure exp \u003d cat.get(i);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            double percentage \u003d 100 * (exp.getCost() / grandTotal);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfFullBars \u003d (int) percentage;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int j \u003d 0; j \u003c noOfFullBars; j++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + fullBlock;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfHalfBars \u003d (int) Math.round(percentage % 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (noOfHalfBars \u003d\u003d 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + halfBlock;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d output + \"  \" + roundToTwoDp(percentage) + \"%\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (i % 2 \u003d\u003d 0 \u0026\u0026 !getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + ANSI_RESET;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisBottom + \"\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(output);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 118,
      "shannonlee98": 13
    }
  },
  {
    "path": "src/main/java/moomoo/command/GraphTotalCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class GraphTotalCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String fullBlock \u003d \"\\u2588\"; //\"H\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String halfBlock \u003d \"\\u258c\"; //\"l\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String topBorder \u003d \"\\u252c\";//\"v\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String bottomBorder \u003d \"\\u2534\";//\"^\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisTop \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisBottom \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public GraphTotalCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public static double roundToTwoDp(double d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return Math.floor(d * 100) / 100;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (categoryList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"OOPS!!! MooMoo cannot find any category data :(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double grandTotal \u003d categoryList.getTotal();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (grandTotal \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            grandTotal \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int maxAxisUnit \u003d (int) ((categoryList.getLargestExpenditure(LocalDate.now().getMonthValue()) / grandTotal)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                * 100);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c maxAxisUnit; i +\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisTop +\u003d topBorder;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (!getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisTop \u003d ANSI_YELLOW + horizontalAxisTop + ANSI_RESET;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisBottom \u003d ANSI_YELLOW + horizontalAxisBottom + ANSI_RESET;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String topSpace \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d categoryList.getLongestCategory(); i +\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            topSpace +\u003d \" \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisTop + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c categoryList.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Category cat \u003d categoryList.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            double percentage \u003d 100 * (cat.getTotal() / grandTotal);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            percentage \u003d roundToTwoDp(percentage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String categoryName \u003d categoryList.get(i).name();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (categoryName.length() \u003e 14) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                categoryName \u003d categoryName.substring(0, 11) + \"...\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (i % 2 \u003d\u003d 0 \u0026\u0026 !getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + ANSI_CYAN + categoryName;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + categoryName;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            for (int j \u003d 0; j \u003c (categoryList.getLongestCategory() - categoryName.length() + 1); j +\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output +\u003d \" \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfFullBars \u003d (int) percentage;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int j \u003d 0; j \u003c noOfFullBars; j +\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + fullBlock;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfHalfBars \u003d (int) Math.round(percentage % 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (noOfHalfBars \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + halfBlock;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d output + \"  \" + percentage + \"%\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (i % 2 \u003d\u003d 0 \u0026\u0026 !getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + ANSI_RESET;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisBottom + \"\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(output);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 89,
      "shannonlee98": 21
    }
  },
  {
    "path": "src/main/java/moomoo/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e text \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(ANSI_GREEN + \"Try one of these commands:\" + ANSI_RESET);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"1.  list\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"2.  category add [CATEGORY NAME]\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"3.  category delete [CATEGORY NAME or CATEGORY INDEX NUMBER]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.add(\"4.  add n/[NAME] a/[AMOUNT SPENT] c/[CATEGORY] (optional: d/[d/MM/yyyy)\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"5.  delete i/[INDEX] c/[Category]\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"6.  sort [TYPE]\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"7.  view m/[MONTH] y/[YEAR]\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        text.add(\"8.  view current\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.add(\"9.  view all\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.add(\"10. budget add c/[CATEGORY NAME] b/[BUDGET]\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.add(\"11. budget edit c/[CATEGORY NAME] b/[BUDGET]\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.add(\"12. budget list c/[CATEGORY NAME] \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.add(\"13. budget savings c/[CATEGORY NAME] s/[STARTMONTHYEAR (MM/YYYY)] e/[ENDMONTHYEAR (MM/YYYY)]\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        text.add(\"14. schedule d/[DD/MM/YYYY] a/[AMOUNT] n/[DESCRIPTION]\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        text.add(\"15. schedule list\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        text.add(\"16. graph\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        text.add(\"17. moo\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        text.add(\"18. bye\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.showInCowBox(text);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 7,
      "guanyewtan": 1,
      "jinwentay": 4,
      "shannonlee98": 38
    }
  },
  {
    "path": "src/main/java/moomoo/command/ListBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Lists the budget for respective categories."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ListBudgetCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the command to list the set budgets."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to list the budgets for."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ListBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e outputArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double currentBudget \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (categories.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            for (int i \u003d 0; i \u003c categoryList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                String categoryName \u003d categoryList.getCategoryList().get(i).name().toLowerCase();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                currentBudget \u003d budget.getBudgetFromCategory(categoryName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    outputValue \u003d \"Budget for \" + categoryName + \" has not been set\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    outputArray.add(outputValue);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputValue \u003d \"Budget for \" + categoryName + \" is $\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        + df.format(currentBudget);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputArray.add(outputValue);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (\"\".equals(outputValue)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"You have yet to set a budget for any category.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            outputValue \u003d Ui.showInCowBox(outputArray);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.size(); ++i) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String categoryName \u003d categories.get(i).toLowerCase();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (categoryList.get(categoryName) !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                currentBudget \u003d budget.getBudgetFromCategory(categoryName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    outputValue \u003d \"Budget for \" + categoryName + \" has not been set.\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    outputArray.add(outputValue);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputValue \u003d \"Budget for \" + categoryName + \" is $\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        + df.format(currentBudget);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputArray.add(outputValue);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d categoryName + \" category does not exist. Please add it first.\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputArray.add(outputValue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        outputValue \u003d Ui.showInCowBox(outputArray);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 55,
      "shannonlee98": 25
    }
  },
  {
    "path": "src/main/java/moomoo/command/MainDisplayCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MainDisplay;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class MainDisplayCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Command that takes in a month and year from parser to be converted into int."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param month Month that the user wants to view a summary of."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param year Year that the user wants to view a summary of."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public MainDisplayCommand(int month, int year) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Executes a MainDisplay Command when called."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param calendar ScheduleList object containing the schedules."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param budget Budget object containing the budget."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList CategoryList object containing the categories."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param storage Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        MainDisplay newMainDisplay \u003d new MainDisplay();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int rows;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int cols;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (this.month !\u003d 0 \u0026\u0026 this.year !\u003d 0) {      // means user did specify a valid month and year"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            rows \u003d newMainDisplay.getMonthsExpSize(categoryList, month, year);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            cols \u003d newMainDisplay.getCatListSize(categoryList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            cols \u003d newMainDisplay.getCatListSize(categoryList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            rows \u003d newMainDisplay.getMaxCatSize(categoryList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //String output \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int t \u003d 0; // Default Value 0 for mac"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //if (getOS.osName.contains(\"mac\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //System.out.println(\"MainDisplay on Linux -\u003e Color available\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //} else"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            t \u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            //System.out.println(\"MainDisplay on Windows -\u003e Color currently unavailable\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d newMainDisplay.newToPrint(month, year, rows, cols, categoryList, budget, t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.printMainDisplay(output);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 48,
      "shannonlee98": 10
    }
  },
  {
    "path": "src/main/java/moomoo/command/MooCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class MooCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String[] mooText \u003d new String[] {\"MooOoO!\", \"MOOOooo!\", \"MOoOoO...\", \"MoOoOoO?\", \"MOOOoooOOO!!\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"Moo!\", \"Moo?\", \"Moo.\", \"Moo...\", \"Moo :D\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"Moooooooooooooo!\", \"Mooooooooooo...\", \"Mooooooooo??\", \"Moooooooooo^2\", \"Moooooo :D\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"MUUUUUU\", \"Muuuuu!\", \"Muuuuu?\", \"Muuuuuu...\", \"Muuuuuu :D\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"Huh?\", \"MIIIIIII!?!?\", \"Quack\", \"Woof :D\", \"YEEET *dabs rapidly*\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"There\u0027s a 2% chance to obtain this Moo! Here you go!    ***MOO***\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Q: If a cat goes meow and a cow goes moo, what does the dog say?     A: Ed...ward..\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"How much Moo can a Moo Wa Wa if a Woo Ma Coo Ma Woo\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Moo! Fun fact, I hardcoded all these Moos here, not sure if there was a better way but oh wells\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"To Moo, or not to Moo. That is the question.       -Milkshakespeare, 2019\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"MooOoO!\", \"MOOOooo!\", \"MOoOoO...\", \"MoOoOoO?\", \"MOOOoooOOO!!\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Moo!\", \"Moo?\", \"Moo.\", \"Moo...\", \"Moo :D\", \"Have enough Moo yet?\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Two cows in a field, one turns to the other and says MOO. The other cow replied, \\\"I was going to say that!\\\"\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"Q: Why are cows so complicated?    A: They\u0027ve got a lot of moooving parts!\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        \"Q: How do cows pay for things?    A: With Mooolah\", \"Q: What\u0027s a coward?    A: Moooooo! Get it? A cow-word!\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Q: Where did the cow go?    A: It mooooved!\", \"I\u0027m getting tired, moo\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Q: Why did the cow jump over the moon?   A: To get to the milky way!\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Fun fact: you have a 1 in 50 chance of getting this message!\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        \"Q: What do you call a cow after she has given birth?    A: Decaffeinated!\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public MooCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            Random randomGenerator \u003d new Random();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int messageNo \u003d randomGenerator.nextInt(50);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output.add(mooText[messageNo]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showInCowBox(output);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"Hmmm.. Moo?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 32,
      "shannonlee98": 22
    }
  },
  {
    "path": "src/main/java/moomoo/command/NotificationCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class NotificationCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private String cat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private double expenditure;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String message \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Alerts user if user exceeded the budget."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param cat         The name of the category that user just added his expenditure to."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param expenditure The total current expenditure of that category."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public NotificationCommand(String cat, double expenditure) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.cat \u003d cat;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.expenditure \u003d expenditure;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String alert \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (expenditure \u003e budget.getBudgetFromCategory(cat)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            alert \u003d \"You have exceeded your budget for \" + cat + \"!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (expenditure \u003d\u003d budget.getBudgetFromCategory(cat)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            alert \u003d \"You have reached your budget limit!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (expenditure \u003e budget.getBudgetFromCategory(cat) * 0.9) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            alert \u003d \"You are reaching your budget limit!\";         "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        int blank \u003d 47 - alert.length();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String blankSpace \u003d \" \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (int i \u003d 0; i \u003c blank; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            blankSpace +\u003d \" \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        double balance \u003d budget.getBudgetFromCategory(cat) - expenditure;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        blank \u003d 28 - String.valueOf(balance).length();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String blank2 \u003d \" \";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (int i \u003d 0; i \u003c blank; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            blank2 +\u003d \" \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String osName \u003d getOS.osName;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String colour \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String reset \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            if (alert.length() \u003c 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                colour \u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else if (alert.contains(\"reaching\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                colour \u003d ANSI_YELLOW;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                colour \u003d ANSI_RED;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            reset \u003d ANSI_RESET;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String cow \u003d colour"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"                     .-------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"  ,/         \\\\,      |  __  __  ___   ___                              |\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \" ((__,-\\\"\\\"\\\"-,__))     | |  \\\\/  |/ _ \\\\ / _ \\\\                             |\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \" .-\u0027(       )`-,     | | |\\\\/| | (_) | (_) |                            |\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \" `~~` d\\\\ /b `~~`     | |_|  |_|\\\\___/ \\\\___/                             |\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"     |     |         | \" + alert + blankSpace + \"|\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"     (6___6)         | \" + \"Budget remaining : \" + balance + blank2 + \"|\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"      `---`          .-------------------------------------------------.\\n\" + reset;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(cow);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        message \u003d cow;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String getMesage() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jinwentay": 70,
      "shannonlee98": 15
    }
  },
  {
    "path": "src/main/java/moomoo/command/SavingsBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * View the savings for respective categories."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class SavingsBudgetCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDate start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDate end;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the Savings Command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to view savings for."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param startPeriod Start period consisting of month and year."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param endPeriod End period consisting of month and year."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public SavingsBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                LocalDate startPeriod, LocalDate endPeriod) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.start \u003d startPeriod;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.end \u003d endPeriod;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e array \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String[] outputArray;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalSavings \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (categories.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            for (int i \u003d 0; i \u003c categoryList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                categories.add(categoryList.getCategoryList().get(i).name());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (String iteratorCategory : categories) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            iteratorCategory \u003d iteratorCategory.toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Category currentCategory \u003d categoryList.get(iteratorCategory);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (currentCategory \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputValue \u003d iteratorCategory + \" category does not exist.\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        + \" Please create it first.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                array.add(outputValue);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (budget.getBudgetFromCategory(iteratorCategory.toLowerCase()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                outputValue \u003d \"The budget for \" + iteratorCategory + \" does not exist.\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        + \" Please set it using budget set.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                array.add(outputValue);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (end \u003d\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputArray \u003d viewSingleMonthSavings(budget, iteratorCategory, currentCategory, outputValue);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                array.add(outputArray[0]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputArray \u003d viewMultiMonthSaving(budget, iteratorCategory, currentCategory, outputValue);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                array.add(outputArray[0]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            totalSavings +\u003d Double.parseDouble(outputArray[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (totalSavings \u003e 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            outputValue \u003d \"Your total savings: $\" + df.format(totalSavings);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            array.add(outputValue);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            outputValue \u003d Ui.showInCowBox(array);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (totalSavings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            outputValue \u003d \"Your total savings : $0\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            array.add(outputValue);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            outputValue \u003d Ui.showInCowBox(array);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            totalSavings \u003d Math.abs(totalSavings);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (totalSavings \u003c 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d \"You have overspent your total budget by: $0\" + df.format(totalSavings);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d \"You have overspent your total budget by: $\" + df.format(totalSavings);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            array.add(outputValue);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            outputValue \u003d Ui.showInCowBox(array);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String[] viewSingleMonthSavings(Budget budget, String iteratorCategory,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                            Category currentCategory, String outputVal) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalSavings \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String output \u003d outputVal;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double savings \u003d budget.getBudgetFromCategory(iteratorCategory)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                - currentCategory.getTotal(start.getMonthValue(), start.getYear());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        totalSavings +\u003d savings;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (savings \u003e 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output \u003d \"Your savings for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \" \" + start.getYear() + \" is: $\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + df.format(savings);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (savings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output \u003d \"Your savings for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \" \" + start.getYear() + \" is: $0\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            savings \u003d Math.abs(savings);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (savings \u003c 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                output \u003d \"You have overspent your budget for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \" \" + start.getYear() + \" by $0\" + df.format(savings);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                output \u003d \"You have overspent your budget for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \" \" + start.getYear() + \" by $\" + df.format((savings));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new String[]{output, Double.toString(totalSavings)};"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String[] viewMultiMonthSaving(Budget budget, String iteratorCategory,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                          Category currentCategory, String outputVal) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int numberOfMonths \u003d 0;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int numberOfYears \u003d end.getYear() - start.getYear();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalExpenditure \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalSavings \u003d 0;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String output \u003d outputVal;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (numberOfYears \u003e 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            int startMonthValue \u003d start.getMonthValue();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            int endMonthValue \u003d 12;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int currentYear \u003d start.getYear(); currentYear \u003c\u003d end.getYear(); ++currentYear) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (int currentMonth \u003d startMonthValue; currentMonth \u003c\u003d endMonthValue; ++currentMonth) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    ++numberOfMonths;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    totalExpenditure +\u003d currentCategory.getTotal(currentMonth, currentYear);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                startMonthValue \u003d 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentYear \u003d\u003d end.getYear() - 1) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    endMonthValue \u003d end.getMonthValue();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            numberOfMonths \u003d end.getMonthValue() - start.getMonthValue() + 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int i \u003d start.getMonthValue(); i \u003c end.getMonthValue() + 1; ++i) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                totalExpenditure +\u003d currentCategory.getTotal(i, start.getYear());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double savings \u003d (numberOfMonths * budget.getBudgetFromCategory(iteratorCategory))"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                - totalExpenditure;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        totalSavings +\u003d savings;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (savings \u003e 0) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output \u003d \"Your savings for \" + iteratorCategory + \" from \" + start.getMonth() + \" \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + start.getYear() + \" to \""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + end.getMonth() + \" \" + end.getYear() + \" is: $\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + df.format(savings);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (savings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output \u003d \"Your savings for \" + iteratorCategory + \" from \" + start.getMonth() + \" \""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + start.getYear() + \" to \""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + end.getMonth() + \" \" + end.getYear() + \" is: $0\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            savings \u003d Math.abs(savings);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (savings \u003c 1) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                output \u003d \"You have overspent for your budget for \" + iteratorCategory + \" from \""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + start.getMonth() + \" \" + start.getYear() + \" to \""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + end.getMonth() + \" \" + end.getYear() + \" by: $0\" + df.format(savings);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                output \u003d \"You have overspent for your budget for \" + iteratorCategory + \" from \""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + start.getMonth() + \" \" + start.getYear() + \" to \""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + end.getMonth() + \" \" + end.getYear() + \" by: $\" + df.format(savings);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new String[]{output, Double.toString(totalSavings)};"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 147,
      "shannonlee98": 43
    }
  },
  {
    "path": "src/main/java/moomoo/command/ScheduleCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": " * Represents the command to create a scheduled payment event in advance."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class ScheduleCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static Pattern DATE_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            \"^29/02/(0[48]|[2468][048]|[13579][26])$\"//leap year for feb 29"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            + \"|^(0[1-9]|1[0-9]|2[0-8])/02/\\\\d{2}$\"//28 days of feb"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            + \"|^(0[1-9]|[12][0-9]|3[01])/(0[13578]|10|12)/\\\\d{2}$\"//months with 31 days"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            + \"|^(0[1-9]|[12][0-9]|30)/(0[469]|11)/\\\\d{2}$\");//months with 30 days"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static Pattern AMOUNT_PATTERN \u003d Pattern.compile(\"\\\\d+(\\\\.\\\\d+)?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         * List of scheduled payments"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (input.length() \u003d\u003d 13 \u0026\u0026 input.contains(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            Iterator calIt \u003d calendar.calendar.entrySet().iterator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            String output \u003d \"Scheduled Payments\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/mm/yy\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            Map\u003cDate, ArrayList\u003cString\u003e\u003e sorted \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            while (calIt.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Map.Entry entry \u003d (Map.Entry)calIt.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String sdate \u003d (String) entry.getKey();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    Date date \u003d formatter.parse(sdate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    ArrayList\u003cString\u003e schedules \u003d (ArrayList\u003cString\u003e) entry.getValue();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    sorted.put(date,schedules);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    System.out.println(\"Invalid date input format.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            Iterator sortIt \u003d sorted.entrySet().iterator();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            while (sortIt.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Map.Entry entry \u003d (Map.Entry)sortIt.next();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Date date \u003d (Date) entry.getKey();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MMM-yy\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String sdate \u003d df.format(date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                output +\u003d sdate + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                ArrayList\u003cString\u003e schedules \u003d (ArrayList\u003cString\u003e) entry.getValue();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                for (int i \u003d 0; i \u003c schedules.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    output +\u003d schedules.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            Ui.setOutput(output);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            Ui.showResponse();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (input.length() \u003c 8) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"OOPS!!! To create a schedule payment, \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    + \"please indicate the d/\u003cdate in dd/mm/yyyy\u003e a/\u003camount\u003e n/\u003cdescription of payment\u003e.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        input \u003d input.substring(8);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!input.contains(\"d/\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"MOOOO!!! Please indicate the scheduled date using d/\u003cdd/mm/yy\u003e\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (!input.contains(\"a/\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"MOOOO!!! Please indicate the amount to be paid using a/\u003camount\u003e\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (!input.contains(\"n/\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"MOOOO!!! Please indicate the type of payment using n/\u003cdescription of payment\u003e\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        add scheduled tasks on a particular date to a list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String[] arr \u003d input.split(\" \", 4);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        task \u003d arr[3];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        date \u003d arr[1];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        date \u003d date.replace(\"d/\", \"\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!dateMatches(date)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"MOOO!!! Invalid date input!\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    + \"Check if your month is within 01-12.\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    + \"Check if your day input is valid for that month.\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    + \"Check if your year is a leap year if your day is Feb 29.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String amount;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        amount \u003d arr[2];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        amount \u003d amount.replace(\"a/\", \"\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!amountMatches(amount)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"MOOO!!! Only numbers accepted for amount.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        task \u003d task.replace(\"n/\", \"\") + \" \" + amount;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (calendar.calendar.containsKey(date)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            ArrayList\u003cString\u003e dayTasks \u003d calendar.calendar.get(date);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            dayTasks.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            calendar.calendar.replace(date, dayTasks);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            calendar.addToCalendar(date, task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String blankSpace \u003d \" \";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        int blank \u003d 31 - date.length();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (int j \u003d 1; j \u003c\u003d blank; j++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            blankSpace +\u003d \" \";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String[] money \u003d task.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        int index \u003d money.length - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        task \u003d money[0];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (int i \u003d 1; i \u003c index; i++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            task +\u003d \" \" + money[i];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String blank2 \u003d \" \";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        blank \u003d 31 - task.length();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (int j \u003d 0; j \u003c blank; j++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            blank2 +\u003d \" \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String dollar \u003d money[index];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (task.length() \u003e\u003d 31) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            task \u003d task.substring(0,28) + \"...\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String blank3 \u003d \" \";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        blank \u003d 29 - dollar.length();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (int i \u003d 0; i \u003c blank; i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            blank3 +\u003d \" \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String cow \u003d"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                \"._______________________________________.\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"| ___  ___ _  _ ___ ___  _   _ _    ___ |\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|/ __|/ __| || | __|   \\\\| | | | |  | __||\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|\\\\__ \\\\ (__| __ | _|| |) | |_| | |__| _| |\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"||___/\\\\___|_||_|___|___/ \\\\___/|____|___||\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|                                       |\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|Date : \" + date + blankSpace + \"|\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|Task : \" + task + blank2 + \"|\\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|Amount : \" + dollar + blank3 + \"|\\n\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \".---------------------------------------.\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"                ||     ||\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(cow);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        storage.saveScheduleToFile(calendar);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public boolean dateMatches(String date) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return DATE_PATTERN.matcher(date).matches();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public boolean amountMatches(String amount) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return AMOUNT_PATTERN.matcher(amount).matches();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 166,
      "shannonlee98": 9
    }
  },
  {
    "path": "src/main/java/moomoo/command/SetBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Sets the budget for respective categories."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class SetBudgetCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cDouble\u003e budgets;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the set budget command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to set the budget for."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budgets List of budgets to set the corresponding categories to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public SetBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories, ArrayList\u003cDouble\u003e budgets) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budgets \u003d budgets;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isUpdated \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.size(); ++i) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String categoryName \u003d categories.get(i).toLowerCase();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            double categoryBudget \u003d budgets.get(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (categoryList.get(categoryName) !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (categoryBudget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Please set your budget for \" + categoryName + \" to a value more than 0\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (budget.getBudgetFromCategory(categoryName) !\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Please edit your budget for \" + categoryName + \" using budget edit.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isUpdated \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                budget.addNewBudget(categoryName, categoryBudget);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                int blank \u003d 22 - categoryName.length();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String blankSpace \u003d \" \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                for (int j \u003d 0; j \u003c blank; j++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    blankSpace +\u003d \" \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                blank \u003d 32 - String.valueOf(df.format(categoryBudget)).length();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String blank2 \u003d \" \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                for (int j \u003d 0; j \u003c blank; j++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    blank2 +\u003d \" \";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (categoryName.length() \u003e 20) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categoryName \u003d categoryName.substring(0, 19) + \"...\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String printBudget \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String cow;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (Double.toString(categoryBudget).length() \u003e 20) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    printBudget \u003d Double.toString(categoryBudget).substring(0, 19) + \"...\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (\"\".equals(printBudget)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    cow \u003d"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        \".__________________________________.\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"| ___ _   _ ___   ___ ___ _____    |\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"|| _ ) | | |   \\\\ / __| _ |_   _|   |\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"|| _ \\\\ |_| | |) | (_ | _|  | |     |\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"||___/\\\\___/|___/ \\\\___|___| |_|     |\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"|                                  |\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"|Category : \" + categoryName + blankSpace + \"|\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"|$\" + df.format(categoryBudget) + blank2 + \"|\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \".----------------------------------.\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                                + \"                ||     ||\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    cow \u003d"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        \".__________________________________.\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"| ___ _   _ ___   ___ ___ _____    |\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"|| _ ) | | |   \\\\ / __| _ |_   _|   |\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"|| _ \\\\ |_| | |) | (_ | _|  | |     |\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"||___/\\\\___/|___/ \\\\___|___| |_|     |\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"|                                  |\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"|Category : \" + categoryName + blankSpace + \"|\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"|$\" + printBudget + blank2 + \"|\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \".----------------------------------.\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"                ||     ||\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                outputValue +\u003d cow;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d categoryName + \" category does not exist. Please add it first.\\n\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (isUpdated) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 85,
      "jinwentay": 25,
      "shannonlee98": 10
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/AddCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.CategoryStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class AddCategoryCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Command that takes in a category name from the Parser as string to be converted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryName Category name to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public AddCategoryCommand(String categoryName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, categoryName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category newCategory \u003d new Category(input.toLowerCase());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (categoryList.hasCategory(input)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"You already have a category named \" + input + \".\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.contains(\"|\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please do not use | in your category name\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.add(newCategory);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            CategoryStorage.saveToFile(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showCategoryMessage(\"Added category named : \" + input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 4,
      "Greatnest": 2,
      "shannonlee98": 33
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/AddExpenditureCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.NotificationCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class AddExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String categoryName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String expenditureName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Command that takes in the amount of money spent and the expenditure name and date under which category from the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Parser as strings to be converted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param expenditureName Name of the expenditure spent on. (e.g. Chicken Rice)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param amount          Amount spend on the expenditure."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param date            Date of the spending."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryName    Category that the expenditure is being spent on. (e.g. Food)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public AddExpenditureCommand(String expenditureName, double amount, LocalDate date, String categoryName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.categoryName \u003d categoryName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.expenditureName \u003d expenditureName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category cat \u003d categoryList.get(categoryName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (cat \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Sorry I could not find a category named \" + categoryName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Expenditure newExpenditure \u003d new Expenditure(expenditureName, amount, date, categoryName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        cat.add(newExpenditure);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        NotificationCommand alert \u003d new NotificationCommand(categoryName, cat.getTotal());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        alert.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String alertMessage \u003d alert.getMesage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ExpenditureStorage.saveToFile(newExpenditure.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.showExpenditureMessage(\"Expenditure named : \" + expenditureName,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                \"Added to category : \" + categoryName);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Ui.setOutput(alertMessage + Ui.getOutput());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 31,
      "Greatnest": 4,
      "jinwentay": 1,
      "shannonlee98": 24
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/DeleteCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.CategoryStorage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class DeleteCategoryCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private int categoryIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private boolean isString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Initializes a command to delete a category."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName category to be deleted"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public DeleteCategoryCommand(String categoryName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, categoryName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryIndex \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.isString \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Initializes a command to delete a category."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName category to be deleted"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public DeleteCategoryCommand(int categoryName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryIndex \u003d categoryName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.isString \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (isString) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            this.categoryIndex \u003d categoryList.find(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            this.input \u003d categoryList.get(categoryIndex).name();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            CategoryStorage.deleteFromFile(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.delete(categoryIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showCategoryMessage(\"Re-MOOO-ved category named : \" + input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Please enter a valid category name.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 55
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/DeleteExpenditureCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class DeleteExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String categoryName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private int expenditureIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Command that takes in the amount of money spent and the expenditure name and date under which category from the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Parser as strings to be converted."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param expenditureIndex Name of the expenditure spent on. (e.g. Chicken Rice)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName    Category that the expenditure is being spent on. (e.g. Food)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public DeleteExpenditureCommand(int expenditureIndex, String categoryName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryName \u003d categoryName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.expenditureIndex \u003d expenditureIndex;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category cat \u003d categoryList.get(categoryName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (cat \u003d\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Sorry I could not find a category named \" + categoryName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Expenditure expenditure \u003d cat.get(expenditureIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String expenditureName \u003d expenditure.getName();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ExpenditureStorage.deleteFromFile(expenditure.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.get(categoryName).delete(expenditureIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showExpenditureMessage(\"Expenditure named : \" + expenditureName,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    \"Deleted from category : \" + categoryName);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Sorry I don\u0027t see an expenditure with that name.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 1,
      "shannonlee98": 50
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/ListCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class ListCategoryCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ListCategoryCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e categoryArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Category category \u003d categoryList.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryArray.add((i + 1) + \". \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + category.name() + \" [ $\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + category.getTotal() + \" ]\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.showList(categoryArray, getLongestCategory(categoryArray));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private int getLongestCategory(ArrayList\u003cString\u003e categoryArray) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int longestEntry \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (String entry : categoryArray) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (entry.length() \u003e longestEntry) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                longestEntry \u003d entry.length();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return longestEntry;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 42
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/SortCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MainDisplay;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class SortCategoryCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public SortCategoryCommand(String sortBy) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, sortBy);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (input.startsWith(\"name\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            sort(categoryList, \"name\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (input.startsWith(\"cost\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            sort(categoryList, \"cost\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (input.startsWith(\"date\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            sort(categoryList, \"date\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Oops you can only sort by \u003cname\u003e or \u003ccost\u003e or \u003cdate\u003e\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        MainDisplay newMainDisplay \u003d new MainDisplay();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int cols \u003d newMainDisplay.getCatListSize(categoryList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int rows \u003d newMainDisplay.getMaxCatSize(categoryList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d newMainDisplay.newToPrint(0,0,rows,cols,categoryList,budget,1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.printMainDisplay(output);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setTestOutput(categoryList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sets the test output for testing purposes, shows the expenditures in the first category."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryList category list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void setTestOutput(CategoryList categoryList) throws MooMooException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category category \u003d categoryList.get(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Expenditure entry : category.getCategory()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output \u003d output.concat(entry.toString() + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Ui.setTestOutput(output);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sorts the category list in specified order."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryList list to be sorted"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param order specified ordering"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void sort(CategoryList categoryList, String order) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Category category : categoryList.getCategoryList()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(order);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 1,
      "shannonlee98": 64
    }
  },
  {
    "path": "src/main/java/moomoo/feature/Budget.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Holds a map for the budget for each category."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private HashMap\u003cString, Double\u003e categoryBudgets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes values to default values if no previous budget information is found."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes DecimalFormat to force doubles to display with 2 decimal places."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets \u003d new HashMap\u003cString, Double\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in budget set by user and set budget variable."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes DecimalFormat to force doubles to display with 2 decimal places."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget(HashMap\u003cString, Double\u003e newBudget) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets \u003d newBudget;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String returnVal \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Iterator budgetIterator \u003d categoryBudgets.entrySet().iterator();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (budgetIterator.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Map.Entry mapElement \u003d (Map.Entry) budgetIterator.next();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            returnVal +\u003d \"Your budget for \" + mapElement.getKey() + \" is: $\" + df.format(mapElement.getValue()) + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return returnVal;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns budget from corresponding category."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param category Category to get budget from."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return The budget of the given category."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getBudgetFromCategory(String category) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (this.categoryBudgets.containsKey(category)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return this.categoryBudgets.get(category);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Adds budget to the HashMap and re-adds to total budget if budget is changed or added."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param category Category to which the budget was set"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget to set for the corresponding category"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void addNewBudget(String category, double budget) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets.put(category, budget);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public HashMap\u003cString, Double\u003e getBudget() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.categoryBudgets;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 70,
      "shannonlee98": 1
    }
  },
  {
    "path": "src/main/java/moomoo/feature/Cow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.DetectOsCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class Cow {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    final String fullBlock \u003d \"\\u2588\" + \"\\u2588\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    final String lineOne \u003d \"        \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    final String lineTwo \u003d \"      \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    final String lineThree \u003d \"    \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    final String lineFour \u003d \"  \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String happyCow \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String blackCow \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    String generateHappyCow() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String model \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    \"             /( ,,,,, )\\\\\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"            _\\\\,;;;;;;;,/_\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"         .-\\\"; ;;;;;;;;; ;\\\"-.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"         \u0027.__/`_ / \\\\ _`\\\\__.\u0027\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"            | ($)| |($) |\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"            | .--\u0027 \u0027--. |\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"            |/ o     o \\\\|\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"            |           |\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"           / \\\\ _..\u003d.._ / \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"          /:. \u0027._____.\u0027   \\\\\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"         ;::\u0027    / \\\\      .;\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"         |     _|_ _|_   ::|\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"       .-|     \u0027\u003d\u003do\u003d\u003d\u0027    \u0027|-.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"      /  |  . /       \\\\    |  \\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"      |  | ::|         |   | .|\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"      |  (  \u0027)         (.  )::|\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"      |: |   |; U U U ;|:: | `|\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"      |\u0027 |   | \\\\ U U / |\u0027  |  |\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"      ##V|   |_/`\\\"\\\"\\\"`\\\\_|   |V##\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                            + \"         ##V##         ##V##\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return model;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model \u003d lineOne + ANSI_BLUE; //line 1"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 27; i +\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\" + lineTwo; // line 2"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 29; i +\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\" + lineThree; //line 3"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 13; i +\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\" + lineFour; //line 4"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 14; i +\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 5"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 9; i +\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i +\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 6"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i +\u003d 1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 7"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i +\u003d 1) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 8"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 9; i +\u003d 1) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 9"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 2; i +\u003d 1) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 10"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i +\u003d 1) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 11"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i +\u003d 1) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 12"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i +\u003d 1) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 13"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 9; i +\u003d 1) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 14"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_YELLOW + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 12; i +\u003d 1) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\"; //line 15"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 2; i +\u003d 1) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RED + fullBlock;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE + fullBlock;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_WHITE + fullBlock;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RED + fullBlock;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLUE;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\" + lineFour; //line 16"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RED + fullBlock;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 11; i +\u003d 1) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\" + lineThree; //line 17"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 6; i +\u003d 1) {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_BLACK + fullBlock + fullBlock + fullBlock;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RED + fullBlock;"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 4; i +\u003d 1) {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d \"\\n\" + lineTwo; //line 18"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN + fullBlock;"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RED + fullBlock;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 8; i +\u003d 1) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RED + fullBlock;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 10; i +\u003d 1) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RED + fullBlock;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 7; i +\u003d 1) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            model +\u003d fullBlock;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        model +\u003d ANSI_RESET;"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return model;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public Cow() {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        happyCow \u003d generateHappyCow();"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public String getHappyCow() {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return happyCow;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 470
    }
  },
  {
    "path": "src/main/java/moomoo/feature/MainDisplay.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class MainDisplay {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static DecimalFormat df \u003d new DecimalFormat(\"0.00\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    // Colours to be used for Linux only"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    // Short cut for Bars used to build table"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String TOP_BORDERLEFT \u003d \".-------------------.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String TOP_BORDERRIGHT \u003d \"--------------------------\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String BORDER_LEFT \u003d \"|                   |\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String MONTH_LEFT \u003d \"|Month: \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String YEAR_LEFT \u003d \"|Year: \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String BUDGET_LEFTOS \u003d \"|\" + ANSI_CYAN + \"Budget\" + ANSI_RESET + \":            |\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String SAVINGS_LEFTOS \u003d \"|\" + ANSI_YELLOW + \"Savings\" + ANSI_RESET + \":           |\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String TOTAL_LEFTOS \u003d \"|\" + ANSI_GREEN + \"Total\" + ANSI_RESET + \":             |\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String MISC_TITLESOS \u003d \"|\" + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BORDER_LEFT + \"misc                      |\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BORDER_LEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BORDER_LEFT + \"              |           |\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOTAL_LEFTOS + \"                          |\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BUDGET_LEFTOS + \"                          |\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + SAVINGS_LEFTOS + \"                          |\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String BUDGET_LEFTWIN \u003d \"|\" + \"Budget\" + \":            |\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String SAVINGS_LEFTWIN \u003d \"|\" + \"Savings\" + \":           |\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String TOTAL_LEFTWIN \u003d \"|\" + \"Total\" + \":             |\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String MISC_TITLESWIN \u003d \"|\" + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BORDER_LEFT + \"misc                      |\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BORDER_LEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BORDER_LEFT + \"              |           |\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOTAL_LEFTWIN + \"                          |\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + BUDGET_LEFTWIN + \"                          |\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + SAVINGS_LEFTWIN + \"                          |\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + TOP_BORDERLEFT + TOP_BORDERRIGHT + \".\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public MainDisplay() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * This function is called when user specifies a month and year."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * We want to find out the maximum amount of Expenditures in a valid Category as this will be the number of rows"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * in our table output."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList  categoryList to be passed into the function."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param month month that the user wants to see a summary of."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param year  year that the user wants to see a summary of."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return an Integer corresponding to the number of rows."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public int getMonthsExpSize(CategoryList categoryList, int month, int year) throws MooMooException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int monthsExpSize \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int expSize;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            expSize \u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int j \u003d 0; j \u003c categoryList.get(i).size(); j++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (categoryList.get(i).get(j).getDate().getMonthValue() \u003d\u003d month"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        \u0026\u0026 categoryList.get(i).get(j).getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    expSize +\u003d 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (expSize !\u003d 0 \u0026\u0026 expSize \u003e\u003d monthsExpSize) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                monthsExpSize \u003d expSize;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return monthsExpSize;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * This function is called when user does not specify a month and a year."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * We want to find out the amount of Categories that are in the CategoryList as this will be the number of columns"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * in our table output."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList  categoryList to be passed into the function."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return an Integer corresponding to the number of columns."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public int getCatListSize(CategoryList categoryList) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int catNum \u003d categoryList.size();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return catNum;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Returns the current maximum category size in the categoryList."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList The CategoryList containing all the categories."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the maximum category size."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public int getMaxCatSize(CategoryList categoryList) throws MooMooException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int maxCatSize \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int newCatSize \u003d 0;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int j \u003d 0; j \u003c categoryList.get(i).size(); j++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                newCatSize +\u003d 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (newCatSize \u003e\u003d maxCatSize) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                maxCatSize \u003d newCatSize;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return maxCatSize;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String[] monthsInYear \u003d {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"January\","
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"February\","
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"March\","
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"April\","
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"May\","
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"June\","
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"July\","
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"August\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"September\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"October\","
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"November\","
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"December\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    };"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String openCloseLines \u003d \"\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceMth \u003d \"\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceYr \u003d \"\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceCat \u003d \"\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceExp \u003d \"\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceBud \u003d \"\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceSav \u003d \"\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceCost \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceTot \u003d \"\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * This function takes in several parameters in order to append together a final string to be printed out as a"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * table as final output."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param month month that the user wants to view"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param year year that the user wants to view"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param rows rows corresponds to the max number of expenditures under a category"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param cols cols corresponds to the total number of categories in categoryList"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList categoryList is an array list that stores all the categories"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param budget budget stores all the individual budgets of each categories"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return returns a string to be printed out as the main display"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String newToPrint(int month, int year, int rows, int cols, CategoryList categoryList, Budget budget, int t)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 0; i \u003c ((27 * cols - 12) / 2); i++) {          // Condition for Category Space Set"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            blankSpaceCat +\u003d \" \";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 0; i \u003c (27 * cols - 1); i++) {                     // Condition for Top Header Set"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            openCloseLines +\u003d \"-\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        openCloseLines +\u003d \".\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (cols \u003d\u003d 0) {        // Scenario where there is no Category in the specified periods"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            output \u003d TOP_BORDERLEFT + TOP_BORDERRIGHT  + \".\\n\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            blankSpaceCat \u003d \"       \";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (month \u003d\u003d 0 \u0026\u0026 year \u003d\u003d 0) {          //  Case 1: View All -\u003e Default Misc"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 8; i++) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceMth +\u003d \" \";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 9; i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceYr +\u003d \" \";"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + \"All\" + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + ANSI_BLUE + \"Categories\" + ANSI_RESET + \"\u003e\" + blankSpaceCat + \"|\\n\" + YEAR_LEFT"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"All\" + blankSpaceYr + MISC_TITLESOS;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + \"All\" + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + \"Categories\" + \"\u003e\" + blankSpaceCat + \"|\\n\" + YEAR_LEFT"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"All\" + blankSpaceYr + MISC_TITLESWIN;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {          //  Case 2: View Specific Month -\u003e Default Misc"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 11 - monthsInYear[month - 1].length(); i++) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceMth +\u003d \" \";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 8; i++) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceYr +\u003d \" \";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + monthsInYear[month - 1] + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + ANSI_BLUE + \"Categories\" + ANSI_RESET + \"\u003e\" + blankSpaceCat + \"|\\n\" + YEAR_LEFT"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + year + blankSpaceYr + MISC_TITLESOS;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + monthsInYear[month - 1] + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + \"Categories\" + \"\u003e\" + blankSpaceCat + \"|\\n\" + YEAR_LEFT"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + year + blankSpaceYr + MISC_TITLESWIN;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else {            // Scenario where there are Categories in the specified periods"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            output +\u003d TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (month \u003d\u003d 0 \u0026\u0026 year \u003d\u003d 0) {          //  Case 1: View All"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 8; i++) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceMth +\u003d \" \";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 9; i++) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceYr +\u003d \" \";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + \"All\" + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + ANSI_BLUE + \"Categories\" + ANSI_RESET + \"\u003e\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + \"All\" + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + \"Categories\" + \"\u003e\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (cols % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String blankSpaceTemp \u003d blankSpaceCat;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceTemp \u003d blankSpaceTemp.substring(0, blankSpaceTemp.length() - 1);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d blankSpaceTemp;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d blankSpaceCat;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"|\\n\" + YEAR_LEFT + \"All\" + blankSpaceYr + \"|\";"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c cols; i++) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d TOP_BORDERRIGHT + \".\";"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + BORDER_LEFT;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Printing out the line with all the categories"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c cols; i++) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceCat \u003d \"\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String catName \u003d categoryList.get(i).name();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (catName.length() \u003e 26) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        catName \u003d catName.substring(0, 23) + \"...\";"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        for (int j \u003d 0; j \u003c (26 - categoryList.get(i).name().length()); j++) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceCat +\u003d \" \";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        output +\u003d ANSI_PURPLE + catName + ANSI_RESET + blankSpaceCat + \"|\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        output +\u003d catName + blankSpaceCat + \"|\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + BORDER_LEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Printing out the lines corresponding to number of rows with both expenditureName and Amount"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c rows; i++) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d BORDER_LEFT;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    for (int j \u003d 0; j \u003c cols; j++) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        if (i \u003c categoryList.get(j).size()) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            String expenditureName \u003d categoryList.get(j).get(i).getName();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            String amountString \u003d df.format(categoryList.get(j).get(i).getCost());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            // prints out each individual expenditureName if it exists"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            if (expenditureName.length() \u003e 14) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                expenditureName \u003d expenditureName.substring(0, 11) + \"...\";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                blankSpaceExp \u003d \"\";"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                for (int h \u003d 0; h \u003c (14 - categoryList.get(j).get(i).getName().length()); h++) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    blankSpaceExp +\u003d \" \";"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            if (amountString.length() \u003e 10) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                amountString \u003d amountString.substring(0, 7) + \"...\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                blankSpaceCost \u003d \"\";"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                // prints out each individual expenditure Cost if it exists"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                for (int k \u003d 0; k \u003c (10 - amountString.length()); k++) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    blankSpaceCost +\u003d \" \";"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d expenditureName + blankSpaceExp + \"|\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    //+ ANSI_GREEN + \"$\" + ANSI_RESET"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    + \"$\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    + amountString + blankSpaceCost + \"|\";"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            // if expenditure dosen\u0027t exist, print out the filler space"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d \"              \" + \"|\" + \"           |\";"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d TOTAL_LEFTOS;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d TOTAL_LEFTWIN;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceTot \u003d \"\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String totString \u003d df.format(categoryList.get(i).getOverallAmount());"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (totString.length() \u003e 25) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        totString \u003d totString.substring(0, 22) + \"...\";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        for (int j \u003d 0; j \u003c (25 - totString.length()); j++) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceTot +\u003d \" \";"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d \"$\" + totString + blankSpaceTot + \"|\";"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d BUDGET_LEFTOS;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d BUDGET_LEFTWIN;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceBud \u003d \"\";"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String budName \u003d df.format(budget.getBudgetFromCategory(categoryList.get(i).name()));"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    int budLen \u003d 25 - budName.length();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (budName.length() \u003e 25) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        budName \u003d budName.substring(0, 22) + \"...\";"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        for (int j \u003d 0; j \u003c budLen; j++) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceBud +\u003d \" \";"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d \"$\" + budName + blankSpaceBud + \"|\";"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d SAVINGS_LEFTOS;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d SAVINGS_LEFTWIN;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceSav \u003d \"\";"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    double tot \u003d categoryList.get(i).getOverallAmount();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    double bud \u003d budget.getBudgetFromCategory(categoryList.get(i).name());"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    double sav \u003d bud - tot;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String savString \u003d df.format(sav);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (savString.length() \u003e 25) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        savString \u003d savString.substring(0, 22) + \"...\";"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        for (int j \u003d 0; j \u003c (25 - savString.length()); j++) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceSav +\u003d \" \";"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (sav \u003c 0) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d \"$\" + ANSI_RED + savString + ANSI_RESET + blankSpaceSav + \"|\";"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d \"$\" + savString + blankSpaceSav + \"|\";"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        output +\u003d \"$\" + savString + blankSpaceSav + \"|\";"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {                                //  Case 2: View Specific Month"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 11 - monthsInYear[month - 1].length(); i++) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceMth +\u003d \" \";"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c\u003d 8; i++) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceYr +\u003d \" \";"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Every time the main display command is called user specifies month/year create new temp hash map"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                HashMap\u003cString,ArrayList\u003cString\u003e\u003e newCategoryList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Initializes the HashMap for use later as newCategoryList"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    // If array list does not exist, create it"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    ArrayList\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    for (int j \u003d 0; j \u003c categoryList.get(i).size(); j++) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        // Add to array list only if it matches the month and year user is looking for"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        if (categoryList.get(i).get(j).getDate().getMonthValue() \u003d\u003d month"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                \u0026\u0026 categoryList.get(i).get(j).getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                            stringList.add(categoryList.get(i).get(j).getName());"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            stringList.add(df.format(categoryList.get(i).get(j).getCost()));"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    newCategoryList.put(categoryList.get(i).name(), stringList);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + monthsInYear[month - 1] + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + ANSI_BLUE + \"Categories\" + ANSI_RESET + \"\u003e\";"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d MONTH_LEFT + monthsInYear[month - 1] + blankSpaceMth + \"|\" + blankSpaceCat"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"\u003c\" + \"Categories\" + \"\u003e\";"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (cols % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String blankSpaceTemp \u003d blankSpaceCat;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceTemp \u003d blankSpaceTemp.substring(0, blankSpaceTemp.length() - 1);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d blankSpaceTemp;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d blankSpaceCat;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"|\\n\" + YEAR_LEFT + year + blankSpaceYr + \"|\";"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c cols; i++) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d TOP_BORDERRIGHT + \".\";"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + BORDER_LEFT;"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Printing out the line with all the categories"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c cols; i++) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String catName \u003d categoryList.get(i).name();"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceCat \u003d \"\";"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (catName.length() \u003e 26) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        catName \u003d catName.substring(0, 23) + \"...\";"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        for (int j \u003d 0; j \u003c (26 - categoryList.get(i).name().length()); j++) {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceCat +\u003d \" \";"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        output +\u003d ANSI_PURPLE + catName + ANSI_RESET + blankSpaceCat + \"|\";"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        output +\u003d catName + blankSpaceCat + \"|\";"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + BORDER_LEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Printing out the lines corresponding to number of rows with both expenditureName and Amount"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c rows; i++) {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d BORDER_LEFT;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    for (int j \u003d 0; j \u003c cols; j++) {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        String categoryName \u003d categoryList.get(j).name();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        if (i \u003c categoryList.get(j).size()) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            String expenditureName \u003d \"\";"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            String amountString \u003d \"\";"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            if (!newCategoryList.get(categoryName).isEmpty()) {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                // for nth row, nth category, extract the expenditure name (odd no in array list)"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                expenditureName \u003d newCategoryList.get(categoryName).get(0);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                // for nth row, nth category, extract the expenditure cost (even no in array list)"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                amountString \u003d newCategoryList.get(categoryName).get(1);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            for (int k \u003d 0; k \u003c 2; k++) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                if (!newCategoryList.get(categoryName).isEmpty()) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    newCategoryList.get(categoryName).remove(0);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            if (expenditureName.length() \u003e 14) {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                expenditureName \u003d expenditureName.substring(0, 11) + \"...\";"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                blankSpaceExp \u003d \"\";"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                // prints out each individual expenditure Name if it exists"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                for (int h \u003d 0; h \u003c (14 - expenditureName.length()); h++) {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    blankSpaceExp +\u003d \" \";"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            if (amountString.length() \u003e 10) {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                amountString \u003d amountString.substring(0, 7) + \"...\";"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                blankSpaceCost \u003d \"\";"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                // prints out each individual expenditure Cost if it exists"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                for (int g \u003d 0; g \u003c (10 - amountString.length()); g++) {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    blankSpaceCost +\u003d \" \";"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d expenditureName + blankSpaceExp + \"|\""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    + \"$\""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                                    + amountString + blankSpaceCost + \"|\";"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            // if expenditure dosen\u0027t exist, print out the filler space"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d \"              \" + \"|\" + \"           |\";"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Prints out the line that contains all the total cost for each category"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d TOTAL_LEFTOS;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d TOTAL_LEFTWIN;"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceTot \u003d \"\";"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    int totalLen \u003d df.format(categoryList.get(i).getTotal(month, year)).length();"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String totalString \u003d df.format(categoryList.get(i).getTotal(month, year));"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (totalString.length() \u003e 25) {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        totalString \u003d totalString.substring(0, 22) + \"...\";"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        for (int j \u003d 0; j \u003c (25 - totalLen); j++) {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceTot +\u003d \" \";"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d \"$\" + totalString + blankSpaceTot + \"|\";"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Prints out the line that contains all the budgets for each category"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d BUDGET_LEFTOS;"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d BUDGET_LEFTWIN;"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceBud \u003d \"\";"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String budName \u003d df.format(budget.getBudgetFromCategory(categoryList.get(i).name()));"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    int budLen \u003d 25 - budName.length();"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (budName.length() \u003e 25) {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        budName \u003d budName.substring(0, 22) + \"...\";"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        for (int j \u003d 0; j \u003c budLen; j++) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceBud +\u003d \" \";"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d \"$\" + budName + blankSpaceBud + \"|\";"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                // Prints out the line that contains all the savings for each category"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d SAVINGS_LEFTOS;"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    output +\u003d SAVINGS_LEFTWIN;"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceSav \u003d \"\";"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    double tot \u003d categoryList.get(i).getTotal(month, year);"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    double bud \u003d budget.getBudgetFromCategory(categoryList.get(i).name());"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    double sav \u003d bud - tot;"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    String savString \u003d df.format(sav);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (savString.length() \u003e 25) {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        savString \u003d savString.substring(0, 22) + \"...\";"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        for (int j \u003d 0; j \u003c (25 - df.format(sav).length()); j++) {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            blankSpaceSav +\u003d \" \";"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    if (sav \u003c 0) {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d \"$\" + ANSI_RED + savString + ANSI_RESET + blankSpaceSav + \"|\";"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            output +\u003d \"$\" + savString + blankSpaceSav + \"|\";"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        output +\u003d \"$\" + savString + blankSpaceSav + \"|\";"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + TOP_BORDERLEFT + openCloseLines + \"\\n\";"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 551,
      "jinwentay": 2,
      "shannonlee98": 14
    }
  },
  {
    "path": "src/main/java/moomoo/feature/MooMooException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents Exceptions that are dedicated to Duke functions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMooException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public MooMooException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 9,
      "shannonlee98": 1
    }
  },
  {
    "path": "src/main/java/moomoo/feature/ScheduleList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class ScheduleList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public HashMap\u003cString, ArrayList\u003cString\u003e\u003e calendar;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.calendar \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleList(HashMap\u003cString, ArrayList\u003cString\u003e\u003e loadedSchedule) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.calendar \u003d loadedSchedule;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Adds a new item to hashmap if date indicated was not found in hashmap."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param date Pass in the scheduled task\u0027s date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param task Pass in the task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void addToCalendar(String date, String task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ArrayList\u003cString\u003e dayTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        dayTasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        calendar.put(date, dayTasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Returns list of scheduled payments due today."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param date Pass in today\u0027s date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @return a list of scheduled payments due today."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String showSchedule(String date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String output \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                \".__________________________.\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|Outstanding Payment Today |\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|--------------------------|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (date.length() \u003c 8) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            date \u003d \"0\" + date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (calendar.containsKey(date)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            for (String n : calendar.get(date)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String blanks \u003d \" \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                n \u003d n.replaceAll(\"[0-9]\",\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                int blank \u003d 19 - n.length();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d blank; i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    blanks +\u003d \" \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                if (n.length() \u003e 19) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    n \u003d n.substring(0,16) + \"...\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String[] amount \u003d n.split(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                int index \u003d amount.length - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String blank2 \u003d \" \";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                blank \u003d 4 - amount[index].length();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d blank; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    blank2 +\u003d \" \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                String money \u003d amount[index];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                if (amount[index].length() \u003e 4) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    money \u003d \"$...\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                output +\u003d \"|\" + n + blanks + \"|\" + money + blank2 + \"|\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        output +\u003d \".--------------------------.\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 69,
      "shannonlee98": 1
    }
  },
  {
    "path": "src/main/java/moomoo/feature/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the User Interface to be shown to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final int DEFAULT_BOX \u003d 45;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String output \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String testOutput \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints out a message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param text message to be printed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static void print(String text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Returns the value to be printed to the GUI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return String to be printed on the GUI"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static String getOutput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sets the myOutput to be printed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param myOutput Input value to be printed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void setOutput(String myOutput) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        output \u003d myOutput;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void setTestOutput(String output) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        testOutput \u003d output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Gets output for testing purposes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return testOutput"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static String getTestOutput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return testOutput;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Clears the screen."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void clearScreen() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        System.out.print(\"\\u001b[2J\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints the welcome message to the User."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\" __      _____ _    ___ ___  __  __ ___   _____ ___ \\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \" \\\\ \\\\    / / __| |  / __/ _ \\\\|  \\\\/  | __| |_   _/ _ \\\\\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"  \\\\ \\\\/\\\\/ /| _|| |_| (_| (_) | |\\\\/| | _|    | || (_) |\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"   \\\\_/\\\\_/ |___|____\\\\___\\\\___/|_|  |_|___|   |_| \\\\___/ \\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \" __  __  ___   ___  __  __  ___   ___  __  __  ___  _  _ _____   __\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"|  \\\\/  |/ _ \\\\ / _ \\\\|  \\\\/  |/ _ \\\\ / _ \\\\|  \\\\/  |/ _ \\\\| \\\\| | __\\\\ \\\\ / /\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"| |\\\\/| | (_) | (_) | |\\\\/| | (_) | (_) | |\\\\/| | (_) | .` | _| \\\\ V /\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|_|  |_|\\\\___/ \\\\___/|_|  |_|\\\\___/ \\\\___/|_|  |_|\\\\___/|_|\\\\_|___| |_|\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Used to read input from the user."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String representing the input given by the User"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return inputScanner.nextLine().trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Sets good bye message to be shown to the User."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void showGoodbye() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        output \u003d \"Hope you had a great time using MooMooMoney!\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"See you next time :)\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns message of MooMooException that occurs."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param e MooMooException that occurs"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return Message of the MooMooException"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static String printException(MooMooException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (!e.getMessage().isBlank()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output \u003d ANSI_RED + e.getMessage() + ANSI_RESET + \"\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints out response from command."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void showResponse() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            PrintStream out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            out.println(output);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        output \u003d \"\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Show today\u0027s date."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static String showDate() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String formattedDate \u003d today.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String shortDate \u003d today.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        print(\"\\n\" + formattedDate + \"\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return shortDate;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints out when a new category is created."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName name of the new category"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void showCategoryMessage(String categoryName) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int boxLength \u003d Math.max(DEFAULT_BOX, categoryName.length());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        boxLength +\u003d 5;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String box \u003d \" \";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(boxLength, box, \"_\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\"\\n/ Mooo.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int blanks1 \u003d boxLength - 6;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(blanks1, box, \" \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\"\\\\\\n\\\\ \" + categoryName);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        getBoxBottom(categoryName, boxLength, box, \"/\\n \");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Prints out when a new expenditure is created."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param expenditureName name of the new expenditure"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName category containing expenditure"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void showExpenditureMessage(String expenditureName, String categoryName) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int boxLength \u003d Math.max(expenditureName.length(), categoryName.length());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        boxLength \u003d Math.max(boxLength, DEFAULT_BOX);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        boxLength +\u003d 5;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String box \u003d \"  \";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(boxLength, box, \"_\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\"\\n / Mooo.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int blanks1 \u003d boxLength - 6;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(blanks1, box, \" \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\"\\\\\\n|  \" + expenditureName);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int blanks2 \u003d boxLength - expenditureName.length();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(blanks2, box, \" \");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\"|\\n \\\\ \" + categoryName);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        getBoxBottom(categoryName, boxLength, box, \"/\\n  \");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static void getBoxBottom(String categoryName, int boxLength, String box, String lineEnding) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int blanks \u003d boxLength - 1 - categoryName.length();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(blanks, box, \" \");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(lineEnding);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(boxLength, box, \"-\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\"\\n\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        testOutput \u003d box;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(getCow());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setOutput(box + \"\\n\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Shows the user the overall list of categories."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param namesOfCategories list of category names"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param longestCategory number of characters in the longest category name"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void showList(ArrayList\u003cString\u003e namesOfCategories, int longestCategory) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int boxLength \u003d Math.max(DEFAULT_BOX, longestCategory);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        boxLength +\u003d 5;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int blankSpace \u003d boxLength - 33;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String list \u003d  \".\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        list \u003d addChars(boxLength, list, \"_\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        list \u003d list.concat(\".\\n\" + \"|Here are your current categories.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        list \u003d addChars(blankSpace, list, \" \");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        list \u003d list.concat(\"|\\n\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (String categoryName : namesOfCategories) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            list \u003d list.concat(\"|\" + categoryName);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            blankSpace \u003d boxLength - categoryName.length();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            list \u003d addChars(blankSpace, list, \" \");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            list \u003d list.concat(\"|\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setStraightBoxBottom(boxLength, list);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sets output to a test box with the input text inside and a cow underneath it."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param input text to put in the box"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static String showInCowBox(ArrayList\u003cString\u003e input) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int longestString \u003d getLongestStringLength(input);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int boxLength \u003d Math.max(45, longestString);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        boxLength +\u003d 5;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String cow \u003d \".\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        cow \u003d addChars(boxLength, cow, \"_\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        cow \u003d cow.concat(\".\\n\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (String line : input) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            int lineLength \u003d line.length();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (line.contains(\"\\u001B\")) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                lineLength -\u003d 9;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            cow \u003d cow.concat(\"|\" + line);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            cow \u003d addChars(boxLength - lineLength, cow, \" \");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            cow \u003d cow.concat(\"|\\n\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return setStraightBoxBottom(boxLength, cow);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sets the bottom of the text box and cow underneath it."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param boxLength width of the box"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param box straight text box without the bottom line"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String setStraightBoxBottom(int boxLength, String box) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\".\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d addChars(boxLength, box, \"-\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(\".\\n\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        testOutput \u003d box;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        box \u003d box.concat(getCow());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setOutput(box + \"\\n\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return box + \"\\n\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Concats the input char sequence a specified number of times to a string."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param length number of times to add"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param output string to concat char sequence"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param regex char sequence"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return output with the char sequence added"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String addChars(int length, String output, String regex) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            output \u003d output.concat(regex);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Gets the length of the longest string in an array of strings."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param input string array"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return length of the longest string"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static int getLongestStringLength(ArrayList\u003cString\u003e input) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (String line : input) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (line.length() \u003e max) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                max \u003d line.length();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return max;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prompts the user to enter what to add."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void showPrompt(String text) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(text);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void printMainDisplay(String newMainDisplay) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setOutput(newMainDisplay);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String getCow() {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"                ||     ||\\n\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 2,
      "guanyewtan": 2,
      "Greatnest": 43,
      "jinwentay": 20,
      "shannonlee98": 239
    }
  },
  {
    "path": "src/main/java/moomoo/feature/category/Category.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Category {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String DATE \u003d \"date\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String NAME \u003d \"name\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String COST \u003d \"cost\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private ArrayList\u003cExpenditure\u003e category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String categoryName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String sortOrder;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Initializes a new category with a name, an empty list of expenditures, and a monthly total."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param name category name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryName \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.sortOrder \u003d DATE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void add(Expenditure newExpenditure) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        category.add(newExpenditure);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        sort(sortOrder);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void delete(int expenditureNumber) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        category.remove(expenditureNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return category.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Expenditure get(int i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return category.get(i);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String name() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryName;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Returns the total expenditure for the given month and year."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param month integer value representing the month"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param year integer value representing the value."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return total expenditure spent for corresponding month and year"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month, int year) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double totalCost \u003d 0.00;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Expenditure currExpenditure : category) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (currExpenditure.getDate().getMonthValue() \u003d\u003d month"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    \u0026\u0026 currExpenditure.getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                totalCost +\u003d currExpenditure.getCost();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return totalCost;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    double getTotal(int month) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getTotal(month, LocalDate.now().getYear());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getTotal(LocalDate.now().getMonthValue(), LocalDate.now().getYear());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Return the overall amount from every Category."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the overall amount from every Category as a double."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public double getOverallAmount() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        double overallAmount \u003d 0.0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (Expenditure currExpenditure : category) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            overallAmount +\u003d currExpenditure.getCost();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return overallAmount;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Return the expenditure with the largest value."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return expenditure The value of the largest expenditure"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public double getLargestExpenditure(int month, int year) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double expenditure \u003d 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Expenditure exp : category) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (exp.getDate().getMonthValue() !\u003d month || exp.getDate().getYear() !\u003d year) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (exp.getCost() \u003e expenditure) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                expenditure \u003d exp.getCost();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return expenditure;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * The expenditure with the longest name."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return The name of the longest expenditure"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public int getLongestExpenditure() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int longestName \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Expenditure exp : category) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (exp.getName().length() \u003e longestName) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                longestName \u003d exp.getName().length();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (longestName \u003e\u003d 14) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                longestName \u003d 14;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return longestName;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sorts expenditures within each category according to the type specified."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param type type of sort"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void sort(String type) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (\"name\".equals(type)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(Comparator.comparing(Expenditure::getName));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            sortOrder \u003d NAME;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (\"cost\".equals(type)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(Comparator.comparingDouble(Expenditure::getCost).reversed());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            sortOrder \u003d COST;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (\"date\".equals(type)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(Comparator.comparing(Expenditure::dateToString));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            sortOrder \u003d DATE;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Populate the categoryList array with dummy variables. FOR TESTING PURPOSES."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testPopulate() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e population \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"SanicTheHodgepodge\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"MetalGearLiquid\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"GTB\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"Far:Automata\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"League of Mobile Legends\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Expenditure newExp \u003d new Expenditure(population.get(i), i * 100 / (i + 3), LocalDate.now(),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    \"population\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            category.add(newExp);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ArrayList\u003cExpenditure\u003e getCategory() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String getIndex(String categoryName) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 23,
      "Greatnest": 3,
      "guanyewtan": 49,
      "shannonlee98": 85
    }
  },
  {
    "path": "src/main/java/moomoo/feature/category/CategoryList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private ArrayList\u003cCategory\u003e categoryList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categoryList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryList \u003d categoryList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return categoryList.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void add(Category newCategory) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(newCategory);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void delete(int categoryIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.remove(categoryIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Returns the category if it currently exists."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param value Name of category to return."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return The category with name equal to value, or null if it is not found."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category get(String value) throws MooMooException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String name \u003d category.name();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (name.contentEquals(value)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return category;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Returns the category at the specified index of a category list, throws exception if not found."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param i index of the category list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return category at the specified index"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException if the index does not exist in the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category get(int i) throws MooMooException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return categoryList.get(i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Sorry I couldn\u0027t find a category with that index.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ArrayList\u003cCategory\u003e getCategoryList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Finds a category within the category list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName category to find"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return index of the category to be found"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException thrown if category is not in the category list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public int find(String categoryName) throws MooMooException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (get(i).name().contentEquals(categoryName)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        throw new MooMooException(\"Sorry I could not find a category named \" + categoryName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Return the total sum of all expenditure across all categories for the current month."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return total The total sum"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private double getTotal(int month, int year) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double total \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            total +\u003d category.getTotal(month, year);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return total;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getTotal(LocalDate.now().getMonthValue(), LocalDate.now().getYear());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Find the category with the largest total expenditure and return the value of that expenditure."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return expenditure The value of the largest expenditure"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getLargestExpenditure(int month) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double expenditure \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (category.getTotal(month) \u003e expenditure) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                expenditure \u003d category.getTotal(month);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return expenditure;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Get the length of the name of the Category with the longest name."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return Length of the name of the Category with the longest name, if it is longer than 14 characters, return 14"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public int getLongestCategory() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int longestName \u003d 0;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (category.name().length() \u003e longestName) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                longestName \u003d category.name().length();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (longestName \u003e\u003d 14) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                longestName \u003d 14;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return longestName;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Determines if the category list contains a category with its name matching the query."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName Name of the category to be found"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return True if a category is found, false if otherwise"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public boolean hasCategory(String categoryName) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            find(categoryName);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 16,
      "guanyewtan": 44,
      "shannonlee98": 84
    }
  },
  {
    "path": "src/main/java/moomoo/feature/category/Expenditure.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class Expenditure {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private double cost;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static DecimalFormat df \u003d new DecimalFormat(\"#.##\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Initializes name, value and date of expenditure if given by user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param name     Name of the expenditure (e.g chicken rice)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param cost     Cost of the expenditure."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param date     Date of the expenditure."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param category Name of the category it belongs to."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Expenditure(String name, double cost, LocalDate date, String category) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return category + \" | \" + name + \" | \" + cost + \" | \" + date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String dateToString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getCost() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return this.cost;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return (df.format(this.cost)).length();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 22,
      "guanyewtan": 1,
      "Greatnest": 2,
      "shannonlee98": 26
    }
  },
  {
    "path": "src/main/java/moomoo/feature/parser/CategoryParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.AddCategoryCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.DeleteCategoryCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "class CategoryParser extends Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Parses which command to return based on the user\u0027s input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Valid inputs are add, edit, or delete."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param scanner user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return an add, edit, or delete command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException if user\u0027s input does not match any of valid commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    static Command parse(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String commandType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            commandType \u003d scanner.next();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.setOutput(ANSI_GREEN + \"Would you like to add, edit, or delete a category?\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \"Try entering one of these commands:\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \"category add [CATEGORY NAME]\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \"category delete [CATEGORY NAME or CATEGORY INDEX NUMBER]\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"add\"): return parseAdd(scanner);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"delete\"): return parseDelete(scanner);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        default: throw new MooMooException(\"Oops, recognized commands are \u003cadd\u003e, \u003cedit\u003e, and \u003cdelete\u003e.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseAdd(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d \"What category would you like to add?\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryName \u003d parseInput(scanner, text);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (categoryName.contains(\"/\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Sorry, your category name cannot contain a \\\"/\\\".\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return new AddCategoryCommand(categoryName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseDelete(Scanner scanner) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d \"What category do you wish to delete?\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryName \u003d parseInput(scanner, text);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            int categoryIndex \u003d Integer.parseInt(categoryName) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new DeleteCategoryCommand(categoryIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new DeleteCategoryCommand(categoryName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 60
    }
  },
  {
    "path": "src/main/java/moomoo/feature/parser/ExpenditureParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.AddExpenditureCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.SortCategoryCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "class ExpenditureParser extends Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    static Command parse(String commandType, Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"add\"): return parseAdd(scanner);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"delete\"): return parseDelete(scanner);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"sort\"): return parseSort(scanner);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        default: throw new MooMooException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        + \"Use the \u003chelp\u003e command to see a list of commands.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseAdd(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d ANSI_GREEN + \"What expenditure do you wish to add? Please enter:\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                + \"n/[NAME] c/[CATEGORY] a/[AMOUNT] (optional: d/[d/MM/yyyy])\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String input \u003d parseInput(scanner, text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryName \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String expenditureName \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String amountString \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String dateString \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double amount \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        input \u003d input.replace(\"c/\", \"-c-\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        input \u003d input.replace(\"a/\", \"-a-\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        input \u003d input.replace(\"n/\", \"-n-\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        input \u003d input.replace(\"d/\", \"-d-\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String[] tokens \u003d input.split(\"-\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int tokenCount \u003d tokens.length;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c tokenCount; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (tokens[i].equals(\"c\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                categoryName \u003d tokens[i + 1].toLowerCase().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else if (tokens[i].equals(\"n\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                expenditureName \u003d tokens[i + 1].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else if (tokens[i].equals(\"a\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                amountString \u003d tokens[i + 1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else if (tokens[i].equals(\"d\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                dateString \u003d tokens[i + 1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (categoryName.isBlank()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Oops, you forgot to enter a category.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (expenditureName.isBlank()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Oops, you forgot to enter a name.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            amount \u003d Double.parseDouble(amountString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Oops, the amount you entered was not recognized,\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \"please use an double value e.g. 9.90.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (!dateString.isBlank()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                date \u003d LocalDate.parse(dateString, formatter);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                throw new MooMooException(\"Opps, the date you entered was not recognized,\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \" please use a date in the format of dd/mm/yyyy\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (amount \u003e 0) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new AddExpenditureCommand(expenditureName, amount, date, categoryName);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        throw new MooMooException(\"Oops, the amount you entered was less than or equal to zero.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseDelete(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d ANSI_GREEN + \"What expenditure do you wish to add? Please enter:\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"delete i/[INDEX] c/[CATEGORY]\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String input \u003d parseInput(scanner, text);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryName \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String indexString \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        input \u003d input.replace(\"c/\", \"/c/\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        input \u003d input.replace(\"i/\", \"/i/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String[] tokens \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int tokenCount \u003d tokens.length;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c tokenCount; i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (tokens[i].equals(\"c\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                categoryName \u003d tokens[i + 1].toLowerCase().trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else if (tokens[i].equals(\"i\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                indexString \u003d tokens[i + 1].trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            int index \u003d Integer.parseInt(indexString) - 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new DeleteExpenditureCommand(index, categoryName);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Please use an integer value for the index.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseSort(Scanner scanner) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d ANSI_GREEN + \"How would you like to sort your expenditures:\" + ANSI_RESET"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \"\\n\u003cname\u003e\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \"\\n\u003ccost\u003e\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \"\\n\u003cdate\u003e\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String sortType \u003d parseInput(scanner, text);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return new SortCategoryCommand(sortType);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 18,
      "shannonlee98": 105
    }
  },
  {
    "path": "src/main/java/moomoo/feature/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.EditBudgetCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.GraphCategoryCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.GraphTotalCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.HelpCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.ListBudgetCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.MainDisplayCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.MooCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.SavingsBudgetCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.ScheduleCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.ListCategoryCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Takes in a string and parses it to return a valid command to be ran."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Takes in input from user and returns a command based on the input given. All parsing of input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * should be done here including separating a line of command into parts for each command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input String given by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return The command object corresponding to the user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when an invalid input is given"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static Command parse(String input) throws MooMooException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Scanner scanner \u003d new Scanner(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String commandType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            commandType \u003d scanner.next();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        case (\"exit\"):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return new ExitCommand(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"budget\"):"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return parseBudget(scanner);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"schedule\"):"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ScheduleCommand(false, input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"category\"):"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return CategoryParser.parse(scanner);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new ListCategoryCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"graph\"):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return parseGraph(scanner);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"help\"):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        case (\"moo\"):"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return new MooCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        case (\"view\"):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return parseView(scanner);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return ExpenditureParser.parse(commandType, scanner);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    static String parseInput(Scanner scanner, String text) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return scanner.nextLine().trim().toLowerCase();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.showPrompt(text);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return Ui.readCommand().trim().toLowerCase();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static Command parseGraph(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int inputMonth \u003d LocalDate.now().getMonthValue();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int inputYear \u003d LocalDate.now().getYear();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"Try adding c/[CATEGORY] m/[MONTH] y/[YEAR] or \\\"total\\\"!\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"*month and year are optional!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (input.equals(\"total\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                return new GraphTotalCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputCategory \u003d input.substring(2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else if (input.startsWith(\"m/\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputMonth \u003d Integer.parseInt(input.substring(2));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else if (input.startsWith(\"y/\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputYear \u003d Integer.parseInt(input.substring(2));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputCategory \u003d input.substring(2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else if (input.startsWith(\"m/\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputMonth \u003d Integer.parseInt(input.substring(2));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else if (input.startsWith(\"y/\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputYear \u003d Integer.parseInt(input.substring(2));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputCategory \u003d input.substring(2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else if (input.startsWith(\"m/\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputMonth \u003d Integer.parseInt(input.substring(2));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else if (input.startsWith(\"y/\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                inputYear \u003d Integer.parseInt(input.substring(2));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"Please enter valid input for the parameters!! MOOOOO!!!!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (inputCategory.equals(\"\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"Please add a CATEGORY!!! MoOoOoOoO\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else if (0 \u003c inputMonth \u0026\u0026 inputMonth \u003c 13) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return new GraphCategoryCommand(inputCategory,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    inputMonth,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    inputYear);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"Please enter a number (from 1 to 12) for the month!!! MOOOOO!!!!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseView(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String text \u003d \"Which month\u0027s summary do you wish to view?\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                + \"1.(m/) month\" + \" (y/) year\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                + \"2.current\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                + \"3.all\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String input \u003d parseInput(scanner, text);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        LocalDate now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (input.startsWith(\"m/\") || input.startsWith(\"y/\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int month \u003d now.getMonthValue();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int year \u003d now.getYear();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            String[] tokens \u003d input.split(\"/|\\\\s+\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int tokenCount \u003d tokens.length;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int i \u003d 0; i \u003c tokenCount; i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (tokens[i].equals(\"m\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        month \u003d Integer.parseInt(tokens[i + 1]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new MooMooException(\"Please enter a valid month (from 1 to 12)!!! MOOOOO!!!!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (tokens[i].equals(\"y\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        year \u003d Integer.parseInt(tokens[i + 1]);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        throw new MooMooException(\"Please enter a valid year!!! MOOOOOO!!!!!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if ((month \u003e 0 \u0026\u0026 month \u003c\u003d 12) \u0026\u0026 (year \u003e 0 \u0026\u0026 year \u003c\u003d 10000)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                return new MainDisplayCommand(month, year);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                throw new MooMooException(\"Please enter a valid month (from 1 to 12) and a valid year!!! MOOOOO!!!!\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else if (input.equals(\"current\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int month \u003d now.getMonth().getValue();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int year \u003d now.getYear();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            return new MainDisplayCommand(month, year);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else if (input.equals(\"all\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int month \u003d 0;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int year \u003d 0;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            return new MainDisplayCommand(month, year);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        throw new MooMooException(\"Sorry, but MooMoo no recognize that command :(\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command parseBudget(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"There is only edit/set/list/savings command under budget.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"set\":"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return setOrEditBudget(scanner, false);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return setOrEditBudget(scanner, true);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return listBudget(scanner);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"savings\":"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return savingsBudget(scanner);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"There is only edit/set/list/savings command under budget.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command setOrEditBudget(Scanner scanner, boolean isEdit) throws MooMooException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isNewCategory \u003d false;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (isNewCategory) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        categories.add(inputCategory);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    isNewCategory \u003d false;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory \u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isNewCategory \u003d true;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (input.startsWith(\"b/\")) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                double budget \u003d 0;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    budget \u003d Double.parseDouble(input.substring(2));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (budget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please insert a number larger than 0 for the budget\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please insert a number larger than 0 for the budget\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                categories.add(inputCategory);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                budgets.add(budget);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (categories.size() \u003e budgets.size()) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    budgets.add(budget);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory +\u003d \" \" + input;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (categories.size() \u003d\u003d 0 || budgets.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"You have entered the command wrongly. \""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (isEdit) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new EditBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command listBudget(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ListBudgetCommand(false, categories);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory \u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory +\u003d \" \" + input;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please input in this format \\\"c/CATEGORY\\\"\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new ListBudgetCommand(false, categories);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command savingsBudget(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please input in this format \\\"c/CATEGORY s/STARTMONTHYEAR e/ENDMONTHYEAR\\\"\\n\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String startMonth \u003d \"\";"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String endMonth \u003d \"\";"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory +\u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (input.startsWith(\"s/\")) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(startMonth)) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please only set 1 starting period.\\n\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                startMonth \u003d input.substring(2);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (input.startsWith(\"e/\")) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(endMonth)) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please only set 1 ending period.\\n\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                endMonth \u003d input.substring(2);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                "
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory +\u003d \" \" + input;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"Please input in this format \\\"c/CATEGORY \""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \"s/STARTMONTHYEAR e/ENDMONTHYEAR\\\"\\n\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            "
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (\"\".equals(startMonth)) {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate startDate \u003d parseMonth(startMonth);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate endDate \u003d parseMonth(endMonth);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (startDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (!\"\".equals(endMonth) \u0026\u0026 endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please set an end month and year in this format \\\"e/01/2019\\\"\\n\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new SavingsBudgetCommand(false, categories, startDate, endDate);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static LocalDate parseMonth(String inputDate) {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String fullDate \u003d \"01/\" + inputDate;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return LocalDate.parse(fullDate, formatter);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 42,
      "Greatnest": 236,
      "guanyewtan": 75,
      "shannonlee98": 35
    }
  },
  {
    "path": "src/main/java/moomoo/feature/storage/CategoryStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class  CategoryStorage extends Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String filePath \u003d \"data/category.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Initializes storage and the filepath for each file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public CategoryStorage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(\"\", \"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Reads from a text file and loads data into a category list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return category with data read from file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException if unable to read file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static CategoryList loadFromFile() throws MooMooException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            File myNewFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (myNewFile.createNewFile()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return populateDefaultCategories(categoryList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return populateDataCategories(categoryList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Sorry your data could not be loaded, but you may continue using the app.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static CategoryList populateDataCategories(CategoryList categoryList) throws IOException, MooMooException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (String line : input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String categoryName \u003d line.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (categoryList.hasCategory(categoryName)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                deleteFromFile(categoryName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                categoryList.add(new Category(categoryName));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a file if necessary and stores the entry into the file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param entry entry to be stored in file"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException thrown if file is not written to"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void saveToFile(String entry) throws MooMooException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        createFileAndDirectory(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String readString \u003d Files.readString(Paths.get(filePath));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            readString +\u003d (entry + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Files.writeString(Paths.get(filePath), readString);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Category will not be saved.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Removes any line of data in text file with starts with the entry name entered."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param entry string to search for and delete"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException thrown if unable to write to file"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void deleteFromFile(String entry) throws MooMooException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            List\u003cString\u003e data \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            for (String line : data) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                if (line.contentEquals(entry)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    data.remove(line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Files.write(Paths.get(filePath), data);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a populated array of default categories."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryList category list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return populated category list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException throws exception if file cannot be found"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static CategoryList populateDefaultCategories(CategoryList categoryList)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"misc\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"food\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"transportation\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"shopping\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveToFile(\"misc\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveToFile(\"food\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveToFile(\"transportation\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveToFile(\"shopping\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryList;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 112
    }
  },
  {
    "path": "src/main/java/moomoo/feature/storage/ExpenditureStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class ExpenditureStorage extends Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String filePath \u003d \"data/expenditure.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Initializes storage and the filepath for each file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ExpenditureStorage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(\"\", \"\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Reads from a text file and loads data into a category list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException if unable to read file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void loadFromFile(CategoryList categoryList) throws MooMooException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            File myNewFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (!myNewFile.createNewFile()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                populateExpenditures(categoryList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Sorry your data could not be loaded, but you may continue using the app.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static void populateExpenditures(CategoryList categoryList) throws IOException, MooMooException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (String line : input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String[] entry \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (entry.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                loadExpenditure(categoryList, entry, line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                deleteFromFile(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static void loadExpenditure(CategoryList categoryList, String[] entry, String line) throws MooMooException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String category \u003d entry[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String name \u003d entry[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double cost;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            cost \u003d Double.parseDouble(entry[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            date \u003d LocalDate.parse(entry[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Expenditure expenditure \u003d new Expenditure(name, cost, date, category);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (categoryList.hasCategory(category)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                categoryList.get(category).add(expenditure);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                deleteFromFile(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (NumberFormatException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            deleteFromFile(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a file if necessary and stores the entry into the file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param entry entry to be stored in file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException thrown if file is not written to"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void saveToFile(String entry) throws MooMooException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        createFileAndDirectory(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String readString \u003d Files.readString(Paths.get(filePath));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            readString +\u003d (entry + \"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Files.writeString(Paths.get(filePath), readString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Expenditure will not be saved.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Removes any line of data in text file with starts with the entry name entered."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param entry string to search for and delete"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException thrown if unable to write to file"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void deleteFromFile(String entry) throws MooMooException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            List\u003cString\u003e data \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            for (String line : data) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                if (line.startsWith(entry)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    data.remove(line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Files.write(Paths.get(filePath), data);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. But you may continue using the app.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 108
    }
  },
  {
    "path": "src/main/java/moomoo/feature/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.MooMoo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Handles storage and retrieval of the tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String budgetFilePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private String scheduleFilePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes storage and the filepath for each file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budgetFilePath File path to store the budget into."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param scheduleFilePath File path to store all categories"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Storage(String budgetFilePath, String scheduleFilePath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budgetFilePath \u003d budgetFilePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.scheduleFilePath \u003d scheduleFilePath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates the directory and file as given by the file path initialized in the constructor."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public static void createFileAndDirectory(String filePath) throws MooMooException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            File myNewFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            myNewFile.getParentFile().mkdir();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            myNewFile.createNewFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to create file. Your data will not be saved.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in budgetFile not found. New file will be created from an existing file into a created HashMap object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return HashMap object consisting of the categories and corresponding budget read from file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public HashMap\u003cString, Double\u003e loadBudget(ArrayList\u003cCategory\u003e catList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (Files.isRegularFile(Paths.get(this.budgetFilePath))) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                HashMap\u003cString, Double\u003e loadedBudgets \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                List\u003cString\u003e readInput \u003d Files.readAllLines(Paths.get(this.budgetFilePath));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String category \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                double budget;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (int i \u003d 0; i \u003c readInput.size(); ++i) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (i % 2 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!\"\".equals(category)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                budget \u003d Double.parseDouble(readInput.get(i));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                                Ui.setOutput(\"Budget file corrupted, please delete it. Your data will be reset.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                return null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            loadedBudgets.put(category, budget);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (isInCategoryList(catList, readInput.get(i))) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            category \u003d readInput.get(i).toLowerCase();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return loadedBudgets;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.setOutput(\"Budget File not found. New file will be created\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                createFileAndDirectory(this.budgetFilePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException | MooMooException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.setOutput(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Loads scheduled payments from file into an ArrayList object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @return ArrayList object consisting of the scheduled payments read from the file"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public HashMap\u003cString, ArrayList\u003cString\u003e\u003e loadCalendar() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        HashMap\u003cString, ArrayList\u003cString\u003e\u003e scheduleMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            if (Files.isRegularFile(Paths.get(this.scheduleFilePath))) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(this.scheduleFilePath));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                for (String s : input) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    if (s.startsWith(\"d/\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String[] splitInput \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String date \u003d splitInput[0].replace(\"d/\",\"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String task \u003d splitInput[1].replace(\"n/\", \"\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        if (scheduleMap.containsKey(date)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                            ArrayList\u003cString\u003e tasks \u003d scheduleMap.get(date);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                            tasks.add(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                            scheduleMap.replace(date, tasks);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                            ArrayList\u003cString\u003e newTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                            newTasks.add(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                            scheduleMap.put(date, newTasks);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                return scheduleMap;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.setOutput(\"Schedule File not found. New file will be created\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                createFileAndDirectory(this.scheduleFilePath);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException | MooMooException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Ui.setOutput(\"Unable to read file. Please retry again.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Creates a file if necessary and stores each category and its budget into the file."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget object that stores the budget for each category"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException thrown if file cannot be written to."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void saveBudgetToFile(Budget budget) throws MooMooException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        createFileAndDirectory(this.budgetFilePath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String toSave \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Iterator\u003cMap.Entry\u003cString, Double\u003e\u003e budgetIterator \u003d budget.getBudget().entrySet().iterator();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (budgetIterator.hasNext()) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Map.Entry\u003cString, Double\u003e mapElement \u003d budgetIterator.next();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            toSave +\u003d mapElement.getKey() + \"\\n\" + mapElement.getValue() + \"\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.writeString(Paths.get(this.budgetFilePath), toSave);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to write to budget file. Please retry again.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Writes scheduled payments to file."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void saveScheduleToFile(ScheduleList calendar) throws MooMooException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        createFileAndDirectory(this.scheduleFilePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String list \u003d \"Schedule: \\n\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Iterator\u003cMap.Entry\u003cString, ArrayList\u003cString\u003e\u003e\u003e scheduleIterator \u003d calendar.calendar.entrySet().iterator();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        while (scheduleIterator.hasNext()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Map.Entry\u003cString, ArrayList\u003cString\u003e\u003e element \u003d scheduleIterator.next();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (String c : element.getValue()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                list +\u003d \"d/\" + element.getKey() + \" n/\" + c + \"\\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            Files.writeString(Paths.get(this.scheduleFilePath), list);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please try again.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Checks if a category is found in the list of categories."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return true if it exists."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private boolean isInCategoryList(ArrayList\u003cCategory\u003e catList, String value) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (Category cat : catList) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (cat.name().equalsIgnoreCase(value)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Preload data by copying from resources directory in jar file."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when file does not exist in jar file."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void preloadData() throws MooMooException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File myNewFile \u003d new File(\"data\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (!myNewFile.isDirectory()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            myNewFile.mkdir();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            InputStream inStream \u003d null;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            OutputStream outputStream \u003d null;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String jarFileLocation;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String[] outputFiles \u003d {\"budget.txt\", \"category.txt\", \"expenditure.txt\", \"schedule.txt\"};"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (int i \u003d 0; i \u003c 4; ++i) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    String outputFile \u003d outputFiles[i];"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inStream \u003d MooMoo.class.getResourceAsStream(\"/\" + outputFile);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (inStream \u003d\u003d null) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Error creating default files. Please add your own values.\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    int readBytes;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    byte[] buffer \u003d new byte[2048];"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    jarFileLocation \u003d new File(MooMoo.class.getProtectionDomain().getCodeSource()"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            .getLocation().toURI().getPath()).getParentFile().getPath().replace(\u0027\\\\\u0027, \u0027/\u0027);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputStream \u003d new FileOutputStream(jarFileLocation + \"/data/\" + outputFile);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    while ((readBytes \u003d inStream.read(buffer)) \u003e 0) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        outputStream.write(buffer, 0, readBytes);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inStream.close();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputStream.close();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"Error creating default files. Please add your own values.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 1,
      "Greatnest": 148,
      "jinwentay": 50,
      "shannonlee98": 32
    }
  },
  {
    "path": "src/test/java/moomoo/command/BudgetCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "class BudgetCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testSetBudgetCommand() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Shoes\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Food\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Places to go\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Test Value\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(50.0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(100.0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(-150.0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(200.0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                \".__________________________________.\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"| ___ _   _ ___   ___ ___ _____    |\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ ) | | |   \\\\ / __| _ |_   _|   |\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ \\\\ |_| | |) | (_ | _|  | |     |\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"||___/\\\\___/|___/ \\\\___|___| |_|     |\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|                                  |\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Category : shoes                  |\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|$50.00                            |\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".----------------------------------.\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \".__________________________________.\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"| ___ _   _ ___   ___ ___ _____    |\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ ) | | |   \\\\ / __| _ |_   _|   |\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ \\\\ |_| | |) | (_ | _|  | |     |\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"||___/\\\\___/|___/ \\\\___|___| |_|     |\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|                                  |\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Category : food                   |\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|$100.00                           |\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".----------------------------------.\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Please set your budget for places to go to a value more than 0\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"test value category does not exist. Please add it first.\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testEditBudgetCommand() throws MooMooException, IOException  {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"shoes\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"sweets\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Invalid Value\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(123.45);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(1123.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(217.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(122.23);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(0, 300.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(1, -675.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(2, 675.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        EditBudgetCommand editBudget \u003d new EditBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        editBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\".___________________________________________________________________.\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|You have changed the budget for shoes from $123.45 to $300.00      |\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Please set your budget for window to a value more than 0.          |\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|You have changed the budget for sweets from $217.00 to $675.00     |\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|invalid value category does not exist. Please add it first.        |\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \".-------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testListBudgetCommand() throws MooMooException, IOException  {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"shoes\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"food\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"places to go\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Test Value\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"sweets\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(183.0);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(128.0);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(527.0);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(103.34);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(105.0);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e listCategories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"shoes\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"food\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"places to go\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"Test Value\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"sweets\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ListBudgetCommand listBudget \u003d new ListBudgetCommand(false, listCategories);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        listBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"._____________________________________________________________.\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Budget for shoes is $183.00                                  |\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Budget for food is $128.00                                   |\\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Budget for places to go is $527.00                           |\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|test value category does not exist. Please add it first.     |\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Budget for sweets is $105.00                                 |\\n\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \".-------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testSavingsBudgetCommand() throws MooMooException, IOException  {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"slippers\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Dogs\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(875.0);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(938.0);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(75.89);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(100.58);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c newCatList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            newCatList.getCategoryList().get(i).add(null);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate startDate \u003d LocalDate.of(2019, 9, 15);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate endDate \u003d LocalDate.of(2019, 11, 15);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SavingsBudgetCommand savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, endDate);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\"._____________________________________________________________________________________\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"_____________.\\n\""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|slippers category does not exist. Please create it first.                                         \""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|\\n\""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your savings for window from SEPTEMBER 2019 to NOVEMBER 2019 is: $2549.00                         \""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|\\n\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|You have overspent for your budget for laptop from SEPTEMBER 2019 to NOVEMBER 2019 by: $37.33     \""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|\\n\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|dogs category does not exist. Please create it first.                                             \""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|\\n\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your total savings: $2511.67                                                                      \""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|\\n\""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \".--------------------------------------------------------------------------------------------------.\""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, null);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\".___________________________________________________________________________.\\n\""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|slippers category does not exist. Please create it first.                  |\\n\""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your savings for window for SEPTEMBER 2019 is: $788.00                     |\\n\""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|You have overspent your budget for laptop for SEPTEMBER 2019 by $74.11     |\\n\""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|dogs category does not exist. Please create it first.                      |\\n\""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your total savings: $713.89                                                |\\n\""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \".---------------------------------------------------------------------------.\\n\","
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.getTestOutput());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.clear();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(0, categories.size());"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, null);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\".________________________________________________________________________________.\\n\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|The budget for shoes does not exist. Please set it using budget set.            |\\n\""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|The budget for food does not exist. Please set it using budget set.             |\\n\""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your savings for window for SEPTEMBER 2019 is: $788.00                          |\\n\""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|The budget for places to go does not exist. Please set it using budget set.     |\\n\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|The budget for sweets does not exist. Please set it using budget set.           |\\n\""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|You have overspent your budget for laptop for SEPTEMBER 2019 by $74.11          |\\n\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your total savings: $713.89                                                     |\\n\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \".--------------------------------------------------------------------------------.\\n\","
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.getTestOutput());"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.clear();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(0, categories.size());"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(1, categories.size());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        startDate \u003d LocalDate.of(2017, 9, 15);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        endDate \u003d LocalDate.of(2019, 2, 15);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, endDate);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\".______________________________________________________________________________.\\n\""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your savings for laptop from SEPTEMBER 2017 to FEBRUARY 2019 is: $1066.02     |\\n\""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Your total savings: $1066.02                                                  |\\n\""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \".------------------------------------------------------------------------------.\\n\","
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Ui.getTestOutput());"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 15,
      "Greatnest": 207,
      "jinwentay": 32,
      "shannonlee98": 59
    }
  },
  {
    "path": "src/test/java/moomoo/command/CategoryCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.AddCategoryCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.AddExpenditureCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.DeleteCategoryCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.ListCategoryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.SortCategoryCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.CategoryStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "class CategoryCommandTest {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testAddCategoryCommand() throws MooMooException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ScheduleListStub calendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Budget budget \u003d new Budget();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Command command \u003d new AddCategoryCommand(\"food\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\" __________________________________________________\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"/ Mooo.                                            \\\\\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"\\\\ Added category named : food                      /\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" --------------------------------------------------\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new DeleteCategoryCommand(\"food\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testDeleteCategoryCommand() throws MooMooException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ScheduleListStub calendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Budget budget \u003d new Budget();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Command command \u003d new AddCategoryCommand(\"food\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new AddCategoryCommand(\"new stuff\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new AddCategoryCommand(\"games\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new DeleteCategoryCommand(2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\" __________________________________________________\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"/ Mooo.                                            \\\\\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"\\\\ Re-MOOO-ved category named : games               /\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" --------------------------------------------------\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new DeleteCategoryCommand(\"food\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\" __________________________________________________\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"/ Mooo.                                            \\\\\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"\\\\ Re-MOOO-ved category named : food                /\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" --------------------------------------------------\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new DeleteCategoryCommand(\"new stuff\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\" __________________________________________________\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"/ Mooo.                                            \\\\\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"\\\\ Re-MOOO-ved category named : new stuff           /\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" --------------------------------------------------\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testAddExpenditureCommand() throws MooMooException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ScheduleListStub calendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Budget budget \u003d new Budget();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"food\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Command command \u003d new AddExpenditureCommand(\"banana\", 8.50,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                LocalDate.now(), \"food\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\"  __________________________________________________\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" / Mooo.                                            \\\\\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|  Expenditure named : banana                        |\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" \\\\ Added to category : food                         /\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"  --------------------------------------------------\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new DeleteExpenditureCommand(0, \"food\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testDeleteExpenditureCommand() throws MooMooException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ScheduleListStub calendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Budget budget \u003d new Budget();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Storage storage \u003d new ExpenditureStorage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new AddCategoryCommand(\"stuff\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new AddExpenditureCommand(\"bike\", 99.9, LocalDate.now(),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                \"stuff\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new DeleteExpenditureCommand(0, \"stuff\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\"  __________________________________________________\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" / Mooo.                                            \\\\\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|  Expenditure named : bike                          |\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \" \\\\ Deleted from category : stuff                    /\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"  --------------------------------------------------\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new DeleteCategoryCommand(\"stuff\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testListCommand() throws MooMooException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"food\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"shoes\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"places to go\"));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(new Category(\"test value\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ScheduleListStub calendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Budget budget \u003d new Budget();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ListCategoryCommand command \u003d new ListCategoryCommand();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\".__________________________________________________.\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|Here are your current categories.                 |\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|1. food [ $0.0 ]                                  |\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|2. shoes [ $0.0 ]                                 |\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|3. places to go [ $0.0 ]                          |\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"|4. test value [ $0.0 ]                            |\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \".--------------------------------------------------.\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testSortCommand() throws MooMooException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category category \u003d new Category(\"food\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2019-11-10\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        category.add(new Expenditure(\"grape\", 62, date, \"food\"));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        category.add(new Expenditure(\"banana\", 40, date, \"food\"));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        category.add(new Expenditure(\"fig\", 45, date, \"food\"));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        category.add(new Expenditure(\"durian\", 20, date, \"food\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        category.add(new Expenditure(\"clementine\", 80, date, \"food\"));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        category.add(new Expenditure(\"apple\", 50, date, \"food\"));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(category);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ScheduleListStub calendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Budget budget \u003d new Budget();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        SortCategoryCommand command \u003d new SortCategoryCommand(\"name\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\"food | apple | 50.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | banana | 40.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | clementine | 80.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | durian | 20.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | fig | 45.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | grape | 62.0 | 2019-11-10\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command \u003d new SortCategoryCommand(\"cost\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        command.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        assertEquals(\"food | clementine | 80.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | grape | 62.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | apple | 50.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | fig | 45.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | banana | 40.0 | 2019-11-10\\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"food | durian | 20.0 | 2019-11-10\\n\", Ui.getTestOutput());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 188
    }
  },
  {
    "path": "src/test/java/moomoo/command/GraphCategoryCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.AddCategoryCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.AddExpenditureCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.DeleteCategoryCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.ListCategoryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.SortCategoryCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.storage.CategoryStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.UiStub;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class GraphCategoryCommandTest {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String fullBlock \u003d \"\\u2588\"; //\"H\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String halfBlock \u003d \"\\u258c\"; //\"l\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String topBorder \u003d \"\\u252c\";//\"v\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String bottomBorder \u003d \"\\u2534\";//\"^\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisTop \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisBottom \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    void testGraphCategoryCommandInvalid() throws MooMooException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Command testGraph \u003d new GraphCategoryCommand(\"test\", 1, 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Throwable thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            testGraph.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        assertEquals(\"OH NO! No such category exists!\", thrown.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    void testGraphCategoryCommand() throws MooMooException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"25/10/2019\", formatter);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category shoes \u003d new Category(\"shoes\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        shoes.add(new Expenditure(\"Value 6\", 50.00,  date, \"shoes\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category food \u003d new Category(\"food\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        food.add(new Expenditure(\"Value 6\", 50.00,  date, \"food\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(shoes);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(food);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeBlock \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 100; i +\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeBlock +\u003d fullBlock;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeTop \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeBottom \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 101; i +\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeTop +\u003d topBorder;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Command testGraph \u003d new GraphCategoryCommand(\"food\", 10, 2019);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        testGraph.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (!getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            assertEquals(\"        \" + ANSI_YELLOW + completeTop"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_RESET + \"\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_CYAN + \"Value 6 \" + completeBlock"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"  \" + \"100.0%\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"        \" + ANSI_YELLOW + completeBottom"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_RESET + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            assertEquals(\"        \" + completeTop"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"Value 6 \" + completeBlock"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"  \" + \"100.0%\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"        \" + completeBottom"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    void testGraphCategoryCommandEmpty() throws MooMooException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"25/10/2019\", formatter);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category shoes \u003d new Category(\"shoes\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category food \u003d new Category(\"food\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(shoes);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(food);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeBlock \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 100; i +\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeBlock +\u003d fullBlock;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeTop \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeBottom \u003d \"\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 101; i +\u003d 1) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeTop +\u003d topBorder;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Command testGraph \u003d new GraphCategoryCommand(\"food\", 10, 2019);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Throwable thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            testGraph.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        assertEquals(\"No expenditure data found :(\", thrown.getMessage());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 150
    }
  },
  {
    "path": "src/test/java/moomoo/command/GraphTotalCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.AddCategoryCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.AddExpenditureCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.DeleteCategoryCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.DeleteExpenditureCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.ListCategoryCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.category.SortCategoryCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.storage.CategoryStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.storage.ExpenditureStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.stubs.UiStub;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class GraphTotalCommandTest {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String fullBlock \u003d \"\\u2588\"; //\"H\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String halfBlock \u003d \"\\u258c\"; //\"l\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String topBorder \u003d \"\\u252c\";//\"v\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String bottomBorder \u003d \"\\u2534\";//\"^\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisTop \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisBottom \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    void testGraphTotalCommandEmpty() throws MooMooException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Command testGraph \u003d new GraphTotalCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Throwable thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            testGraph.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        assertEquals(\"OOPS!!! MooMoo cannot find any category data :(\", thrown.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    void testGraphTotalCommand() throws MooMooException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"25/10/2019\", formatter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category shoes \u003d new Category(\"shoes\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(shoes);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category food \u003d new Category(\"food\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(food);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category transportation \u003d new Category(\"transportation\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(transportation);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Command testGraph \u003d new GraphTotalCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        testGraph.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (!getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            assertEquals(\"               \" + ANSI_YELLOW + \"\" + ANSI_RESET + \"\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_CYAN + \"shoes\" + \"            \" + \"0.0%\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"food\" + \"             \" + \"0.0%\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_CYAN + \"transportation\" + \"   \" + \"0.0%\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"               \" + ANSI_YELLOW + \"\" + ANSI_RESET + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            assertEquals(\"               \" + \"\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"shoes\" + \"            \" + \"0.0%\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"food\" + \"             \" + \"0.0%\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"transportation\" + \"   \" + \"0.0%\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"               \" + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    void testGraphTotalCommandValues() throws MooMooException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"25/11/2019\", formatter);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category shoes \u003d new Category(\"shoes\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        shoes.add(new Expenditure(\"Value 6\", 50.00,  date, \"shoes\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category food \u003d new Category(\"food\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        food.add(new Expenditure(\"Value 6\", 50.00,  date, \"food\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(shoes);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        newCatList.add(food);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeBlock \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 50; i +\u003d 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeBlock +\u003d fullBlock;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeTop \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String completeBottom \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 50; i +\u003d 1) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeTop +\u003d topBorder;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            completeBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Command testGraph \u003d new GraphTotalCommand();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        testGraph.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (!getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            assertEquals(\"      \" + ANSI_YELLOW + completeTop"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_RESET + \"\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_CYAN + \"shoes \" + completeBlock"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"  \" + \"50.0%\\n\" + ANSI_RESET"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"food  \" + completeBlock"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"  \" + \"50.0%\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"      \" + ANSI_YELLOW + completeBottom"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + ANSI_RESET + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            assertEquals(\"      \" + completeTop"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"shoes \" + completeBlock"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"  \" + \"50.0%\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"food  \" + completeBlock"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"  \" + \"50.0%\\n\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"      \" + completeBottom"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 151
    }
  },
  {
    "path": "src/test/java/moomoo/command/MainDisplayCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "class MainDisplayCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    void testMainDisplayMiscCommand() throws MooMooException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        MainDisplayCommand newMainDisplay \u003d new MainDisplayCommand(0, 0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newMainDisplay.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int t \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            t \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|Month: All         |       \u003c\" + ANSI_BLUE + \"Categories\" + ANSI_RESET + \"\u003e       |\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|Year: All          |--------------------------.\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |misc                      |\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |--------------------------.\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |              |           |\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + ANSI_GREEN + \"Total\" + ANSI_RESET + \":             |                          |\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + ANSI_CYAN + \"Budget\" + ANSI_RESET + \":            |                          |\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + ANSI_YELLOW + \"Savings\" + ANSI_RESET + \":           |                          |\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|Month: All         |       \u003c\" + \"Categories\" + \"\u003e       |\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|Year: All          |--------------------------.\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |misc                      |\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |--------------------------.\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |              |           |\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"Total\" + \":             |                          |\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"Budget\" + \":            |                          |\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"Savings\" + \":           |                          |\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.--------------------------.\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    void testMainDisplayCommand() throws MooMooException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"25/10/2019\", formatter);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Category shoes \u003d new Category(\"shoes\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        shoes.add(new Expenditure(\"Value 6\", 50.00, date, \"shoes\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Category food \u003d new Category(\"food\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        food.add(new Expenditure(\"Value 6\", 50.00, date, \"food\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Category window \u003d new Category(\"window\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        window.add(new Expenditure(\"Value 6\", 50.00, date, \"window\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Category places \u003d new Category(\"places to go\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        places.add(new Expenditure(\"Value 6\", 50.00, date, \"places\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Category sweets \u003d new Category(\"sweets\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        sweets.add(new Expenditure(\"Value 6\", 50.00, date, \"sweets\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Category laptop \u003d new Category(\"laptop\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        laptop.add(new Expenditure(\"Value 6\", 50.00, date, \"laptop\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newCatList.add(shoes);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newCatList.add(food);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newCatList.add(window);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newCatList.add(places);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newCatList.add(sweets);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newCatList.add(laptop);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newBudget.addNewBudget(\"shoes\", 50.00);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newBudget.addNewBudget(\"food\", 60.00);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newBudget.addNewBudget(\"window\", 70.00);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newBudget.addNewBudget(\"places to go\", 80.00);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newBudget.addNewBudget(\"sweets\", 90.00);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newBudget.addNewBudget(\"laptop\", 100.00);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        MainDisplayCommand newMainDisplay \u003d new MainDisplayCommand(10, 2019);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        newMainDisplay.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        DetectOsCommand getOS \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int t \u003d 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (getOS.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            t \u003d 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (t \u003d\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    \".-------------------.------------------------------------------------------\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"-----------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"------------------------------.\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|Month: October     |                                                      \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"                     \u003c\" + \"Categories\" + \"\u003e          \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"                                   \""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"                             |\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|Year: 2019         |--------------------------.--------------------------.-\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"-------------------------.--------------------------.-------------------------\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"-.--------------------------.\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |\" + \"shoes\" + \"                     \""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"food\" + \"                      \""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"window\" + \"                    \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"places to go\" + \"              \""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"sweets\" + \"                    \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"laptop\" + \"                    |\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |--------------------------------------------------------\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"------------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"---------------------------.\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|                   |Value 6       \""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00     |\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.-----------------------------------------------------\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"-----------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"-------------------------------.\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"Total\" + \":             \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    \""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    \""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    \""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    \""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    |\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.----------------------------------------------------\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"---------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"----------------------------------.\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"Budget\" + \":            \""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    \""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$60.00                    \""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$70.00                    \""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$80.00                    \""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$90.00                    \""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$100.00                   |\\n\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.----------------------------------------------------\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"---------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"----------------------------------.\\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|\" + \"Savings\" + \":           \""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$0.00                     \""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$10.00                    \""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$20.00                    \""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$30.00                    \""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$40.00                    \""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"|$50.00                    |\\n\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \".-------------------.----------------------------------------------------\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"----------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                            + \"---------------------------------.\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else if (t \u003d\u003d 0) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            assertEquals("
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                \".-------------------.------------------------------------------------------\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"-----------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"------------------------------.\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|Month: October     |                                                      \""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"                     \u003c\" + ANSI_BLUE + \"Categories\" + ANSI_RESET + \"\u003e          \""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"                                   \""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"                             |\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|Year: 2019         |--------------------------.--------------------------.-\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"-------------------------.--------------------------.-------------------------\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"-.--------------------------.\\n\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|                   |\" + ANSI_PURPLE + \"shoes\" + ANSI_RESET + \"                     \""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_PURPLE + \"food\" + ANSI_RESET + \"                      \""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_PURPLE + \"window\" + ANSI_RESET + \"                    \""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_PURPLE + \"places to go\" + ANSI_RESET + \"              \""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_PURPLE + \"sweets\" + ANSI_RESET + \"                    \""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_PURPLE + \"laptop\" + ANSI_RESET + \"                    |\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|                   |--------------------------------------------------------\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"------------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"---------------------------.\\n\""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|                   |Value 6       \""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00     |Value 6       \""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00     |\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \".-------------------.-----------------------------------------------------\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"-----------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"-------------------------------.\\n\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_GREEN + \"Total\" + ANSI_RESET + \":             \""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    \""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    \""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    \""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    \""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    \""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    |\\n\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \".-------------------.----------------------------------------------------\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"---------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"----------------------------------.\\n\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_CYAN + \"Budget\" + ANSI_RESET + \":            \""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    \""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$60.00                    \""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$70.00                    \""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$80.00                    \""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$90.00                    \""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$100.00                   |\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \".-------------------.----------------------------------------------------\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"---------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"----------------------------------.\\n\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|\" + ANSI_YELLOW + \"Savings\" + ANSI_RESET + \":           \""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$0.00                     \""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$10.00                    \""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$20.00                    \""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$30.00                    \""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$40.00                    \""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"|$50.00                    |\\n\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \".-------------------.----------------------------------------------------\""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"----------------------------------------------------------------------------\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        + \"---------------------------------.\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 258
    }
  },
  {
    "path": "src/test/java/moomoo/command/NotificationCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.stubs.AddExpenditureCommandStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.stubs.BudgetStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "class NotificationCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    void testNotification() throws MooMooException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        HashMap\u003cString, Double\u003e categoryBudgets \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        categoryBudgets.put(\"food\", 100.0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        BudgetStub budget \u003d new BudgetStub(categoryBudgets);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        StorageStub storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        CategoryList categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        categoryList.add(new Category(\"food\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String colour \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String reset \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        DetectOsCommand getOs \u003d new DetectOsCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!getOs.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            colour \u003d ANSI_GREEN;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            reset \u003d ANSI_RESET;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         * Test alert when budget not exceeded."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        AddExpenditureCommandStub addExpenditure \u003d new AddExpenditureCommandStub(\"mala\", 10.0,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                LocalDate.now(), \"food\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ScheduleListStub calendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        addExpenditure.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals(colour + \"                     .-------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "               + \"  ,/         \\\\,      |  __  __  ___   ___                              |\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "               + \" ((__,-\\\"\\\"\\\"-,__))     | |  \\\\/  |/ _ \\\\ / _ \\\\                             |\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "               + \" .-\u0027(       )`-,     | | |\\\\/| | (_) | (_) |                            |\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "               + \" `~~` d\\\\ /b `~~`     | |_|  |_|\\\\___/ \\\\___/                             |\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "               + \"     |     |         |                                                 |\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "               + \"     (6___6)         | Budget remaining : 90.0                         |\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "               + \"      `---`          .-------------------------------------------------.\\n\" + reset,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Ui.getOutput());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         * Test alert when expenditure is reaching the budget limit."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!getOs.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            colour \u003d ANSI_YELLOW;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            reset \u003d ANSI_RESET;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        AddExpenditureCommandStub addExpenditure2 \u003d new AddExpenditureCommandStub(\"pasta\", 85.0,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                LocalDate.now(), \"food\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        addExpenditure2.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals(colour + \"                     .-------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"  ,/         \\\\,      |  __  __  ___   ___                              |\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" ((__,-\\\"\\\"\\\"-,__))     | |  \\\\/  |/ _ \\\\ / _ \\\\                             |\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" .-\u0027(       )`-,     | | |\\\\/| | (_) | (_) |                            |\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" `~~` d\\\\ /b `~~`     | |_|  |_|\\\\___/ \\\\___/                             |\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"     |     |         | You are reaching your budget limit!             |\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"     (6___6)         | Budget remaining : 5.0                          |\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"      `---`          .-------------------------------------------------.\\n\" + reset,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Ui.getOutput());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         * Test alert when expenditure has reached the budget limit."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!getOs.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            colour \u003d ANSI_RED;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            reset \u003d ANSI_RESET;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        AddExpenditureCommandStub addExpenditureReached \u003d new AddExpenditureCommandStub(\"fries\", 5.0,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                LocalDate.now(), \"food\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        addExpenditureReached.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals(colour + \"                     .-------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"  ,/         \\\\,      |  __  __  ___   ___                              |\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" ((__,-\\\"\\\"\\\"-,__))     | |  \\\\/  |/ _ \\\\ / _ \\\\                             |\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" .-\u0027(       )`-,     | | |\\\\/| | (_) | (_) |                            |\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" `~~` d\\\\ /b `~~`     | |_|  |_|\\\\___/ \\\\___/                             |\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"     |     |         | You have reached your budget limit!             |\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"     (6___6)         | Budget remaining : 0.0                          |\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"      `---`          .-------------------------------------------------.\\n\" + reset,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Ui.getOutput());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         * Test alert when budget has been exceeded."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!getOs.osName.contains(\"win\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            colour \u003d ANSI_RED;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            reset \u003d ANSI_RESET;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        AddExpenditureCommandStub addExpenditureExceed \u003d new AddExpenditureCommandStub(\"waffles\", 15.0,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                LocalDate.now(), \"food\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        addExpenditureExceed.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals(colour + \"                     .-------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"  ,/         \\\\,      |  __  __  ___   ___                              |\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" ((__,-\\\"\\\"\\\"-,__))     | |  \\\\/  |/ _ \\\\ / _ \\\\                             |\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" .-\u0027(       )`-,     | | |\\\\/| | (_) | (_) |                            |\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \" `~~` d\\\\ /b `~~`     | |_|  |_|\\\\___/ \\\\___/                             |\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"     |     |         | You have exceeded your budget for food!         |\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"     (6___6)         | Budget remaining : -15.0                        |\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"      `---`          .-------------------------------------------------.\\n\" + reset,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                Ui.getOutput());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 113
    }
  },
  {
    "path": "src/test/java/moomoo/command/ScheduleCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "class ScheduleCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    void testScheduleCommand() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String input \u003d \"schedule d/02/11/19 a/100 n/pay school fees\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ScheduleCommand scheduled \u003d new ScheduleCommand(false, input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ScheduleList newCalendar \u003d new ScheduleList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        CategoryList newCat \u003d new CategoryList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        scheduled.execute(newCalendar, newBudget, newCat, newStorage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String cow \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                \"._______________________________________.\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"| ___  ___ _  _ ___ ___  _   _ _    ___ |\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|/ __|/ __| || | __|   \\\\| | | | |  | __||\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|\\\\__ \\\\ (__| __ | _|| |) | |_| | |__| _| |\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"||___/\\\\___|_||_|___|___/ \\\\___/|____|___||\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|                                       |\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Date : 02/11/19                        |\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Task : pay school fees                 |\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Amount : 100                           |\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".---------------------------------------.\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||     ||\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals(cow, Ui.getOutput());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    void testScheduleException() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ScheduleList newCalendar \u003d new ScheduleList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        CategoryList newCat \u003d new CategoryList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String input \u003d \"schedule d/31/11/19 a/100 n/electricity bills\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ScheduleCommand newSchedule \u003d new ScheduleCommand(false, input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Throwable thrown;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            newSchedule.execute(newCalendar, newBudget, newCat, newStorage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals(\"MOOO!!! Invalid date input!\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"Check if your month is within 01-12.\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"Check if your day input is valid for that month.\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                + \"Check if your year is a leap year if your day is Feb 29.\", thrown.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        input \u003d \"schedule d/30/11/19 a/asdf n/electricity bills\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ScheduleCommand testAmountSchedule \u003d new ScheduleCommand(false, input);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            testAmountSchedule.execute(newCalendar, newBudget, newCat, newStorage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        });"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals(\"MOOO!!! Only numbers accepted for amount.\", thrown.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 88
    }
  },
  {
    "path": "src/test/java/moomoo/feature/ParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParseSavingsBudgetCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"slippers\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Dogs\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(875.0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(938.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(75.89);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(100.58);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c newCatList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            newCatList.getCategoryList().get(i).add(null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Throwable thrown;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/01/2019 e/14/2019\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Please set an end month and year in this format \\\"e/01/2019\\\"\\n\", thrown.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/13/2019 e/14/2019\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\", thrown.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/invalid input\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Please input in this format \\\"c/CATEGORY s/STARTMONTHYEAR e/ENDMONTHYEAR\\\"\\n\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                thrown.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/invalid\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\", thrown.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParseSetBudgetCommand() throws MooMooException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Command c \u003d newParser.parse(\"budget set c/food c/laptop b/123.45 c/places to go b/150\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                \".__________________________________.\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"| ___ _   _ ___   ___ ___ _____    |\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ ) | | |   \\\\ / __| _ |_   _|   |\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ \\\\ |_| | |) | (_ | _|  | |     |\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"||___/\\\\___/|___/ \\\\___|___| |_|     |\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|                                  |\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Category : food                   |\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|$123.45                           |\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".----------------------------------.\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".__________________________________.\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"| ___ _   _ ___   ___ ___ _____    |\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ ) | | |   \\\\ / __| _ |_   _|   |\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ \\\\ |_| | |) | (_ | _|  | |     |\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"||___/\\\\___/|___/ \\\\___|___| |_|     |\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|                                  |\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Category : laptop                 |\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|$123.45                           |\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".----------------------------------.\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".__________________________________.\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"| ___ _   _ ___   ___ ___ _____    |\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ ) | | |   \\\\ / __| _ |_   _|   |\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|| _ \\\\ |_| | |) | (_ | _|  | |     |\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"||___/\\\\___/|___/ \\\\___|___| |_|     |\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|                                  |\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|Category : places to go           |\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"|$150.00                           |\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \".----------------------------------.\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        + \"                ||     ||\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Throwable thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Command thrownC \u003d newParser.parse(\"budget set b/100 c/places to go b/150\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            thrownC.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\", thrown.getMessage());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParseListBudgetCommand() throws MooMooException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Command c \u003d newParser.parse(\"budget set c/food b/100 c/laptop b/125 c/places to go b/123\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c \u003d newParser.parse(\"budget list\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\".__________________________________________________.\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for shoes has not been set                 |\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for food is $100.00                        |\\n\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for window has not been set                |\\n\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for places to go is $123.00                |\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for sweets has not been set                |\\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for laptop is $125.00                      |\\n\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \".--------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||     ||\\n\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c \u003d newParser.parse(\"budget list c/food c/hello c/shoes\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\".________________________________________________________.\\n\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for food is $100.00                              |\\n\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|hello category does not exist. Please add it first.     |\\n\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|Budget for shoes has not been set.                      |\\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \".--------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c \u003d newParser.parse(\"budget list c/food s/food\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\".______________________________________________________________.\\n\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|food s/food category does not exist. Please add it first.     |\\n\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \".--------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParseEditBudgetCommand() throws MooMooException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Command c \u003d newParser.parse(\"budget set c/food b/100 c/laptop b/125 c/places to go b/123\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        c \u003d newParser.parse(\"budget edit c/food c/laptop b/100 c/places to go b/150\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"._________________________________________________________________________.\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|The budget for food is the same.                                         |\\n\""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|You have changed the budget for laptop from $125.00 to $100.00           |\\n\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|You have changed the budget for places to go from $123.00 to $150.00     |\\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \".-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"        \\\\   ^__^\\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         \\\\  (oo)\\\\_______\\n\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"            (__)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||----w |\\n\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"                ||     ||\\n\""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"\\n\", Ui.getOutput());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Throwable thrown \u003d assertThrows(MooMooException.class, () -\u003e {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Command thrownC \u003d newParser.parse(\"budget edit b/100 c/places to go b/150\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            thrownC.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\", thrown.getMessage());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 168,
      "jinwentay": 42,
      "shannonlee98": 18
    }
  },
  {
    "path": "src/test/java/moomoo/feature/StorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.feature;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.EditBudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testBudgetFileLoad() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        File categoryFile \u003d File.createTempFile(\"category\", \".txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryFile.deleteOnExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"sweets\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(60.0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(153.34);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(13840.45);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Storage newStorage \u003d new Storage(budgetFile.getPath(), scheduleFile.getPath());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        HashMap\u003cString, Double\u003e newHashMap \u003d newStorage.loadBudget(newCatList.getCategoryList());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(60.0, newHashMap.get(\"window\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(153.34, newHashMap.get(\"sweets\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(13840.45, newHashMap.get(\"laptop\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(0, 500.23);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(2, 123.45);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        EditBudgetCommand editBudget \u003d new EditBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        editBudget.execute(newCalendar, newBudget, newCatList, newStorage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        newHashMap \u003d newStorage.loadBudget(newCatList.getCategoryList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(500.23, newHashMap.get(\"window\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(153.34, newHashMap.get(\"sweets\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(123.45, newHashMap.get(\"laptop\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        FileWriter filewriter \u003d new FileWriter(budgetFile);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        filewriter.write(\"window\\nhello\\n1234\\nhello\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        filewriter.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newHashMap \u003d newStorage.loadBudget(newCatList.getCategoryList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Budget file corrupted, please delete it. Your data will be reset.\", Ui.getOutput());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 3,
      "guanyewtan": 1,
      "Greatnest": 63,
      "jinwentay": 2,
      "shannonlee98": 10
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/AddExpenditureCommandStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.command.NotificationCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.command.category.AddExpenditureCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class AddExpenditureCommandStub extends AddExpenditureCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private String catName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private String expName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Command that takes in the amount of money spent and the expenditure name and date under which category from the"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Parser as strings to be converted."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param expenditureName Name of the expenditure spent on. (e.g. Chicken Rice)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param amount          Amount spend on the expenditure."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param date            Date of the spending."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param categoryName    Category that the expenditure is being spent on. (e.g. Food)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public AddExpenditureCommandStub(String expenditureName, double amount, LocalDate date, String categoryName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(expenditureName, amount, date, categoryName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.catName \u003d categoryName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.expName \u003d expenditureName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Category cat \u003d categoryList.get(catName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Expenditure newExpenditure \u003d new Expenditure(expName, amount, date, catName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        cat.add(newExpenditure);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        NotificationCommand alert \u003d new NotificationCommand(catName, cat.getTotal());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        alert.execute(calendar, budget, categoryList, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String alertMessage \u003d alert.getMesage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        Ui.setOutput(alertMessage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 50
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/BudgetStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class BudgetStub extends Budget {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private HashMap\u003cString, Double\u003e categoryBudgets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public BudgetStub(HashMap\u003cString, Double\u003e newBudget) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.categoryBudgets \u003d newBudget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Returns budget from corresponding category."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param category Category to get budget from."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @return The budget of the given category."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public double getBudgetFromCategory(String category) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (this.categoryBudgets.containsKey(category)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            return this.categoryBudgets.get(category);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 28
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/CategoryListStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryListStub extends CategoryList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cCategory\u003e newArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryListStub() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList \u003d  new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void add(Category newCategory) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"shoes\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"food\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"window\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"places to go\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"sweets\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"laptop\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cCategory\u003e getCategoryList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return newArrayList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Category get(int i) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return newArrayList.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category get(String value) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (Category iterCategory : newArrayList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (iterCategory.name().equalsIgnoreCase(value)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return iterCategory;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 40,
      "shannonlee98": 5
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/CategoryStorageStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.CategoryStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class CategoryStorageStub extends CategoryStorage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 7
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/CategoryStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryStub extends Category {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cExpenditureStub\u003e category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryStub() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a category."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param name name of category"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryStub(String name) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.category \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String name() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month, int year) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalCost \u003d 0.00;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c category.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ExpenditureStub currExpenditure \u003d category.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (currExpenditure.getDate().getMonthValue() \u003d\u003d month"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    \u0026\u0026 currExpenditure.getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                totalCost +\u003d currExpenditure.getCost();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return totalCost;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void add(Expenditure newExpenditure) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 1\",100, LocalDate.of(2017, Month.DECEMBER,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                20), name));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 2\", 100, LocalDate.of(2018, Month.DECEMBER,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                20), name));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 3\", 100, LocalDate.of(2019, Month.JANUARY,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                20), name));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 4\", 200, LocalDate.of(2019, Month.AUGUST,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                20), name));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 5\", 150, LocalDate.of(2019, Month.SEPTEMBER,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                20), name));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 6\", 50, LocalDate.of(2019, Month.OCTOBER,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                25), name));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 7\", 65, LocalDate.of(2019, Month.NOVEMBER,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                21), name));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 3,
      "Greatnest": 35,
      "shannonlee98": 25
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/ExpenditureStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Expenditure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ExpenditureStub extends Expenditure {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private double cost;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the expenditure stub with name,cost and date time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param name Given input name of expenditure."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param cost Given cost of expenditure."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param date Date and time of expenditure."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ExpenditureStub(String name, double cost, LocalDate date, String category) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(name, cost, date, category);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //@Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getCost() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return cost;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 7,
      "Greatnest": 28,
      "shannonlee98": 3
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/ScheduleListStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class ScheduleListStub extends ScheduleList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    public HashMap\u003cString, ArrayList\u003cString\u003e\u003e newCalendar;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    public ScheduleListStub() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        newCalendar \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    public void addToCalendar(String date, String task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        ArrayList\u003cString\u003e task1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        task1.add(\"school fees 50 dollars\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        task1.add(\"electricity bills 10.5 dollars\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        ArrayList\u003cString\u003e task2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        task2.add(\"installment plan 365 dollars\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        ArrayList\u003cString\u003e task3 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        task3.add(\"spotify plan 12.34 dollars\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        task3.add(\"water bills 1234 dollars\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        ArrayList\u003cString\u003e task4 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        task4.add(\"school fees 50 dollars\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        task4.add(\"electricity bills 10.5 dollars\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        newCalendar.put(\"02/11/2019\", task1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        newCalendar.put(\"10/11/2019\", task2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        newCalendar.put(\"11/11/2019\", task3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        newCalendar.put(\"31/12/2019\", task4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    public String showSchedule(String date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        String output \u003d"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                \".__________________________.\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                + \"|Outstanding Payment Today |\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                + \"|--------------------------|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        if (newCalendar.containsKey(date)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //            for (String n : newCalendar.get(date)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                String[] amount \u003d n.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                int index \u003d amount.length - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                String blanks \u003d \" \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                n \u003d n.replaceAll(\"[0-9]\",\"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                int blank \u003d 19 - n.length();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                for (int i \u003d 1; i \u003c\u003d blank; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                    blanks +\u003d \" \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                String blank2 \u003d \" \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                blank \u003d 4 - amount[index].length();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                for (int i \u003d 1; i \u003c\u003d blank; i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                    blank2 +\u003d \" \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //                output +\u003d \"|\" + n + blanks + \"|\" + amount[index] + blank2 + \"|\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        output +\u003d \".--------------------------.\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //        return output;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 5,
      "jinwentay": 58,
      "shannonlee98": 1
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/StorageStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.feature.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Initializes storage and the filepath for each file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param budgetFilePath   File path to store the budget into."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param scheduleFilePath File path to store all categories"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public StorageStub(String budgetFilePath, String scheduleFilePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(budgetFilePath, scheduleFilePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public StorageStub() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void saveBudgetToFile(Budget budget) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public HashMap\u003cString, Double\u003e loadBudget(ArrayList\u003cCategory\u003e catList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        HashMap\u003cString, Double\u003e newHashMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return newHashMap;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void saveScheduleToFile(ScheduleList calendar) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public HashMap\u003cString, ArrayList\u003cString\u003e\u003e loadCalendar() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        HashMap\u003cString, ArrayList\u003cString\u003e\u003e newCalendar \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return newCalendar;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 16,
      "jinwentay": 11,
      "shannonlee98": 18
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/UiStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.feature.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class UiStub extends Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static String returnResponse() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static void setOutput(String output) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        response \u003d output;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 9,
      "shannonlee98": 7
    }
  }
]
