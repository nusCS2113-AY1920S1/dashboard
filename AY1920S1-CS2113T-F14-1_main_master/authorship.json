[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "group \u0027moomoo\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    mainClassName \u003d \"MooMoo\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src/main/java/Commands\u0027,\u0027src/main/java\u0027,\u0027src/main/java/Classes\u0027]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "sourceSets.main.resources.srcDirs \u003d[\u0027src/main/resources\u0027]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn \u0027cleanTest\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveBaseName \u003d \"moomoo\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveVersion \u003d \"1.1\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 21,
      "shannonlee98": 1,
      "-": 35
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the DialogBox to be shown in the GUI."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * Takes in a text and image to be displayed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param text Text to be printed for each message given by the user or response by Duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param img Image of the User and Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box for responses by Duke so that the image is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the DialogBox for inputs by the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param text Text given by the user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param img Image by the User"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return DialogBox object that holds User information"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the DialogBox for output given by Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param text Text to be shown to the User based on response by Duke"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param img Image of Duke"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return DialogBox objects that holds Duke Information"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 3,
      "-": 71
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Launches the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the program either in GUI or CLI mode."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args If appropriate argument is given, GUI will be launched."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (args.length \u003e 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (args[0].equals(\"GUI\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            MooMoo.main(args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 12,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import javafx.event.EventTarget;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the Main GUI window to be shown to user when run."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private MooMoo moomoo \u003d new MooMoo();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * Starts the GUI to be shown to the user, reads in precreated FXML file created in Java SceneBuilder."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param stage Stage object that holds the container containing the visual elements."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setMoomoo(moomoo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 2,
      "shannonlee98": 2,
      "-": 27
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the main window holding the different elements of the GUI."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private MooMoo moomoo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void setMoomoo(MooMoo d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        moomoo \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles input given by the user and creates a DialogBox for every value given by user or response given by Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String response \u003d moomoo.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] splitArray \u003d response.split(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        String newResponse \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String element : splitArray) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            if (element.length() \u003e 80) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c element.length(); ++i) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (i \u003e 0 \u0026\u0026 i % 80 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                        newResponse +\u003d \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    newResponse +\u003d element.charAt(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                newResponse +\u003d element;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            newResponse +\u003d \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(newResponse, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            Thread exitThread \u003d new Thread() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                        Thread.sleep(1500);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            exitThread.start();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 4,
      "-": 75
    }
  },
  {
    "path": "src/main/java/MooMoo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Runs MooMoo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMoo {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private TransactionList transList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private CategoryList categoryList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Budget budget;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes different Category, Transaction Lists, Budget, Storage and Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    MooMoo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage \u003d new Storage(\"data/budget.txt\",\"data/transactions.txt\",\"data/category.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            categoryList \u003d new CategoryList(storage.loadCategories());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            transList \u003d new TransactionList(storage.loadTransactions());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            transList \u003d new TransactionList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget(storage.loadBudget(categoryList));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the command line interface, reads input from user and returns result accordingly."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand, ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                c.execute(budget, categoryList, transList, ui, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (ui.printResponse() !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    ui.showResponse();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (MooMooException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.showResponse();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns the response to the GUI when given an input by a user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by user in the GUI"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String Response to display on GUI by the bot."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Command c \u003d Parser.parse(input, ui);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            c.execute(budget, categoryList, transList, ui, storage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (isExit) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.showGoodbye();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return ui.printResponse();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return ui.printResponse();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs MooMoo."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args Argument values given when running the program"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        new MooMoo().run();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 90,
      "guanyewtan": 1,
      "shannonlee98": 10,
      "-": 3
    }
  },
  {
    "path": "src/main/java/moomoo/command/AddCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class AddCategoryCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String categoryName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public AddCategoryCommand(boolean isExit, String input, String categoryName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryName \u003d categoryName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(Budget budget, CategoryList categoryList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super.execute(budget, categoryList, transList, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category newCategory \u003d new Category(categoryName);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(newCategory);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ui.showNewCategoryMessage(categoryName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 29
    }
  },
  {
    "path": "src/main/java/moomoo/command/BudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the command to manage budget."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class BudgetCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input  Input given by the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public BudgetCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                manageBudgetPrompt(budget, catList, transList, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                manageBudget(budget, catList, transList, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Parses String input into LocalDate object for parsing of dates."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param inputDate String input with format \"01/2019\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return LocalDate object if valid input else null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDate parseMonth(String inputDate) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            inputDate \u003d \"01/\" + inputDate;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            LocalDate parsedDate \u003d LocalDate.parse(inputDate, formatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return parsedDate;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs necessary budgets command for one line input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget    Budget object containing the budget."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param catList   CategoryList object containing the categories"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param transList TransactionList object containing transactions within each category."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param ui        Ui object for interaction with user interface."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param storage   Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when error such as invalid input occurs"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private void manageBudget(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        input \u003d input.substring(7);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.startsWith(\"set \")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d input.substring(4);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String category \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int i \u003d 0; i \u003c splitInput.length; ++i) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (i % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (splitInput[i].startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d splitInput[i].substring(2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!inCategoryList(category, catList)) { //check if category exists."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            throw new MooMooException(category + \" does not exist. Please create it first.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please place the category before the budget \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                + \"and use c/CATEGORY to set the category.\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (splitInput[i].startsWith(\"b/\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        outputValue +\u003d addBudget(budget, splitInput[i].substring(2), category);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please place the category before the budget \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                + \"and use b/BUDGET to set the budget.\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.setOutput(outputValue.substring(0, outputValue.length() - 1));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"edit \")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d input.substring(5);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String category \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int i \u003d 0; i \u003c splitInput.length; ++i) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (i % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (splitInput[i].startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d splitInput[i].substring(2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!inCategoryList(category, catList)) { //check if category exists."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            throw new MooMooException(\"The \" + category + \" does not exist. Please create it first.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (budget.getBudgetFromCategory(category) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            throw new MooMooException(\"The budget for \" + category + \" does not exist.\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    + \"Please set it using budget set.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please place the category before the budget and \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                + \"use c/CATEGORY to set the category.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (splitInput[i].startsWith(\"b/\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        outputValue +\u003d editBudget(budget, splitInput[i].substring(2), category);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please place the category before the budget \""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                + \"and use b/BUDGET to set the budget.\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.setOutput(outputValue.substring(0, outputValue.length() - 1));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(budget.toString().substring(0, budget.toString().length() - 1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                input \u003d input.substring(5);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String category \u003d \"\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (int i \u003d 0; i \u003c splitInput.length; ++i) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (splitInput[i].startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d splitInput[i].substring(2);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!inCategoryList(category, catList) || budget.getBudgetFromCategory(category) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            throw new MooMooException(\"The \" + category + \" does not exist or\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    + \" the budget has not been set yet.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        outputValue +\u003d budget.toStringCategory(category);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (outputValue \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"You have not typed in a valid format. \""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"Please list down the categories using c/CATEGORY.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(outputValue.substring(0, outputValue.length() - 1));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"savings \")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d input.substring(8);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            boolean hasCategories \u003d false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            List\u003cString\u003e categories \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.length() \u003c 8) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"OOPS!!! Please indicate the start period (01/2019) after \\\"s/\\\" \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String startMonth \u003d \"\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String endMonth \u003d \"\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int i \u003d 0; i \u003c splitInput.length; ++i) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (splitInput[i].startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    hasCategories \u003d true;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(splitInput[i].substring(2));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else if (splitInput[i].startsWith(\"s/\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (startMonth.equals(\"\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        startMonth \u003d splitInput[i].substring(2);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please only set 1 starting period.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else if (splitInput[i].startsWith(\"e/\")) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (endMonth.equals(\"\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        endMonth \u003d splitInput[i].substring(2);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please only set 1 ending period.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please use [c/CATEGORY], s/02/2019, e/12/2019\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (hasCategories) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d viewSavings(budget, ui, catList, startMonth, endMonth, \"\", categories);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d viewSavings(budget, ui, catList, startMonth, endMonth, \"\", null);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (outputValue.endsWith(\"\\n\")) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(outputValue.substring(0, outputValue.length() - 1));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"There is only edit/set/list/savings sub command under budget.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs necessary budgets command and prompts user for input."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget    Budget object containing the budget."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param catList   CategoryList object containing the categories"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param transList TransactionList object containing transactions within each category."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param ui        Ui object for interaction with user interface."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param storage   Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when error such as invalid input occurs"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private void manageBudgetPrompt(Budget budget, CategoryList catList, TransactionList transList, Ui ui,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String initialInput \u003d \"Please select a job to do (1 - 4):\\n1. set (sets budget)\\n2. edit (changes budget)\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"3. list (view budget)\\n4. savings (view savings per month)\\n5. exit\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String command \u003d ui.confirmPrompt(inputVal);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                switch (Integer.parseInt(command)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    String category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            \"Please type in the category that you would like to set the budget for, \""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    + \"type 0 to exit.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    while (!category.equals(\"0\")) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!inCategoryList(category, catList)) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.setOutput(category + \" does not exist. Please create it first.\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.showResponse();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    \"Please type in the category that you would like to set the budget for, \""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                            + \"type 0 to exit.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        inputVal \u003d \"\\nPlease type in the budget that you would like to set for \" + category;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        String inputBudget \u003d ui.confirmPrompt(inputVal);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.setOutput(addBudget(budget, inputBudget, category));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.showResponse();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                \"Please type in the category that you would like to set the budget for, \""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                        + \"type 0 to exit.\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (budget.getBudgetSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.setOutput(\"You have yet to set a budget for any category. Please set at least one.\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.showResponse();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            \"Please type in the category that you would like to change the budget for, \""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    + \"type 0 to exit\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    while (!category.equals(\"0\")) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!inCategoryList(category, catList)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.setOutput(category + \" does not exist. Please create it first.\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.showResponse();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    \"Please type in the category that you would like to change the budget for, \""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                            + \"type 0 to exit.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        inputVal \u003d \"Please type in the budget that you would like to change to for \" + category;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        String inputBudget \u003d ui.confirmPrompt(inputVal);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.setOutput(editBudget(budget, inputBudget, category));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.showResponse();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                \"Please type in the category that you would like to change the budget for, \""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                        + \"type 0 to exit.\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (budget.getBudgetSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.setOutput(\"You have yet to set a budget for any category. Please set at least one.\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.showResponse();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            \"Please type in the category that you would like to view the budget for, \""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    + \"type 0 to exit or leave blank to view all categories.\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    while (!category.equals(\"0\")) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (category.equals(\"\")) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.setOutput(budget.toString().substring(0, budget.toString().length() - 1));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.showResponse();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    \"Please type in the category that you would like to view the budget for, \""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                            + \"type 0 to exit or leave blank to view all categories.\");"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!inCategoryList(category, catList)) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.setOutput(category + \" does not exist. Please create it first.\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.showResponse();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    \"Please type in the category that you would like to view the budget for, \""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                            + \"type 0 to exit or leave blank to view all categories.\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.setOutput(budget.toStringCategory(category));"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.showResponse();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                \"Please type in the category that you would like to view the budget for, \""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                        + \"type 0 to exit or leave blank to view all categories.\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (budget.getBudgetSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.setOutput(\"You have yet to set a budget for any category. Please set at least one.\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.showResponse();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            \"Please type in the category that you would like to view your savings for, \""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    + \"type 0 to exit or leave it blank to view all.\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    while (!category.equals(\"0\")) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!category.equals(\"\") \u0026\u0026 !inCategoryList(category, catList)) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.setOutput(category + \" does not exist. Please create it first.\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            ui.showResponse();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    \"Please type in the category that you would like to view your savings for, \""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                            + \"type 0 to exit or leave it blank to view all.\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        inputVal \u003d \"Please type in the start month and year (01/2019).\";"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        String startMonth \u003d ui.confirmPrompt(inputVal);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        inputVal \u003d \"Please type in the end period or leave blank to view for a month (10/2019).\";"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        String endMonth \u003d ui.confirmPrompt(inputVal);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.setOutput(viewSavings(budget, ui, catList, startMonth, endMonth, category, null));"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ui.showResponse();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d initialPrompt(catList, ui, budget,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                \"Please type in the category that you would like to view your savings for, \""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                        + \"type 0 to exit or leave it blank to view all.\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputVal \u003d initialInput;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                case 5:"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    ui.setOutput(\"Returning to main menu.\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    ui.showResponse();"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputVal \u003d \"Please select a number from 1 to 4\";"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputVal \u003d \"Please select a number from 1 to 4\";"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private boolean inCategoryList(String value, CategoryList catList) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (Category cat : catList.getCategoryList()) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (cat.getName().equals(value)) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String addBudget(Budget budget, String inputBudget, String category) throws MooMooException {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double addedBudget \u003d 0;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue;"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            addedBudget \u003d Double.parseDouble(inputBudget);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (addedBudget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d \"The budget set for \" + category + \" is invalid. \""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \"Please type in a positive number greater than 0\";"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return outputValue;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"The budget set for \" + category + \" is invalid. \""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \"Please type in a positive number greater than 0\";"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (budget.getBudgetFromCategory(category) !\u003d 0) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"The budget for \" + category + \" has already been set. \""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \"Please edit it using budget edit.\";"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budget.addNewBudget(category, addedBudget);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        outputValue \u003d \"You have set $\" + df.format(addedBudget)"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \" as the budget for \" + category + \"\\n\";"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return outputValue;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String editBudget(Budget budget, String inputBudget, String category) throws MooMooException {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double addedBudget \u003d 0;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            addedBudget \u003d Double.parseDouble(inputBudget);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (addedBudget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d \"The budget set for \" + category + \" is invalid. \""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \"Please type in a positive number greater than 0\";"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return outputValue;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"The budget set for \" + category + \" is invalid. \""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \"Please type in a positive number greater than 0\";"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (budget.getBudgetFromCategory(category) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"The budget for \" + category + \" has already been set. \""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \"Please edit it using budget edit.\";"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double oldBudget \u003d budget.getBudgetFromCategory(category);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (oldBudget \u003d\u003d addedBudget) {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"The budget for \" + category + \" is the same.\\n\";"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budget.addNewBudget(category, addedBudget);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        outputValue \u003d \"You have changed the budget for \" + category + \" from $\""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + df.format(oldBudget) + \" to $\" + df.format(addedBudget) + \"\\n\";"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return outputValue;"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String viewSavings(Budget budget, Ui ui, CategoryList catList, String startMonth,"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                               String endMonth, String category, List\u003cString\u003e categories) throws MooMooException {"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate start \u003d parseMonth(startMonth.strip());"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate end \u003d parseMonth(endMonth.strip());"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (!endMonth.equals(\"\") \u0026\u0026 end \u003d\u003d null) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"Please set your start and end month in this format \\\"05/2019\\\"\";"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (!startMonth.equals(\"\") \u0026\u0026 start \u003d\u003d null) {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"Please set your start and end month in this format \\\"05/2019\\\"\";"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (end !\u003d null \u0026\u0026 end.isBefore(start)) {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue \u003d \"Your end month is earlier than your start month.\";"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return outputValue;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (categories \u003d\u003d null \u0026\u0026 category.equals(\"\")) {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (endMonth.equals(\"\")) {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d \"Your total savings for \" + start.getMonth()"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \" \" + start.getYear() + \" is: \";"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d \"Your total savings from \" + start.getMonth()"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \" \" + start.getYear() + \" to \""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + end.getMonth() + \" \" + end.getYear() + \" is: \";"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (!category.equals(\"\") \u0026\u0026 categories \u003d\u003d null) {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                categories.add(category);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (String iteratorCategory : categories) {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!inCategoryList(iteratorCategory, catList)) {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"The \" + iteratorCategory + \" does not exist.\""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \" Please create it first.\");"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (budget.getBudgetFromCategory(iteratorCategory) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"The budget for \" + iteratorCategory + \" does not exist.\""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \"Please set it using budget set.\");"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (endMonth.equals(\"\")) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Your savings for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + \" \" + start.getYear() + \" is: $\""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + df.format((budget.getBudgetFromCategory(iteratorCategory) - 0)) + \"\\n\";"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Your savings for \" + iteratorCategory + \" from \" + start.getMonth() + \" \""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + start.getYear() + \" to \""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + end.getMonth() + \" \" + end.getYear() + \" is: $\""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            + df.format((budget.getBudgetFromCategory(iteratorCategory) - 0)) + \"\\n\";"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return outputValue;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String initialPrompt(CategoryList catList, Ui ui, Budget budget, String promptValue) {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"CATEGORIES:\\n\";"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c catList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String categoryName \u003d catList.getCategoryList().get(i).getName();"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue +\u003d categoryName + \"\\n\";"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (outputValue.equals(\"CATEGORIES:\\n\")) {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue +\u003d \"There are no categories set.\\n\";"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputVal \u003d outputValue + promptValue;"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String category \u003d ui.confirmPrompt(inputVal);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 525
    }
  },
  {
    "path": "src/main/java/moomoo/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the various commands to be executed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    Command(boolean isExit, String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Executes necessary functions for each different command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget object containing the budget."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param catList CategoryList object containing the categories"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param transList TransactionList object containing transactions within each category."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param ui Ui object for interaction with user interface."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param storage Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when error such as invalid input occurs"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 38,
      "guanyewtan": 1,
      "shannonlee98": 3
    }
  },
  {
    "path": "src/main/java/moomoo/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the command to exit the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     *               Value should be true in this class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExitCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 10,
      "shannonlee98": 2,
      "-": 17
    }
  },
  {
    "path": "src/main/java/moomoo/command/GraphCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class GraphCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private ArrayList\u003cString\u003e verticalAxis;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String fullBlock \u003d \"█\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String halfBlock \u003d \"▌\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String topBorder \u003d \"┬\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String bottomBorder \u003d \"┴\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisTop \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisBottom \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public GraphCommand(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        super(false, input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public static double roundToHalf(double d) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return Math.round(d * 2) / 2.0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public void execute(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Please use the total/[CATEGORY} sub-command\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        input \u003d input.substring(6);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (input.equals(\"total\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (catList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                throw new MooMooException(\"OOPS!!! MooMoo cannot find any expenditure data :(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int i \u003d 0; i \u003c catList.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                String categoryName \u003d catList.get(i).toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                if (categoryName.length() \u003e 14) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    categoryName \u003d categoryName.substring(0, 10) + \"...\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                verticalAxis.add(categoryName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            double grandTotal \u003d catList.getGrandMonthTotal();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int maxAxisUnit \u003d (int) (grandTotal / catList.getLargestExpenditure()) + 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int i \u003d 0; i \u003c maxAxisUnit; i +\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                horizontalAxisTop +\u003d topBorder;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                horizontalAxisBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            //15 spaces before xAxisTop"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d \"               \" + horizontalAxisTop + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int i \u003d 0; i \u003c catList.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                Category category \u003d catList.get(i);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                double percentage \u003d 10 * (category.getCategoryMonthTotal() / grandTotal);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                percentage \u003d roundToHalf(percentage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                int noOfFullBars \u003d (int) percentage;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                int noOfHalfBars \u003d (int) Math.round(percentage % 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + verticalAxis.get(i) + \" \\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                for (int j \u003d 0; j \u003c noOfFullBars; j +\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    output \u003d output + fullBlock;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                if (noOfHalfBars \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    output \u003d output + halfBlock + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d \"               \" + horizontalAxisBottom + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            ui.setOutput(output);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Wrong sub-command! Please use the total/[CATEGORY} sub-command\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 77
    }
  },
  {
    "path": "src/main/java/moomoo/command/ListCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class ListCategoryCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ListCategoryCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(Budget budget, CategoryList categoryList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super.execute(budget, categoryList, transList, ui, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.list(ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 21
    }
  },
  {
    "path": "src/main/java/moomoo/task/Budget.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Holds a map for the budget for each category."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    HashMap\u003cString, Double\u003e categoryBudgets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    DecimalFormat df;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets \u003d new HashMap\u003cString, Double\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in budget set by user and set budget variable."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes DecimalFormat to force doubles to display with 2 decimal places."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget(HashMap\u003cString, Double\u003e newBudget) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets \u003d newBudget;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String returnVal \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Iterator budgetIterator \u003d categoryBudgets.entrySet().iterator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (budgetIterator.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Map.Entry mapElement \u003d (Map.Entry) budgetIterator.next();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            returnVal +\u003d \"Your budget for \" + mapElement.getKey() + \" is: $\" + df.format(mapElement.getValue()) + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return returnVal;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toStringCategory(String category) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return \"Your budget for \" + category + \" is: $\" + df.format(this.categoryBudgets.get(category)) + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns budget from corresponding category."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param category Category to get budget from."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return The budget of the given category."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getBudgetFromCategory(String category) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (this.categoryBudgets.containsKey(category)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return this.categoryBudgets.get(category);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void addNewBudget(String category, double budget) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets.put(category, budget);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public HashMap\u003cString, Double\u003e getBudget() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.categoryBudgets;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public int getBudgetSize() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.categoryBudgets.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 71
    }
  },
  {
    "path": "src/main/java/moomoo/task/Category.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Category {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    String categoryName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    //Dummy variable"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    int monthTotal;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private ArrayList\u003cExpenditure\u003e expenditure;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.expenditure \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public int getExpenditureArraySize() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return expenditure.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Calculates the total expenditure for every entry in the category."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return total"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotalExpenditure() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double totalCost \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Expenditure entry : expenditure) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            totalCost +\u003d entry.cost;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return totalCost;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    //Method"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return categoryName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public double getCategoryMonthTotal() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return monthTotal;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void addExpenditure() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void editExpenditure() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void deleteExpenditure() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 6,
      "guanyewtan": 12,
      "shannonlee98": 39
    }
  },
  {
    "path": "src/main/java/moomoo/task/CategoryList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private ArrayList\u003cCategory\u003e categoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categoryList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryList \u003d categoryList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return categoryList.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public Category get(int i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return categoryList.get(i);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Return the total sum of all expenditure across all categories for the current month."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return total The total sum"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public double getGrandMonthTotal() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double total \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            total +\u003d category.getCategoryMonthTotal();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return total;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Find the category with the largest total expenditure and return the value of that expenditure."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return expenditure The value of the largest expenditure"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public double getLargestExpenditure() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double expenditure \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (category.getCategoryMonthTotal() \u003e expenditure) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                expenditure \u003d category.getCategoryMonthTotal();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return expenditure;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints the current list of categories."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param ui MooMoo\u0027s ui"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void list(Ui ui) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryList \u003d \"These are your current categories:\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.categoryList.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList \u003d categoryList.concat(\"\\n\" + i + \". \" + this.categoryList.get(i).getName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ui.showCategoryList(categoryList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ArrayList\u003cCategory\u003e getCategoryList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void add(Category newCategory) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(newCategory);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void deleteExpenditure() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    double getMonthlyGrandTotal(int month) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 14,
      "guanyewtan": 34,
      "shannonlee98": 31
    }
  },
  {
    "path": "src/main/java/moomoo/task/Expenditure.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class Expenditure {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double cost;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Expenditure() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 15
    }
  },
  {
    "path": "src/main/java/moomoo/task/MooMooException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents Exceptions that are dedicated to Duke functions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMooException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public MooMooException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 10
    }
  },
  {
    "path": "src/main/java/moomoo/task/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.AddCategoryCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.BudgetCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.GraphCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.command.ListCategoryCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Takes in a string and parses it to return a valid command to be ran."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Takes in input from user and returns a command based on the input given. All parsing of input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * should be done here including separating a line of command into parts for each command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input String given by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param ui MooMoo\u0027s ui"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return The command object corresponding to the user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when an invalid input is given"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static Command parse(String input, Ui ui) throws MooMooException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Scanner scanner \u003d new Scanner(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String commandType \u003d scanner.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"bye\"): return new ExitCommand(true, \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"budget\"): return new BudgetCommand(false, input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"categories\"): return new ListCategoryCommand(false, \"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"add\"): return parseAdd(scanner, ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        case (\"graph\"): return new GraphCommand(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        default: throw new MooMooException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseAdd(Scanner scanner, Ui ui) throws MooMooException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        switch (scanner.next()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"category\"): return parseAddCategory(ui);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Sorry I did not recognize that command.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseAddCategory(Ui ui) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ui.showAddCategoryMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryName \u003d ui.readCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return new AddCategoryCommand(false, \"\", categoryName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 16,
      "guanyewtan": 10,
      "shannonlee98": 26
    }
  },
  {
    "path": "src/main/java/moomoo/task/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Handles storage and retrieval of the tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String budgetFilePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String transactionFilePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String categoryFilePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes storage and the filepath for each file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budgetFilePath File path to store the budget into."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param transactionFilePath File path to store all transactions"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categoryFilePath File path to store all categories"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Storage(String budgetFilePath, String transactionFilePath, String categoryFilePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budgetFilePath \u003d budgetFilePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.transactionFilePath \u003d transactionFilePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryFilePath \u003d categoryFilePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in categories from an existing file into a created ArrayList object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return ArrayList object consisting of the categories read from the file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when the file does not exist"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cCategory\u003e loadCategories() throws MooMooException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cCategory\u003e categoryArrayList \u003d new ArrayList\u003cCategory\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return categoryArrayList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in transactions from an existing file into a created ArrayList object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return ArrayList object consisting of the transactions read from the file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when the file does not exist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ArrayList\u003cExpenditure\u003e loadTransactions() throws MooMooException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cExpenditure\u003e transactionArrayList \u003d new ArrayList\u003cExpenditure\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return transactionArrayList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in budgetFile not found. New file will be created from an existing file into a created HashMap object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return HashMap object consisting of the categories and corresponding budget read from file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when the file does not exist"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public HashMap\u003cString, Double\u003e loadBudget(CategoryList catList) throws MooMooException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (Files.isRegularFile(Paths.get(this.budgetFilePath))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                HashMap\u003cString, Double\u003e loadedBudgets \u003d new HashMap\u003cString, Double\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(this.budgetFilePath));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (String value : input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (value.charAt(0) \u003d\u003d \u0027B\u0027) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        String[] splitInput \u003d value.split(\" \\\\| \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        String category \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        double budget \u003d 0;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        for (int i \u003d 1; i \u003c splitInput.length; ++i) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            if (i % 2 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                if (!category.equals(\"\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    budget \u003d Double.parseDouble(splitInput[i]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    loadedBudgets.put(category, budget);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                category \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                if (inCategoryList(catList, splitInput[i])) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                    category \u003d splitInput[i];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        return loadedBudgets;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (loadedBudgets \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Unable to load budget from file. Please reset your budget.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return loadedBudgets;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"Budget File not found. New file will be created\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Creates the directory and file as given by the file path initialized in the constructor."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private void createFileAndDirectory(String filePath) throws MooMooException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            File myNewFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.createDirectory(Paths.get(myNewFile.getParent()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (FileAlreadyExistsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to create file. Please restart the program\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDateTime parseDate(String dateToParse) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return LocalDateTime.parse(dateToParse, formatter);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Converts the LocalDateTime object into printable string for writing to file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param dateTime LocalDateTime object to be converted"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String format of the LocalDateTime object"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String unparseDate(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Creates a file if necessary and stores each category and its budget into the file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget object that stores the budget for each category"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException thrown if file cannot be written to."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void saveBudgetToFile(Budget budget) throws MooMooException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        createFileAndDirectory(this.budgetFilePath);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String toSave \u003d \"B\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Iterator budgetIterator \u003d budget.getBudget().entrySet().iterator();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (budgetIterator.hasNext()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Map.Entry mapElement \u003d (Map.Entry)budgetIterator.next();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            toSave +\u003d \" | \" + mapElement.getKey() + \" | \" + mapElement.getValue();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.writeString(Paths.get(this.budgetFilePath), toSave);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Checks if a category is found in the list of categories."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return true if it exists."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private boolean inCategoryList(CategoryList catList, String value) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (Category cat : catList.getCategoryList()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (cat.getName().equals(value)) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 169,
      "guanyewtan": 1,
      "shannonlee98": 2
    }
  },
  {
    "path": "src/main/java/moomoo/task/TransactionList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class TransactionList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private ArrayList\u003cExpenditure\u003e transList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public TransactionList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        transList \u003d new ArrayList\u003cExpenditure\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public TransactionList(ArrayList\u003cExpenditure\u003e inList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.transList \u003d inList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 12,
      "shannonlee98": 3
    }
  },
  {
    "path": "src/main/java/moomoo/task/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the User Interface to be shown to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Scanner inputScanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns the value to be printed to the GUI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String to be printed on the GUI"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String printResponse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints the welcome message to the User."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"   \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   ^____^________\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   ( oo )\\\\ *  *  )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   (____)||----w |  o \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"         ||     ||   00\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   wmwwmWMWMwmWMmwMWWMWMwm\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                + \"MOOOOOOOO!\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Welcome to MooMooMoney! Your one-stop budgeting and expenses tracker!\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"What can MooMoo do for you today?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Used to read input from the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String representing the input given by the User"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.inputScanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Sets good bye message to be shown to the User."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d \"Hope you had a great time using MooMooMoney!\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"See you next time :)\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns message of MooMooException that occurs."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param e MooMooException that occurs"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return Message of the MooMooException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String printException(MooMooException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d e.getMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints out response from command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showResponse() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(this.output);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prompts the user for confirmation."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return value given by user"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String confirmPrompt(String value) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(value);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return inputScanner.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Sets the output to be printed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param output Input value to be printed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void setOutput(String output) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints a line to enclose message."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints out a message enclosed between two lines."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param text message to be printed"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void print(String text) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints out when a new category is created."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName name of the new category"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showNewCategoryMessage(String categoryName) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"Ok, I\u0027ve added a new category named \" + categoryName);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prompts the user to enter a category name."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void showAddCategoryMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"Please enter a name for your new category\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints the list of categories."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categories list of current categories"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showCategoryList(String categories) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(categories);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 81,
      "guanyewtan": 3,
      "shannonlee98": 46
    }
  },
  {
    "path": "src/test/java/moomoo/command/BudgetCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class BudgetCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testBudgetSubCommands() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File transactionsFile \u003d File.createTempFile(\"transactions\", \".txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        transactionsFile.deleteOnExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File categoriesFile \u003d File.createTempFile(\"categories\", \".txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categoriesFile.deleteOnExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.getCategoryList().add(new Category(\"shoes\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.getCategoryList().add(new Category(\"food\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.getCategoryList().add(new Category(\"window\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        TransactionList newTransList \u003d new TransactionList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Ui newUi \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Storage newStorage \u003d new Storage(budgetFile.getPath(), transactionsFile.getPath(), categoriesFile.getPath());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        BudgetCommand budgetCommand \u003d new BudgetCommand(false, \"budget set c/shoes b/1000.79 c/food b/500\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget for shoes is: $1000.79\\nYour budget for food is: $500.00\\n\", newBudget.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"You have set $1000.79 as the budget for shoes\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have set $500.00 as the budget for food\", newUi.printResponse());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget edit c/shoes b/700 c/food b/400\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget for shoes is: $700.00\\nYour budget for food is: $400.00\\n\", newBudget.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"You have changed the budget for shoes from $1000.79 to $700.00\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have changed the budget for food from $500.00 to $400.00\", newUi.printResponse());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget edit c/shoes b/800 c/food b/400\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget for shoes is: $800.00\\nYour budget for food is: $400.00\\n\", newBudget.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"You have changed the budget for shoes from $700.00 to $800.00\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"The budget for food is the same.\", newUi.printResponse());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget for shoes is: $800.00\\nYour budget for food is: $400.00\", newUi.printResponse());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget list c/shoes\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget for shoes is: $800.00\", newUi.printResponse());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget savings s/10/2019 e/12/2019\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your total savings from OCTOBER 2019 to DECEMBER 2019 is: \", newUi.printResponse());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget savings s/01/2018\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your total savings for JANUARY 2018 is: \", newUi.printResponse());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget savings c/shoes c/food s/07/2019 e/09/2019\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your savings for shoes from JULY 2019 to SEPTEMBER 2019 is: $800.00\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your savings for food from JULY 2019 to SEPTEMBER 2019 is: $400.00\", newUi.printResponse());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 86
    }
  },
  {
    "path": "src/test/java/moomoo/task/ParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.BudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParser() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Ui newUi \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertTrue(Parser.parse(\"bye\", newUi) instanceof ExitCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertTrue(Parser.parse(\"budget\", newUi) instanceof BudgetCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"moomoo.task.MooMooException: OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    e.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 22,
      "guanyewtan": 1
    }
  },
  {
    "path": "src/test/java/moomoo/task/StorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.BudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testFileLoad() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File transactionsFile \u003d File.createTempFile(\"transactions\", \".txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        transactionsFile.deleteOnExit();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File categoriesFile \u003d File.createTempFile(\"categories\", \".txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categoriesFile.deleteOnExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.getCategoryList().add(new Category(\"sweets\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.getCategoryList().add(new Category(\"laptop\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.getCategoryList().add(new Category(\"desktop\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Ui newUi \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        TransactionList newTransList \u003d new TransactionList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Storage newStorage \u003d new Storage(budgetFile.getPath(), transactionsFile.getPath(), categoriesFile.getPath());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        BudgetCommand budgetCommand \u003d new BudgetCommand(false, \"budget set c/sweets b/500 c/laptop b/1500\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        HashMap\u003cString, Double\u003e newHashMap \u003d newStorage.loadBudget(newCatList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(500, newHashMap.get(\"sweets\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(1500, newHashMap.get(\"laptop\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget edit c/sweets b/700 c/laptop b/1500\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newHashMap \u003d newStorage.loadBudget(newCatList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(700, newHashMap.get(\"sweets\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(1500, newHashMap.get(\"laptop\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 47,
      "guanyewtan": 1
    }
  }
]
