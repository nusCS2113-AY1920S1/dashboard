[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "group \u0027moomoo\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src/main/java/Commands\u0027,\u0027src/main/java\u0027,\u0027src/main/java/Classes\u0027]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "sourceSets.main.resources.srcDirs \u003d[\u0027src/main/resources\u0027]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn \u0027cleanTest\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveBaseName \u003d \"moomoo\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveVersion \u003d \"1.1\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 21,
      "-": 36
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Launches the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the program either in GUI or CLI mode."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args If appropriate argument is given, GUI will be launched."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (args.length \u003e 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (args[0].equals(\"GUI\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            MooMoo.main(args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 12,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the Main GUI window to be shown to user when run."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private MooMoo moomoo \u003d new MooMoo();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Starts the GUI to be shown to the user, reads in precreated FXML file created in Java SceneBuilder."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param stage Stage object that holds the container containing the visual elements."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setMoomoo(moomoo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 2,
      "-": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the main window holding the different elements of the GUI."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private MooMoo moomoo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void setMoomoo(MooMoo d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        moomoo \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Handles input given by the user and creates a DialogBox for every value given by user or response given by Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String response \u003d moomoo.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] splitArray \u003d response.split(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        String newResponse \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String element : splitArray) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            if (element.length() \u003e 80) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c element.length(); ++i) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (i \u003e 0 \u0026\u0026 i % 80 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                        newResponse +\u003d \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    newResponse +\u003d element.charAt(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                newResponse +\u003d element;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            newResponse +\u003d \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(newResponse, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            Thread exitThread \u003d new Thread() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                        Thread.sleep(1500);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            exitThread.start();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 4,
      "-": 75
    }
  },
  {
    "path": "src/main/java/MooMoo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Runs MooMoo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMoo {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private TransactionList transList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private CategoryList catList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Budget budget;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes different Category, Transaction Lists, Budget, Storage and Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public MooMoo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage \u003d new Storage(\"data/moomoo.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            catList \u003d new CategoryList(storage.loadCategories());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            catList \u003d new CategoryList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            transList \u003d new TransactionList(storage.loadTransactions());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            transList \u003d new TransactionList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget(storage.loadBudget());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the command line interface, reads input from user and returns result accordingly."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                c.execute(budget, catList, transList, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.showResponse();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (MooMooException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.showResponse();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns the response to the GUI when given an input by a user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by user in the GUI"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String Response to display on GUI by the bot."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c.execute(budget, catList, transList, ui, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (isExit) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.showGoodbye();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return ui.printToGui();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return ui.printToGui();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs MooMoo."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args Argument values given when running the program"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        new MooMoo().run();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 95,
      "guanyewtan": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/moomoo/command/BudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the command to manage budget."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class BudgetCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public BudgetCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Please use set/edit/savings/list sub command\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        input \u003d input.substring(7);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.startsWith(\"set \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (budget.getBudget() !\u003d 0.0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"Your budget has already been set, please use the edit sub command \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \"to change your budget.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                addBudget(budget, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (budget.getBudget() !\u003d 0.0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(budget.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"You have yet to set your budget.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"savings \")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            int startIndex \u003d input.indexOf(\"s/\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (startIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"OOPS!!! Please indicate the start period after \\\"s/\\\"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            int endIndex \u003d input.indexOf(\"e/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String startMonth;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String endMonth;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (endIndex !\u003d -1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                startMonth \u003d input.substring(startIndex + 2, endIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                endMonth \u003d input.substring(endIndex + 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                LocalDate start \u003d parseMonth(startMonth.strip());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                LocalDate end \u003d parseMonth(endMonth.strip());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (start \u003d\u003d null || end \u003d\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please set your start and end month in this format \\\"05/2019\\\"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (end.isBefore(start)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Your end month is earlier than the start month.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(\"Your savings from \" + start.getMonth() + \" \" + start.getYear() + \" to \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + end.getMonth() + \" \" + end.getYear() + \" is: \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                startMonth \u003d input.substring(startIndex + 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                LocalDate start \u003d parseMonth(startMonth.strip());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (start \u003d\u003d null) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please set your start month in this format \\\"05/2019\\\"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(\"Your savings for \" + start.getMonth() + \" \" + start.getYear() + \" is: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"edit \")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (budget.getBudget() !\u003d 0.0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                addBudget(budget, ui, storage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(\"Please set your budget using budget set\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"There is only edit/set/list/savings sub command under budget.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Adds or changes the budget as given by user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Current Budget"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param ui Current Ui"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param storage Current Storage"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException thrown when user input is invalid."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private void addBudget(Budget budget, Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int amountIndex \u003d input.indexOf(\"d/\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (amountIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Please indicate the amount after \\\"d/\\\"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double amount;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            amount \u003d Double.parseDouble(input.substring(amountIndex + 2));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Please indicate the amount after \\\"d/\\\"\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double currentBudget \u003d budget.getBudget();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (currentBudget \u003d\u003d amount) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Your new budget is the same as the old budget.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (currentBudget !\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String confirm \u003d ui.confirmPrompt();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (confirm.toLowerCase().equals(\"y\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                budget.setBudget(amount);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(\"You have set your new budget to be $\" + df.format(amount) + \" every month.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budget.setBudget(amount);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.setOutput(\"You have set your budget to be $\" + df.format(amount) + \" every month.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDate parseMonth(String inputDate) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            inputDate \u003d \"01/\" + inputDate;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            LocalDate parsedDate \u003d LocalDate.parse(inputDate, formatter);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return parsedDate;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 140
    }
  },
  {
    "path": "src/main/java/moomoo/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the various commands to be executed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Command(boolean isExit, String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Executes necessary functions for each different command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget object containing the budget."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param catList CategoryList object containing the categories"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param transList TransactionList object containing transactions within each category."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param ui Ui object for interaction with user interface."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param storage Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when error such as invalid input occurs"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 41,
      "guanyewtan": 1
    }
  },
  {
    "path": "src/main/java/moomoo/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the command to exit the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     *               Value should be true in this class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExitCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(Budget budget, CategoryList catList, TransactionList transList, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 12,
      "-": 17
    }
  },
  {
    "path": "src/main/java/moomoo/task/Budget.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents an event that allows for a timing to be set."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private double budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budget \u003d 0.0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in budget set by user and set budget variable."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param amount Budget given by user every month"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget(double amount) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budget \u003d amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        DecimalFormat df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return \"Your budget is: $\" + df.format(this.budget);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getBudget() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.budget;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void setBudget(double budget) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budget \u003d budget;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 37
    }
  },
  {
    "path": "src/main/java/moomoo/task/Category.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Category {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Category() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 7
    }
  },
  {
    "path": "src/main/java/moomoo/task/CategoryList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cCategory\u003e catList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        catList \u003d new ArrayList\u003cCategory\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e inList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.catList \u003d inList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Greatnest": 17
    }
  },
  {
    "path": "src/main/java/moomoo/task/MooMooException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents Exceptions that are dedicated to Duke functions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMooException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public MooMooException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 10
    }
  },
  {
    "path": "src/main/java/moomoo/task/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.BudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Takes in a string and parses it to return a valid command to be ran."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in input from user and returns a command based on the input given."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input String given by the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return The command object corresponding to the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when an invalid input is given"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public static Command parse(String input) throws MooMooException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ExitCommand(true, \"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"budget\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new BudgetCommand(false, input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 26
    }
  },
  {
    "path": "src/main/java/moomoo/task/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Handles storage and retrieval of the tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in the filePath for future I/O."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param filePath String representing the path of the file to be written and read from."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in categories from an existing file into a created ArrayList object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return ArrayList object consisting of the categories read from the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when the file does not exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cCategory\u003e loadCategories() throws MooMooException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cCategory\u003e categoryArrayList \u003d new ArrayList\u003cCategory\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return categoryArrayList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in transactions from an existing file into a created ArrayList object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return ArrayList object consisting of the transactions read from the file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when the file does not exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cTransaction\u003e loadTransactions() throws MooMooException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cTransaction\u003e transactionArrayList \u003d new ArrayList\u003cTransaction\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return transactionArrayList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in budget from an existing file into a created ArrayList object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return ArrayList object consisting of the budget read from the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when the file does not exist"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double loadBudget() throws MooMooException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (Files.isRegularFile(Paths.get(this.filePath))) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(this.filePath));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (String value : input) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (value.charAt(0) \u003d\u003d \u0027B\u0027) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        String[] splitInput \u003d value.split(\" \\\\| \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        return Double.parseDouble(splitInput[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"Unable to load budget from file. Please reset your budget.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"File not found. New file will be created\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Creates the directory and file as given by the file path initialized in the constructor."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private void createFileAndDirectory() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            File myNewFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.createDirectory(Paths.get(myNewFile.getParent()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.createFile(Paths.get(this.filePath));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (FileAlreadyExistsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            createFileAndDirectory();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDateTime parseDate(String dateToParse) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return LocalDateTime.parse(dateToParse, formatter);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Converts the LocalDateTime object into printable string for writing to file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param dateTime LocalDateTime object to be converted"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String format of the LocalDateTime object"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String unparseDate(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Creates the file as necessary, reads Budget and converts each value into a string and writes it to file."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void saveBudgetToFile(Budget budget) throws MooMooException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        createFileAndDirectory();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String toSave \u003d \"B\" + \" | \" + df.format(budget.getBudget()) + \"\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.writeString(Paths.get(this.filePath), toSave);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 123,
      "guanyewtan": 1
    }
  },
  {
    "path": "src/main/java/moomoo/task/Transaction.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Transaction {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Transaction() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 7
    }
  },
  {
    "path": "src/main/java/moomoo/task/TransactionList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class TransactionList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cTransaction\u003e transList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public TransactionList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        transList \u003d new ArrayList\u003cTransaction\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public TransactionList(ArrayList\u003cTransaction\u003e inList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.transList \u003d inList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 15
    }
  },
  {
    "path": "src/main/java/moomoo/task/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the User Interface to be shown to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Scanner inputScanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns the value to be printed to the GUI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String to be printed on the GUI"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String printToGui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints the welcome message to the User."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(\"   ^____^\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"   ( oo )\\\\_______\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"   (____)\\\\       )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         ||----w |\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"         ||     ||\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"MOOOOOOOO\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Welcome to MooMooMoney! Your one-stop budgeting and expenses tracker!\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"What can MooMoo do for you today?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Used to read input from the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String representing the input given by the User"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.inputScanner.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Sets good bye message to be shown to the User."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d \"Hope you had a great time using MooMooMoney!\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"See you next time :)\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns message of MooMooException that occurs."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param e MooMooException that occurs"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return Message of the MooMooException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String printException(MooMooException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d e.getMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints out response from command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showResponse() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(this.output);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prompts the user for confirmation."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return value given by user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String confirmPrompt() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(\"Are you sure you would like to make the change? (Y/N)\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return inputScanner.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Sets the output to be printed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param output Input value to be printed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void setOutput(String output) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 87,
      "guanyewtan": 1
    }
  },
  {
    "path": "src/test/java/MooMooTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMooTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testResponse() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File newFile \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newFile.delete();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        MooMoo newMoomoo \u003d new MooMoo();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 15
    }
  },
  {
    "path": "src/test/java/moomoo/command/BudgetCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.TransactionList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class BudgetCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testBudgetSubCommands() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File tempFile \u003d File.createTempFile(\"moomoo\", \".txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        tempFile.deleteOnExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        TransactionList newTransList \u003d new TransactionList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryList newCatList \u003d new CategoryList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Ui newUi \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Storage newStorage \u003d new Storage(tempFile.getPath());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        BudgetCommand budgetCommand \u003d new BudgetCommand(false, \"budget set d/1000.79\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget is: $1000.79\", newBudget.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"y\".getBytes()); //send in user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget edit d/500.50\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.setIn(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"You have set your new budget to be $500.50 every month.\", newUi.printToGui());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget list\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget is: $500.50\", newUi.printToGui());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand \u003d new BudgetCommand(false, \"budget savings s/12/2019\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetCommand.execute(newBudget, newCatList, newTransList, newUi, newStorage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your savings for DECEMBER 2019 is: \", newUi.printToGui());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 55
    }
  },
  {
    "path": "src/test/java/moomoo/task/BudgetTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class BudgetTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget(5000.50);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your budget is: $5000.50\", newBudget.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(5000.5, newBudget.getBudget());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newBudget.setBudget(700.45);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(700.45, newBudget.getBudget());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 18
    }
  },
  {
    "path": "src/test/java/moomoo/task/ParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Parser.parse(\"invalid input\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"moomoo.task.MooMooException: OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    e.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 20,
      "guanyewtan": 1
    }
  },
  {
    "path": "src/test/java/moomoo/task/StorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testFileLoad() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File tempFile \u003d File.createTempFile(\"moomoo\", \".txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        tempFile.deleteOnExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 13,
      "guanyewtan": 1
    }
  }
]
