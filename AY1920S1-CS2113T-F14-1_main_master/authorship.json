[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "group \u0027moomoo\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    mainClassName \u003d \"moomoo.MooMooLauncher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "sourceSets.main.resources.srcDirs \u003d[\u0027src/main/resources\u0027]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    dependsOn \u0027cleanTest\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveBaseName \u003d \"MooMooMoney\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    archiveVersion \u003d \"v1.3\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 7,
      "-": 34
    }
  },
  {
    "path": "src/main/java/moomoo/MooMoo.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Expenditure;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.SchedulePayment;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Runs MooMoo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMoo {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Category category;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private CategoryList categoryList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Budget budget;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private Expenditure expenditure;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleList calendar;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Initializes different Category, Expenditures, Budget, Storage and Ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public MooMoo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        storage \u003d new Storage(\"data/budget.txt\",\"data/schedule.txt\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                \"data/category.txt\", \"data/expenditure.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            categoryList \u003d new CategoryList(storage.loadCategories());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.printException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            categoryList \u003d new CategoryList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            category \u003d new Category(storage.loadExpenditures());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            ui.printExceptions(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            category \u003d new Category();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        HashMap\u003cString, Double\u003e loadedBudget \u003d storage.loadBudget(categoryList.getCategoryList(), ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (loadedBudget \u003d\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            budget \u003d new Budget(loadedBudget);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cSchedulePayment\u003e scheduleList \u003d storage.loadCalendar(ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (scheduleList \u003d\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            calendar \u003d new ScheduleList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            calendar \u003d new ScheduleList(scheduleList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ArrayList\u003cExpenditure\u003e category \u003d storage.loadExpenditures(ui);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (category \u003d\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            ui.showResponse();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            expenditure \u003d new Expenditure();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            expenditure \u003d new Expenditure(category);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the command line interface, reads input from user and returns result accordingly."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String date \u003d ui.showDate();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String todaySchedule \u003d calendar.showSchedule(date);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ui.setOutput(todaySchedule);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ui.showResponse();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand, ui);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                c.execute(calendar, budget, categoryList, category, ui, storage);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!ui.returnResponse().equals(\"\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    ui.showResponse();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "              "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (MooMooException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.showResponse();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns the response to the GUI when given an input by a user."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by user in the GUI"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String Response to display on GUI by the bot."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Command c \u003d Parser.parse(input, ui);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            c.execute(calendar, budget, categoryList, category, ui, storage);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (isExit) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.showGoodbye();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return ui.returnResponse();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return ui.returnResponse();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs MooMoo."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args Argument values given when running the program"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        new MooMoo().run();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 21,
      "Greatnest": 90,
      "guanyewtan": 1,
      "jinwentay": 12,
      "shannonlee98": 9,
      "-": 3
    }
  },
  {
    "path": "src/main/java/moomoo/MooMooLauncher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Launches the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMooLauncher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Runs the program either in GUI or CLI mode."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param args If appropriate argument is given, GUI will be launched."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        MooMoo.main(args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 16
    }
  },
  {
    "path": "src/main/java/moomoo/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the various commands to be executed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Command(boolean isExit, String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Executes necessary functions for each different command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget object containing the budget."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param catList CategoryList object containing the categories"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param category Category object containing the expenditures"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param ui Ui object for interaction with user interface."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param storage Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when error such as invalid input occurs"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public abstract void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Ui ui, Storage storage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throws MooMooException;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 1,
      "Greatnest": 33,
      "jinwentay": 3,
      "shannonlee98": 4
    }
  },
  {
    "path": "src/main/java/moomoo/command/EditBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Edits the budgets for respective categories."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class EditBudgetCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cDouble\u003e budgets;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the Edit budget command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to edit."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budgets List of budgets to change corresponding categories to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public EditBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories, ArrayList\u003cDouble\u003e budgets) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budgets \u003d budgets;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isUpdated \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.size(); ++i) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String categoryName \u003d categories.get(i).toLowerCase();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            double categoryBudget \u003d budgets.get(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (catList.get(categoryName) !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                double currentBudget \u003d budget.getBudgetFromCategory(categoryName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Budget for \" + categoryName + \" has not been set. Please set it first.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d categoryBudget) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"The budget for \" + categoryName + \" is the same.\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (categoryBudget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Please set your budget for \" + categoryName + \" to a value more than 0\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isUpdated \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                budget.addNewBudget(categoryName, categoryBudget);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d \"You have changed the budget for \" + categoryName"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \" from $\" + df.format(currentBudget) + \" to $\" + df.format(categoryBudget) + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d categoryName + \" category does not exist. Please add it first.\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (isUpdated) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 70,
      "shannonlee98": 3
    }
  },
  {
    "path": "src/main/java/moomoo/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the command to exit the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *               Value should be true in this class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ExitCommand(boolean isExit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 21,
      "guanyewtan": 2,
      "jinwentay": 2,
      "shannonlee98": 3
    }
  },
  {
    "path": "src/main/java/moomoo/command/GraphCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Expenditure;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class GraphCategoryCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String fullBlock \u003d \"H\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String halfBlock \u003d \"l\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String topBorder \u003d \"v\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String bottomBorder \u003d \"^\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisTop \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisBottom \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String categoryName \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private int month \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private int year \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Constructor requires the category for which to display the graph, and the respective date."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @param categoryName The name of the category that the user enters"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @param month        The user\u0027s desired month"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public GraphCategoryCommand(String categoryName, int month, int year) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        this.categoryName \u003d categoryName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public static double roundToTwoDp(double d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return Math.floor(d * 100) / 100;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Category category, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        Category cat;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            cat \u003d catList.get(categoryName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"OH NO! No such category exists!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (cat.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"OOPS!!! MooMoo cannot find any expenditure data :(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double grandTotal \u003d cat.getTotal(month, year);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int maxAxisUnit \u003d (int) ((cat.getLargestExpenditure() / grandTotal) * 100) + 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c maxAxisUnit; i +\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisTop +\u003d topBorder;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String topSpace \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c cat.getLongestExpenditure(); i +\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            topSpace +\u003d \" \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisTop + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c cat.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            String expenditureName \u003d cat.get(i).toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (expenditureName.length() \u003e 14) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                expenditureName \u003d expenditureName.substring(0, 11) + \"...\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d output + expenditureName;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int j \u003d 0; j \u003c (cat.getLongestExpenditure() - expenditureName.length() + 1); j +\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output +\u003d \" \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            Expenditure exp \u003d cat.get(i);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            double percentage \u003d 100 * (exp.getCost() / grandTotal);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfFullBars \u003d (int) percentage;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int j \u003d 0; j \u003c noOfFullBars; j++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + fullBlock;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfHalfBars \u003d (int) Math.round(percentage % 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (noOfHalfBars \u003d\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + halfBlock;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d output + \"  \" + roundToTwoDp(percentage) + \"%\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisBottom + \"\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ui.setOutput(output);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 90,
      "jinwentay": 3,
      "shannonlee98": 3
    }
  },
  {
    "path": "src/main/java/moomoo/command/GraphTotalCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "public class GraphTotalCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String fullBlock \u003d \"H\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String halfBlock \u003d \"l\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String topBorder \u003d \"v\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private final String bottomBorder \u003d \"^\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisTop \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String horizontalAxisBottom \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private String output \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public GraphTotalCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public static double roundToTwoDp(double d) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return Math.floor(d * 100) / 100;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                        Category category, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (catList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"OOPS!!! MooMoo cannot find any category data :(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double grandTotal \u003d catList.getTotal();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (grandTotal \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            grandTotal \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int maxAxisUnit \u003d (int) ((catList.getLargestExpenditure(LocalDate.now().getMonthValue()) / grandTotal) * 100);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c maxAxisUnit; i +\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisTop +\u003d topBorder;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            horizontalAxisBottom +\u003d bottomBorder;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String topSpace \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c catList.getLongestCategory(); i +\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            topSpace +\u003d \" \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisTop + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c catList.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            Category cat \u003d catList.get(i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            double percentage \u003d 100 * (cat.getTotal() / grandTotal);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            percentage \u003d roundToTwoDp(percentage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            String categoryName \u003d catList.get(i).toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (categoryName.length() \u003e 14) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                categoryName \u003d categoryName.substring(0, 11) + \"...\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d output + categoryName;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int j \u003d 0; j \u003c (catList.getLongestCategory() - categoryName.length() + 1); j +\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output +\u003d \" \";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfFullBars \u003d (int) percentage;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            for (int j \u003d 0; j \u003c noOfFullBars; j +\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + fullBlock;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            int noOfHalfBars \u003d (int) Math.round(percentage % 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (noOfHalfBars \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                output \u003d output + halfBlock;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            output \u003d output + \"  \" + percentage + \"%\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        output +\u003d topSpace + horizontalAxisBottom + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        ui.setOutput(output);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "guanyewtan": 77,
      "shannonlee98": 6
    }
  },
  {
    "path": "src/main/java/moomoo/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category, Ui ui,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ui.showHelp();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 24
    }
  },
  {
    "path": "src/main/java/moomoo/command/ListBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Lists the budget for respective categories."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ListBudgetCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the command to list the set budgets."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to list the budgets for."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ListBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double currentBudget \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (categories.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int i \u003d 0; i \u003c catList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String categoryName \u003d catList.getCategoryList().get(i).toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                currentBudget \u003d budget.getBudgetFromCategory(categoryName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Budget for \" + categoryName + \" has not been set\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d \"Budget for \" + categoryName + \" is $\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + df.format(currentBudget) + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.size(); ++i) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String categoryName \u003d categories.get(i).toLowerCase();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (catList.get(categoryName) !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                currentBudget \u003d budget.getBudgetFromCategory(categoryName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Budget for \" + categoryName + \" has not been set.\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d \"Budget for \" + categoryName + \" is $\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + df.format(currentBudget) + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d categoryName + \" category does not exist. Please add it first.\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 64,
      "shannonlee98": 5
    }
  },
  {
    "path": "src/main/java/moomoo/command/MainDisplayCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.MainDisplay;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class MainDisplayCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Command that takes in a month and year from parser to be converted into int."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param month Month that the user wants to view a summary of."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param year Year that the user wants to view a summary of."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public MainDisplayCommand(int month, int year) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Executes a MainDisplay Command when called."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param calendar ScheduleList object containing the schedules."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param budget Budget object containing the budget."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList CategoryList object containing the categories."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param category Category object containing the expenditures"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param ui Ui object for interaction with user interface."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param storage Storage object for interaction with filesystem."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws MooMooException Thrown when error such as invalid input occurs"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList, Category category,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        MainDisplay newMainDisplay \u003d new MainDisplay();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int rows \u003d newMainDisplay.getCatListSize(categoryList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int cols \u003d newMainDisplay.getMaxCatSize(categoryList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d newMainDisplay.toPrint(month,year,rows,cols,categoryList,budget);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ui.printMainDisplay(output);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 43,
      "shannonlee98": 2
    }
  },
  {
    "path": "src/main/java/moomoo/command/NotificationCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class NotificationCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private String cat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private double expenditure;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Alerts user if user exceeded the budget."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param cat The name of the category that user just added his expenditure to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param expenditure The total current expenditure of that category."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public NotificationCommand(String cat, double expenditure) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.cat \u003d cat;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.expenditure \u003d expenditure;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String alert \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (expenditure \u003e budget.getBudgetFromCategory(cat)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            alert \u003d \"You have exceeded your budget of \" + budget.getBudgetFromCategory(cat) + \" for \" + cat + \"!\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (expenditure \u003d\u003d budget.getBudgetFromCategory(cat)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            alert \u003d \"You have reached your budget limit of \" + budget.getBudgetFromCategory(cat) + \".\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (expenditure \u003e budget.getBudgetFromCategory(cat) * 0.9) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            alert \u003d \"You are reaching your budget limit of \" + budget.getBudgetFromCategory(cat) + \" for \" + cat"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    + \".\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        double balance \u003d budget.getBudgetFromCategory(cat) - expenditure;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ui.setOutput(alert + \"Budget remaining \u003d \" + balance);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 39,
      "shannonlee98": 2
    }
  },
  {
    "path": "src/main/java/moomoo/command/SavingsBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * View the savings for respective categories."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class SavingsBudgetCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDate start;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDate end;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the Savings Command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to view savings for."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param startPeriod Start period consisting of month and year."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param endPeriod End period consisting of month and year."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public SavingsBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                LocalDate startPeriod, LocalDate endPeriod) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.start \u003d startPeriod;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.end \u003d endPeriod;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String[] outputArray;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalSavings \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (categories.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int i \u003d 0; i \u003c catList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                categories.add(catList.getCategoryList().get(i).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (String iteratorCategory : categories) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            iteratorCategory \u003d iteratorCategory.toLowerCase();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Category currentCategory \u003d catList.get(iteratorCategory);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (currentCategory \u003d\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d iteratorCategory + \" category does not exist.\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \" Please create it first.\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (budget.getBudgetFromCategory(iteratorCategory.toLowerCase()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d \"The budget for \" + iteratorCategory + \" does not exist.\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \" Please set it using budget set.\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (end \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputArray \u003d viewSingleMonthSavings(budget, iteratorCategory, currentCategory, outputValue);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d outputArray[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputArray \u003d viewMultiMonthSaving(budget, iteratorCategory, currentCategory, outputValue);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue \u003d outputArray[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            totalSavings +\u003d Double.parseDouble(outputArray[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (totalSavings \u003e 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue +\u003d \"Your total savings: $\" + df.format(totalSavings) + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (totalSavings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue +\u003d \"Your total savings : $0\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputValue +\u003d \"You have overspent your total budget by: $\" + df.format(Math.abs(totalSavings)) + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String[] viewSingleMonthSavings(Budget budget, String iteratorCategory,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                            Category currentCategory, String outputVal) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalSavings \u003d 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String output \u003d outputVal;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double savings \u003d budget.getBudgetFromCategory(iteratorCategory)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                - currentCategory.getTotal(start.getMonthValue(), start.getYear());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        totalSavings +\u003d savings;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (savings \u003e 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            output +\u003d \"Your savings for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \" \" + start.getYear() + \" is: $\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + df.format(savings)  + \"\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (savings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            output +\u003d \"Your savings for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \" \" + start.getYear() + \" is: $0\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            output +\u003d \"You have overspent your budget for \" + iteratorCategory + \" for \" + start.getMonth()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \" \" + start.getYear() + \" by $\" + df.format(Math.abs(savings)) + \"\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new String[]{output, Double.toString(totalSavings)};"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String[] viewMultiMonthSaving(Budget budget, String iteratorCategory,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                                          Category currentCategory, String outputVal) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int numberOfMonths \u003d 0;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int numberOfYears \u003d end.getYear() - start.getYear();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalExpenditure \u003d 0;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalSavings \u003d 0;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String output \u003d outputVal;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (numberOfYears \u003e 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            int startMonthValue \u003d start.getMonthValue();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            int endMonthValue \u003d 12;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int currentYear \u003d start.getYear(); currentYear \u003c\u003d end.getYear(); ++currentYear) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (int currentMonth \u003d startMonthValue; currentMonth \u003c\u003d endMonthValue; ++currentMonth) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    ++numberOfMonths;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    totalExpenditure +\u003d currentCategory.getTotal(currentMonth, currentYear);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                startMonthValue \u003d 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (currentYear \u003d\u003d end.getYear() - 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    endMonthValue \u003d end.getMonthValue();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            numberOfMonths \u003d end.getMonthValue() - start.getMonthValue() + 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            for (int i \u003d start.getMonthValue(); i \u003c end.getMonthValue() + 1; ++i) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                totalExpenditure +\u003d currentCategory.getTotal(i, start.getYear());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double savings \u003d (numberOfMonths * budget.getBudgetFromCategory(iteratorCategory))"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                - totalExpenditure;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        totalSavings +\u003d savings;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (savings \u003e 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            output +\u003d \"Your savings for \" + iteratorCategory + \" from \" + start.getMonth() + \" \""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + start.getYear() + \" to \""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + end.getMonth() + \" \" + end.getYear() + \" is: $\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + df.format(savings)  + \"\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (savings \u003d\u003d 0) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            output +\u003d \"Your savings for \" + iteratorCategory + \" from \" + start.getMonth() + \" \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + start.getYear() + \" to \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + end.getMonth() + \" \" + end.getYear() + \" is: $0\\n\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }  else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            output +\u003d \"You have overspent for your budget for \" + iteratorCategory + \" from \""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + start.getMonth() + \" \" + start.getYear() + \" to \""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + end.getMonth() + \" \" + end.getYear() + \" by: $\" + df.format(Math.abs(savings)) + \"\\n\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new String[]{output, Double.toString(totalSavings)};"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 153,
      "shannonlee98": 8
    }
  },
  {
    "path": "src/main/java/moomoo/command/ScheduleCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.SchedulePayment;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": " * Represents the command to create a scheduled payment event in advance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class ScheduleCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Takes in a flag to represent if it should exit and the input given by the User."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param isExit True if the program should exit after running this command, false otherwise"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param input Input given by the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (input.length() \u003c 8) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"OOPS!!! To create a schedule payment, \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    + \"please indicate the d/\u003cdate in dd/mm/yyyy\u003e a/\u003camount\u003e n/\u003cdescription of payment\u003e.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        input \u003d input.substring(8);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        if (!input.contains(\"d/\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Please indicate the scheduled date using d/\u003cdd/mm/yy\u003e\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (!input.contains(\"a/\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Please indicate the amount to be paid using a/\u003camount\u003e\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } else if (!input.contains(\"n/\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"OOPS!!! Please indicate the type of payment using n/\u003cdescription of payment\u003e\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        add scheduled tasks on a particular date to a list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "         */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String[] arr \u003d input.split(\" \", 4);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        task \u003d arr[3];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        date \u003d arr[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        date \u003d date.replace(\"d/\", \"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String amount;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        amount \u003d arr[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        task \u003d task.replace(\"n/\", \"\") + \" \" + amount.replace(\"a/\", \"\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        SchedulePayment newTask \u003d new SchedulePayment(date, task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        calendar.addToCalendar(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ui.setOutput(\"You have scheduled a payment on \" + date + \" for \" + task + \" dollars.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        storage.saveScheduleToFile(calendar);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 56,
      "shannonlee98": 2
    }
  },
  {
    "path": "src/main/java/moomoo/command/SetBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Sets the budget for respective categories."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class SetBudgetCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cString\u003e categories;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cDouble\u003e budgets;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the set budget command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param isExit Boolean variable to determine if program should exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categories List of categories to set the budget for."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budgets List of budgets to set the corresponding categories to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public SetBudgetCommand(boolean isExit, ArrayList\u003cString\u003e categories, ArrayList\u003cDouble\u003e budgets) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categories \u003d categories;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budgets \u003d budgets;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputValue \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isUpdated \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c categories.size(); ++i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String categoryName \u003d categories.get(i).toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            double categoryBudget \u003d budgets.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (catList.get(categoryName) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (categoryBudget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    outputValue +\u003d \"Please set your budget for \" + categoryName + \" to a value more than 0\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isUpdated \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                budget.addNewBudget(categoryName, categoryBudget);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d \"You have set $\" + df.format(categoryBudget) + \" as the budget for \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + categoryName + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputValue +\u003d categoryName + \" category does not exist. Please add it first.\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.setOutput(outputValue);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (isUpdated) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            storage.saveBudgetToFile(budget);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 62,
      "shannonlee98": 2
    }
  },
  {
    "path": "src/main/java/moomoo/command/TotalCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class TotalCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public TotalCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList catList, Category category,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        catList.list(ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ui.showEnterCategoryMessage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int cat \u003d ui.readNumber() - 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ui.showEnterMonthMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int month \u003d ui.readNumber();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double monthlyTotal \u003d catList.get(cat).getTotal(month);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ui.showMonthlyTotal(monthlyTotal, catList.get(cat), month);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 2,
      "Greatnest": 1,
      "jinwentay": 3,
      "shannonlee98": 22
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/AddCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class AddCategoryCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Command that takes in a category name from the Parser as string to be converted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryName Category name to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public AddCategoryCommand(String categoryName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, categoryName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList, Category category,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category newCategory \u003d new Category(input.toLowerCase());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (categoryList.hasCategory(input)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"You already have a category named \" + input + \".\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.add(newCategory);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            storage.saveCategoryToFile(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ui.showNewCategoryMessage(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 4,
      "jinwentay": 1,
      "shannonlee98": 30
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/AddExpenditureCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.NotificationCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Expenditure;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class AddExpenditureCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String categoryName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String expenditureName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Command that takes in the amount of money spent and the expenditure name and date under which category from the"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Parser as strings to be converted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param expenditureName Name of the expenditure spent on. (e.g. Chicken Rice)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param amount          Amount spend on the expenditure."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param date            Date of the spending."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryName    Category that the expenditure is being spent on. (e.g. Food)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public AddExpenditureCommand(String expenditureName, double amount, LocalDate date, String categoryName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.categoryName \u003d categoryName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.expenditureName \u003d expenditureName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList, Category category,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Category cat \u003d categoryList.get(categoryName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Expenditure newExpenditure \u003d new Expenditure(expenditureName, amount, date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        cat.add(newExpenditure);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        NotificationCommand alert \u003d new NotificationCommand(categoryName, cat.getTotal());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        alert.execute(calendar, budget, categoryList, category, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        storage.saveExpenditureToFile(newExpenditure, categoryName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        ui.showNewExpenditureMessage(expenditureName, categoryName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 40,
      "jinwentay": 2,
      "shannonlee98": 9
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/DeleteCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class DeleteCategoryCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public DeleteCategoryCommand(String categoryName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, categoryName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList, Category category,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Ui ui, Storage storage) throws MooMooException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            storage.deleteCategoryFromFile(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.delete(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ui.showRemovedCategoryMessage(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Please enter a valid category name.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 1,
      "shannonlee98": 29
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/DeleteExpenditureCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class DeleteExpenditureCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 1,
      "shannonlee98": 4
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/ListCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class ListCategoryCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ListCategoryCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, \"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList, Category category,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.list(ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 1,
      "jinwentay": 2,
      "shannonlee98": 18
    }
  },
  {
    "path": "src/main/java/moomoo/command/category/SortCategoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.command.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class SortCategoryCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public SortCategoryCommand(String sortBy) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(false, sortBy);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void execute(ScheduleList calendar, Budget budget, CategoryList categoryList, Category category, Ui ui,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (input.startsWith(\"by name\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.sortByName();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (input.startsWith(\"by cost\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.sortByValue();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (input.startsWith(\"by date\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList.sortByTime();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 28
    }
  },
  {
    "path": "src/main/java/moomoo/task/Budget.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Holds a map for the budget for each category."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private HashMap\u003cString, Double\u003e categoryBudgets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private double totalBudget;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes values to default values if no previous budget information is found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes DecimalFormat to force doubles to display with 2 decimal places."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets \u003d new HashMap\u003cString, Double\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.totalBudget \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Takes in budget set by user and set budget variable."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes DecimalFormat to force doubles to display with 2 decimal places."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Budget(HashMap\u003cString, Double\u003e newBudget) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets \u003d newBudget;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.totalBudget \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String returnVal \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Iterator budgetIterator \u003d categoryBudgets.entrySet().iterator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (budgetIterator.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Map.Entry mapElement \u003d (Map.Entry) budgetIterator.next();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            returnVal +\u003d \"Your budget for \" + mapElement.getKey() + \" is: $\" + df.format(mapElement.getValue()) + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return returnVal;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toStringCategory(String category) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return \"Your budget for \" + category + \" is: $\" + df.format(this.categoryBudgets.get(category)) + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns budget from corresponding category."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param category Category to get budget from."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return The budget of the given category."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getBudgetFromCategory(String category) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (this.categoryBudgets.containsKey(category)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return this.categoryBudgets.get(category);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Adds budget to the HashMap and re-adds to total budget if budget is changed or added."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param category Category to which the budget was set"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget to set for the corresponding category"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void addNewBudget(String category, double budget) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (this.categoryBudgets.containsKey(category)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            totalBudget -\u003d this.categoryBudgets.get(category);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.categoryBudgets.put(category, budget);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        totalBudget +\u003d budget;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public HashMap\u003cString, Double\u003e getBudget() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.categoryBudgets;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public int getBudgetSize() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.categoryBudgets.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getTotalBudget() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.totalBudget;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 90
    }
  },
  {
    "path": "src/main/java/moomoo/task/MainDisplay.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "public class MainDisplay {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //private final String TOP_BORDER_NEW_COLUMN \u003d \"-------------.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String TOP_BORDERLEFT \u003d \".-------------------.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String TOP_BORDERRIGHT \u003d \"-----------------------------------------------------------------\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"-------------------------.-------------.-------------.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String BORDER_LEFT \u003d \"|                   |\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String BORDER_RIGHT \u003d \"              |                        |                |\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"                   |\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String MONTH_LEFT \u003d \"|Month: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String YEAR_LEFT \u003d \"|Year: \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String BUDGET_LEFT \u003d \"|Budget: \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String SAVINGS_LEFT \u003d \"|Savings: \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String COLUMN_TITLES \u003d \" \u003c\" + ANSI_BLUE + \"Categories\" + ANSI_RESET"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"\u003e |                         \" + \"       \u003c\" + ANSI_CYAN + \"Amount\" + ANSI_RESET + \"\u003e                    \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + \"               |   \u003c\" + ANSI_PURPLE + \"Budget\" + ANSI_RESET + \"\u003e  |  \u003c\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            + ANSI_YELLOW + \"Savings\" + ANSI_RESET + \"\u003e  |\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public MainDisplay() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public int getCatListSize(CategoryList categoryList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int catNum \u003d categoryList.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return catNum;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Returns the current maximum category size in the categoryList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList The CategoryList containing all the categories."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return the maximum category size."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public int getMaxCatSize(CategoryList categoryList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int maxCatSize \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 0; i \u003c categoryList.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int newCatSize \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int j \u003d 0; j \u003c categoryList.get(i).size(); j++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                newCatSize +\u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (newCatSize \u003e\u003d maxCatSize) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                maxCatSize \u003d newCatSize;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return maxCatSize;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String[] monthsInYear \u003d {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"January\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"February\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"March\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"April\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"May\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"June\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"July\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"August\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"September\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"October\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"November\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        \"December\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    };"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpace \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceCat \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceExp \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceBud \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String blankSpaceSav \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Function to that takes in all the inputs and converts them into output to be displayed on the main display panel."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param month        Month to be shown."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param year         Year to be shown."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param rows         Number of rows in the panel."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param cols         Number of columns in the panel."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param categoryList CategoryList to be passed into the function."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param budget       Budget to be passed into the function."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @return a string corresponding to the final output that is being displayed."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toPrint(int month, int year, int rows, int cols, CategoryList categoryList, Budget budget) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        int expGap \u003d 76;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (cols !\u003d 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            expGap \u003d (76 / cols) - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String output \u003d TOP_BORDERLEFT + TOP_BORDERRIGHT;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int i \u003d 0; i \u003c\u003d 11 - monthsInYear[month - 1].length(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            blankSpace +\u003d \" \";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        output +\u003d MONTH_LEFT + monthsInYear[month - 1] + blankSpace + \"|\" + COLUMN_TITLES;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        blankSpace \u003d \"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        output +\u003d YEAR_LEFT + year + \"         |\" + TOP_BORDERRIGHT;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        for (int row \u003d 0; row \u003c rows; row++) {             // Run this loop once for each Category"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            blankSpaceCat \u003d \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int j \u003d 0; j \u003c 14 - categoryList.get(row).toString().length(); j++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                blankSpaceCat +\u003d \" \";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (row \u003d\u003d 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                //output +\u003d BUDGET_LEFT + \"$\" + \"budget\" + \"    \" + \"|\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d BORDER_LEFT;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d BORDER_LEFT;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            output +\u003d categoryList.get(row).toString() + blankSpaceCat + \"|\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int col \u003d 0; col \u003c categoryList.get(row).size(); col++) {   // Run this loop once for each expenditure"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                blankSpaceExp \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int k \u003d 0; k \u003c (expGap - categoryList.get(row).get(col).getLength() - 1); k++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceExp +\u003d \" \";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"$\" + categoryList.get(row).get(col).getCostString() + blankSpaceExp + \"|\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int col1 \u003d 0; col1 \u003c cols - categoryList.get(row).size(); col1++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                blankSpaceExp \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int l \u003d 0; l \u003c expGap; l++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceExp +\u003d \" \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d blankSpaceExp + \"|\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (cols \u003d\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                blankSpaceExp \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int l \u003d 0; l \u003c (expGap - 1); l++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceExp +\u003d \" \";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d blankSpaceExp + \"|\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            double bud \u003d 0.0;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (budget.getBudgetFromCategory(categoryList.get(row).toString()) !\u003d 0.0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                bud \u003d budget.getBudgetFromCategory(categoryList.get(row).toString());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                blankSpaceBud \u003d \"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String budgetStr \u003d Double.toString(budget.getBudgetFromCategory(categoryList.get(row).toString()));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int k \u003d 0; k \u003c 13 - budgetStr.length(); k++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceBud +\u003d \" \";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d budgetStr + blankSpaceBud + \"|\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"             |\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            double tot \u003d categoryList.get(row).getTotal();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            double sav \u003d bud - tot;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (sav !\u003d 0.0) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                blankSpaceSav \u003d \"\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                String savingStr \u003d Double.toString(sav);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                for (int h \u003d 0; h \u003c 13 - savingStr.length(); h++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    blankSpaceSav +\u003d \" \";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d savingStr + blankSpaceSav + \"|\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"             |\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (row \u003d\u003d rows - 1) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + TOP_BORDERLEFT + TOP_BORDERRIGHT;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else if (row \u003d\u003d 0) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                //output +\u003d \"\\n\" + SAVINGS_LEFT + \"$\" + \"savings\" + \"  \" + \"|\" + TOP_BORDER_RIGHT;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + BORDER_LEFT + TOP_BORDERRIGHT;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                output +\u003d \"\\n\" + BORDER_LEFT + TOP_BORDERRIGHT;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        //output +\u003d BORDER_LEFT + BORDER_RIGHT;               // Testing"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void monthSummaryDisplay() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static final String DEFAULT \u003d"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            \".------------------.--------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|Month:            | \u003cCategories\u003e |        \u003cAmount\u003e        |    \u003cBudget\u003e   |     \u003cTotal\u003e     |\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|Year:             |-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|Budget:           |Food          |     |      |     |     |     $50.0     |      $150.0     |\\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|Savings:          |-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |Transport     |     |      |     |     |               |                 |\\n\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |Entertainment |     |      |     |     |               |                 |\\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |              |     |      |     |     |               |                 |\\n\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |              |     |      |     |     |               |                 |\\n\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |              |     |      |     |     |               |                 |\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"|                  |              |     |      |     |     |               |                 |\\n\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \".------------------.-------------------------------------------------------------------------.\\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"\\n\";         // Testing Final Output Appearance AND default table"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 210,
      "shannonlee98": 3
    }
  },
  {
    "path": "src/main/java/moomoo/task/MooMooException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents Exceptions that are dedicated to Duke functions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MooMooException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public MooMooException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 10
    }
  },
  {
    "path": "src/main/java/moomoo/task/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.GraphCategoryCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.GraphTotalCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.EditBudgetCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.ListBudgetCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.SavingsBudgetCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.ScheduleCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.TotalCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.AddCategoryCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.AddExpenditureCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.DeleteCategoryCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.ListCategoryCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryParser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.command.MainDisplayCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Takes in a string and parses it to return a valid command to be ran."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Takes in input from user and returns a command based on the input given. All parsing of input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * should be done here including separating a line of command into parts for each command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param input String given by the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param ui    MooMoo\u0027s ui"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return The command object corresponding to the user input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when an invalid input is given"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static Command parse(String input, Ui ui) throws MooMooException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        Scanner scanner \u003d new Scanner(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String commandType \u003d scanner.next();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ExitCommand(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"budget\"):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return parseBudget(scanner);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"schedule\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ScheduleCommand(false, input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"add\"):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return parseAdd(scanner, ui);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"delete\"):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return parseDelete(scanner, ui);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"sort\"):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return CategoryParser.parseSort(scanner, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new ListCategoryCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"graph\"):"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return parseGraph(scanner);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case (\"total\"):"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new TotalCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        case (\"help\"):"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        case (\"view\"):"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            return parseView(scanner, ui);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    private static Command parseGraph(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"Try adding c/[CATEGORY] d/[MONTH] or \\\"total\\\"!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        if (input.equals(\"total\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            return new GraphTotalCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            String inputCategory \u003d input.substring(2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                if (input.startsWith(\"d/\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    String inputDate \u003d input.substring(2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    if (!inputDate.equals(\"\") \u0026\u0026 0 \u003c Integer.parseInt(inputDate) \u0026\u0026 Integer.parseInt(inputDate) \u003c 13) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                        return new GraphCategoryCommand(inputCategory,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                                Integer.parseInt(inputDate),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                                LocalDate.now().getYear());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                        throw new MooMooException(\"Month must be from 1 to 12 (inclusive)!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                    throw new MooMooException(\"Please enter in this format: d/[MONTH]\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                return new GraphCategoryCommand(inputCategory,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                        LocalDate.now().getMonthValue(),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                        LocalDate.now().getYear());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            throw new MooMooException(\"Please enter in this format: c/[CATEGORY]\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseDelete(Scanner scanner, Ui ui) throws MooMooException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d \"What do you wish to delete?\" + \"\\n(c/) category\" + \"\\n(n/) expenditure\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String input \u003d parseInput(scanner, ui, text);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String categoryName \u003d removeSuffix(input);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return new DeleteCategoryCommand(categoryName);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                throw new MooMooException(\"Try a command like delete c/[Category Number]\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        throw new MooMooException(\"Sorry I did not recognize that command.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private static Command parseView(Scanner scanner, Ui ui) throws MooMooException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String text \u003d \"Which month\u0027s summary do you wish to view?\" + \"(m/) month\" + \"(y/) year\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        String input \u003d parseInput(scanner, ui, text);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        LocalDate now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        if (input.startsWith(\"m/\") || input.startsWith(\"y/\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int month \u003d now.getMonthValue();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int year \u003d now.getYear();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            String[] tokens \u003d input.split(\"/|\\\\s+\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int tokenCount \u003d tokens.length;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int i \u003d 0; i \u003c tokenCount; i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (tokens[i].equals(\"m\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    month \u003d Integer.parseInt(tokens[i + 1]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (tokens[i].equals(\"y\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    year \u003d Integer.parseInt(tokens[i + 1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (month !\u003d 0 \u0026\u0026 year !\u003d 0) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                return new MainDisplayCommand(month, year);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else if (input.equals(\"current\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int month \u003d now.getMonth().getValue();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int year \u003d now.getYear();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            return new MainDisplayCommand(month, year);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        throw new MooMooException(\"Sorry i did not recognize that command.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static Command parseAdd(Scanner scanner, Ui ui) throws MooMooException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d \"What do you wish to add?\" + \"\\n(c/) category\" + \"\\n(n/) expenditure\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String input \u003d parseInput(scanner, ui, text);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String categoryName \u003d removeSuffix(input);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (!categoryName.isBlank()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return new AddCategoryCommand(categoryName);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            throw new MooMooException(\"Try a command like add c/[Category Name]\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            String categoryName \u003d \"\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            String expenditureName \u003d \"\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            Double amount \u003d 0.0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            String[] tokens \u003d input.split(\"/|\\\\s+\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            int tokenCount \u003d tokens.length;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            for (int i \u003d 0; i \u003c tokenCount; i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                if (tokens[i].equals(\"c\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    categoryName \u003d tokens[i + 1];"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (tokens[i].equals(\"n\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    expenditureName \u003d tokens[i + 1];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (tokens[i].equals(\"a\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    amount \u003d Double.parseDouble(tokens[i + 1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                } else if (tokens[i].equals(\"d\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    date \u003d LocalDate.parse(tokens[i + 1]);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (!categoryName.isBlank() \u0026\u0026 !expenditureName.isBlank() \u0026\u0026 !amount.equals(0.0)) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                return new AddExpenditureCommand(expenditureName, amount, date, categoryName);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            throw new MooMooException(\"Try a command like add n/[Expenditure Name] a/[Amount] d/[Date] \""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    + \"c/[Category Name]\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String removeSuffix(String noSpaceInput) throws MooMooException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryName;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryName \u003d noSpaceInput.substring(2).trim();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Please enter a category after the /\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryName;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String parseInput(Scanner scanner, Ui ui, String text) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ui.showInputPrompt(text);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command parseBudget(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"There is only edit/set/list/savings command under budget.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"set\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return setOrEditBudget(scanner, false);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return setOrEditBudget(scanner, true);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return listBudget(scanner);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        case \"savings\":"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return savingsBudget(scanner);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"There is only edit/set/list/savings command under budget.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command setOrEditBudget(Scanner scanner, boolean isEdit) throws MooMooException {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isNewCategory \u003d false;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (isNewCategory) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        categories.add(inputCategory);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    isNewCategory \u003d false;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory \u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isNewCategory \u003d true;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (input.startsWith(\"b/\")) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                double budget \u003d 0;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    budget \u003d Double.parseDouble(input.substring(2));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (budget \u003c\u003d 0) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        throw new MooMooException(\"Please insert a number larger than 0 for the budget\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please insert a number larger than 0 for the budget\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                categories.add(inputCategory);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                budgets.add(budget);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (categories.size() \u003e budgets.size()) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    budgets.add(budget);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory +\u003d \" \" + input;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (categories.size() \u003d\u003d 0 || budgets.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"You have entered the command wrongly. \""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (isEdit) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new EditBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command listBudget(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ListBudgetCommand(false, categories);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory \u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory +\u003d \" \" + input;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please input in this format \\\"c/CATEGORY\\\"\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new ListBudgetCommand(false, categories);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static Command savingsBudget(Scanner scanner) throws MooMooException {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please input in this format \\\"c/CATEGORY s/STARTMONTHYEAR e/ENDMONTHYEAR\\\"\\n\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String startMonth \u003d \"\";"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String endMonth \u003d \"\";"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (input.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                inputCategory +\u003d input.substring(2).toLowerCase();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (input.startsWith(\"s/\")) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    categories.add(inputCategory);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory \u003d \"\";"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(startMonth)) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please only set 1 starting period.\\n\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                startMonth \u003d input.substring(2);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (input.startsWith(\"e/\")) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(endMonth)) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    throw new MooMooException(\"Please only set 1 ending period.\\n\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                endMonth \u003d input.substring(2);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                "
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (!\"\".equals(inputCategory)) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    inputCategory +\u003d \" \" + input;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new MooMooException(\"Please input in this format \\\"c/CATEGORY \""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        + \"s/STARTMONTHYEAR e/ENDMONTHYEAR\\\"\\n\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            "
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                input \u003d scanner.next();"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (\"\".equals(startMonth)) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate startDate \u003d parseMonth(startMonth);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate endDate \u003d parseMonth(endMonth);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (startDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (!\"\".equals(endMonth) \u0026\u0026 endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Please set an end month and year in this format \\\"e/01/2019\\\"\\n\");"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        "
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return new SavingsBudgetCommand(false, categories, startDate, endDate);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static LocalDate parseMonth(String inputDate) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String fullDate \u003d \"01/\" + inputDate;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return LocalDate.parse(fullDate, formatter);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 54,
      "Greatnest": 245,
      "guanyewtan": 38,
      "shannonlee98": 76
    }
  },
  {
    "path": "src/main/java/moomoo/task/ScheduleList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class ScheduleList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ArrayList\u003cSchedulePayment\u003e fullSchedule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.fullSchedule \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public ScheduleList(ArrayList\u003cSchedulePayment\u003e loadedSchedule) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.fullSchedule \u003d loadedSchedule;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void addToCalendar(SchedulePayment list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        fullSchedule.add(list);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Returns list of scheduled payments due today."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @param date Pass in today\u0027s date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @return a list of scheduled payments due today."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String showSchedule(String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String output \u003d \"Outstanding Payment:\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (SchedulePayment p : fullSchedule) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            if (date.equals(p.date)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                output +\u003d (p.tasks + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 35
    }
  },
  {
    "path": "src/main/java/moomoo/task/SchedulePayment.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "public class SchedulePayment {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public SchedulePayment(String date, String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.tasks \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jinwentay": 12
    }
  },
  {
    "path": "src/main/java/moomoo/task/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Expenditure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Handles storage and retrieval of the tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private DecimalFormat df;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String budgetFilePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    private String scheduleFilePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String categoryFilePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String expenditureFilePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes empty Storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes storage and the filepath for each file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budgetFilePath File path to store the budget into."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param scheduleFilePath File path to store all categories"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Storage(String budgetFilePath, String scheduleFilePath, String categoryFilePath,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                   String expenditureFilePath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.budgetFilePath \u003d budgetFilePath;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        this.scheduleFilePath \u003d scheduleFilePath;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryFilePath \u003d categoryFilePath;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.expenditureFilePath \u003d expenditureFilePath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        df \u003d new DecimalFormat(\"#.00\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in categories from an existing file into a created ArrayList object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return ArrayList object consisting of the categories read from the file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException Thrown when the file does not exist"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cCategory\u003e loadCategories() throws MooMooException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cCategory\u003e categoryArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            File myNewFile \u003d new File(categoryFilePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (myNewFile.createNewFile()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return populateDefaultCategories(categoryArrayList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(this.categoryFilePath));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                Category newCategory \u003d new Category(\"misc\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                for (String s : input) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    if (s.startsWith(\"c/\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        newCategory \u003d new Category(s.replace(\"c/\", \"\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        categoryArrayList.add(newCategory);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    } else if (categoryArrayList.isEmpty()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        categoryArrayList.add(newCategory);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                        saveCategoryToFile(\"misc\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return categoryArrayList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to read file. Please retry again.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a populated array of default categories."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryArrayList category list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return populated category list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException throws exception if file cannot be found"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private ArrayList\u003cCategory\u003e populateDefaultCategories(ArrayList\u003cCategory\u003e categoryArrayList)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throws MooMooException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryArrayList.add(new Category(\"misc\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryArrayList.add(new Category(\"food\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryArrayList.add(new Category(\"transportation\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryArrayList.add(new Category(\"bills\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveCategoryToFile(\"misc\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveCategoryToFile(\"food\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveCategoryToFile(\"transportation\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        saveCategoryToFile(\"bills\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryArrayList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Loads in budgetFile not found. New file will be created from an existing file into a created HashMap object."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return HashMap object consisting of the categories and corresponding budget read from file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public HashMap\u003cString, Double\u003e loadBudget(ArrayList\u003cCategory\u003e catList, Ui ui) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (Files.isRegularFile(Paths.get(this.budgetFilePath))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                HashMap\u003cString, Double\u003e loadedBudgets \u003d new HashMap\u003cString, Double\u003e();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                List\u003cString\u003e readInput \u003d Files.readAllLines(Paths.get(this.budgetFilePath));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String category \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                double budget \u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (int i \u003d 0; i \u003c readInput.size(); ++i) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (i % 2 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (!\"\".equals(category)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            budget \u003d Double.parseDouble(readInput.get(i));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            loadedBudgets.put(category, budget);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        category \u003d \"\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (isInCategoryList(catList, readInput.get(i))) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            category \u003d readInput.get(i);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return loadedBudgets;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(\"Budget File not found. New file will be created\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.setOutput(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Loads scheduled payments from file into an ArrayList object."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * @return ArrayList object consisting of the scheduled payments read from the file"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cSchedulePayment\u003e loadCalendar(Ui ui) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        ArrayList\u003cSchedulePayment\u003e scheduleArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            if (Files.isRegularFile(Paths.get(this.scheduleFilePath))) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(this.scheduleFilePath));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                for (String s : input) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    if (s.startsWith(\"d/\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String[] splitInput \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String date \u003d splitInput[0].replace(\"d/\",\"\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        String task \u003d splitInput[1].replace(\"n/\", \"\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        SchedulePayment day \u003d new SchedulePayment(date, task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                        scheduleArray.add(day);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "                return scheduleArray;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.setOutput(\"Schedule File not found. New file will be created\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.setOutput(\"Unable to read file. Please retry again.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Creates the directory and file as given by the file path initialized in the constructor."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private void createFileAndDirectory(String filePath) throws MooMooException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            File myNewFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            myNewFile.createNewFile();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to create file. Please restart the program\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a file if necessary and stores each category and its budget into the file."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param category Budget object that stores the budget for each category"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException thrown if file cannot be written to."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void deleteCategoryFromFile(String category) throws MooMooException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            List\u003cString\u003e data \u003d Files.readAllLines(Paths.get(this.categoryFilePath));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            for (String iterator : data) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                if (iterator.contentEquals(\"c/\" + category)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    data.remove(iterator);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Files.write(Paths.get(this.categoryFilePath), data);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a file if necessary and stores each category and its budget into the file."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param category Budget object that stores the budget for each category"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @throws MooMooException thrown if file cannot be written to."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void saveCategoryToFile(String category) throws MooMooException {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        createFileAndDirectory(this.categoryFilePath);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            String newCategory \u003d Files.readString(Paths.get(this.categoryFilePath));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            newCategory \u003d (\"c/\" + category + \"\\n\" + newCategory);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Files.writeString(Paths.get(this.categoryFilePath), newCategory);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Creates a file if necessary and stores each expenditure and its category into the file."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param expenditure Expenditure object that stores the name, amount and date for each expenditure."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param category Category that the expenditure is stored in."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @throws MooMooException thrown if file cannot be written to."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void saveExpenditureToFile(Expenditure expenditure, String category) throws MooMooException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        createFileAndDirectory(this.expenditureFilePath);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            String newExpenditure \u003d Files.readString(Paths.get(this.expenditureFilePath));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            newExpenditure +\u003d (category + \" | \" + expenditure.toString() + \" | \" + expenditure.getCost()"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                + \" | \" + expenditure.getDate() + \"\\n\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            Files.writeString(Paths.get(this.expenditureFilePath), newExpenditure);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please retry again.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Creates a file if necessary and stores each category and its budget into the file."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param budget Budget object that stores the budget for each category"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @throws MooMooException thrown if file cannot be written to."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void saveBudgetToFile(Budget budget) throws MooMooException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        createFileAndDirectory(this.budgetFilePath);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String toSave \u003d \"\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Iterator budgetIterator \u003d budget.getBudget().entrySet().iterator();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (budgetIterator.hasNext()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Map.Entry mapElement \u003d (Map.Entry)budgetIterator.next();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            toSave +\u003d mapElement.getKey() + \"\\n\" + mapElement.getValue() + \"\\n\";"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.writeString(Paths.get(this.budgetFilePath), toSave);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new MooMooException(\"Unable to write to budget file. Please retry again.\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Writes scheduled payments to file."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public void saveScheduleToFile(ScheduleList calendar) throws MooMooException {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        createFileAndDirectory(this.scheduleFilePath);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String list \u003d \"Schedule: \\n\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        for (SchedulePayment c : calendar.fullSchedule) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            list +\u003d \"d/\" + c.date + \" n/\" + c.tasks + \"\\n\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            Files.writeString(Paths.get(this.scheduleFilePath), list);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "            throw new MooMooException(\"Unable to write to file. Please try again.\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Checks if a category is found in the list of categories."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return true if it exists."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private boolean isInCategoryList(ArrayList\u003cCategory\u003e catList, String value) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (Category cat : catList) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (cat.toString().equals(value)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 21,
      "Greatnest": 127,
      "guanyewtan": 2,
      "jinwentay": 43,
      "shannonlee98": 84
    }
  },
  {
    "path": "src/main/java/moomoo/task/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " * Represents the User Interface to be shown to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private String output \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Scanner inputScanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns the value to be printed to the GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String to be printed on the GUI"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String returnResponse() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints the welcome message to the User."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"   \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   ^____^________\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   ( oo )\\\\ *  *  )\\\\/\\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   (____)||----w |  o \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"         ||     ||   00\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"   wmwwmWMWMwmWMmwMWWMWMwm\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                + \"MOOOOOOOO!\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Welcome to MooMooMoney! Your one-stop budgeting and expenses tracker!\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"What can MooMoo do for you today?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Used to read input from the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return String representing the input given by the User"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.inputScanner.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Used to read input from the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return Integer representing the input given by the User"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public int readNumber() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return this.inputScanner.nextInt();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Sets good bye message to be shown to the User."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d \"Hope you had a great time using MooMooMoney!\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"See you next time :)\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Returns message of MooMooException that occurs."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param e MooMooException that occurs"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return Message of the MooMooException"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String printException(MooMooException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d e.getMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prints out response from command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showResponse() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            PrintStream out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            out.println(this.output);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     * Show today\u0027s date."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    public String showDate() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String formattedDate \u003d today.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        String shortDate \u003d today.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        print(\"\\n\" + formattedDate + \"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        return shortDate;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Prints the error message for the user."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param message error message"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void showErrorMessage(String message) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        print(message);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Prompts the user for confirmation."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @return value given by user"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String confirmPrompt(String value) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(value);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return inputScanner.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Sets the output to be printed."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param output Input value to be printed."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void setOutput(String output) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints out a message enclosed between two lines."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param text message to be printed"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private void print(String text) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        System.out.println(text);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints out when a new category is created."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName name of the new category"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showNewCategoryMessage(String categoryName) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"Ok, I\u0027ve added a new category named \" + categoryName + \".\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prompts the user to enter a category name."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showAddCategoryMessage() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"Please enter a name for your new category.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints the list of categories."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categories list of current categories"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showCategoryList(String categories) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"These are your current categories:\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"\\n_______________________________________________\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + categories"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"\\n_______________________________________________\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Promts the user to enter a category index."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showEnterCategoryMessage() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"Please enter the index of a category.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints out when a category is deleted."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName name of the new category"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showRemovedCategoryMessage(String categoryName) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"Ok, I\u0027ve deleted the category named \" + categoryName + \".\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Prints out when a expenditure is deleted."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param category name of the expenditure to be deleted"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void showRemovedExpenditureMessage(Category category) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        print(\"Ok, I\u0027ve deleted the expenditure under \" + category.toString() + \".\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Prints out when a new expenditure is created."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param categoryName name of the new expenditure"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void showNewExpenditureMessage(String expenditureName, String categoryName) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        print(\"Ok, I\u0027ve added a new expenditure \" + expenditureName + \" under \" + categoryName + \".\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Promts the user to enter the number corresponding to a month."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showEnterMonthMessage() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(\"Please enter a month in the format MM.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Prompts the user to enter a expenditure name."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showAddExpenditureMessage() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        print(\"Please enter a name for which category\u0027s expenditure and amount with a \u0027-\u0027 in between\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Prompts the user to enter a expenditure name."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void showDeleteExpenditureMessage() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        print(\"Please enter a category\u0027s index number and the amount to delete with a \u0027-\u0027 in between\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Shows the user his total spending for the month in a category."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param monthlyTotal total spending"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param category category user wants to check"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param month month that should be totaled"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showMonthlyTotal(double monthlyTotal, Category category, int month) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        print(\"Your total spending in the month of \" + month + \" for \" + category.toString()"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            + \" is $\" + monthlyTotal + \".\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prompts the user to enter what to add."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showInputPrompt(String text) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(text);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Shows the user what are the possible commands."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void showHelp() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d \"Try one of these commands:\\n\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"add c/[Category name]\\n\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"delete c/[Category name]\\n\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"add n/[Expenditure name] a/[Amount spent] c/[Category] d/[YYYY-MM-DD]\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"sort\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"budget\\n\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"schedule\\n\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"graph\\n\""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                + \"total\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        print(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void printMainDisplay(String newMainDisplay) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        print(newMainDisplay);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 41,
      "Greatnest": 88,
      "guanyewtan": 4,
      "jinwentay": 14,
      "shannonlee98": 107
    }
  },
  {
    "path": "src/main/java/moomoo/task/category/Category.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.task.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Category {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String categoryName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private ArrayList\u003cExpenditure\u003e category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Initializes a new category with a name, an empty list of expenditures, and a monthly total."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param name category name"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.categoryName \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public void add(Expenditure newExpenditure) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        category.add(newExpenditure);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void delete(int expenditureNumber) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        category.remove(expenditureNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return category.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Expenditure get(int i) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return category.get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Returns the total expenditure for the given month and year."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param month integer value representing the month"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param year integer value representing the value."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return total expenditure spent for corresponding month and year"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month, int year) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double totalCost \u003d 0.00;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Expenditure currExpenditure : category) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (currExpenditure.getDate().getMonthValue() \u003d\u003d month"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    \u0026\u0026 currExpenditure.getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                totalCost +\u003d currExpenditure.getCost();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return totalCost;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getTotal(month, LocalDate.now().getYear());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getTotal(LocalDate.now().getMonthValue(), LocalDate.now().getYear());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Return the expenditure with the largest value."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return expenditure The value of the largest expenditure"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public double getLargestExpenditure() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double expenditure \u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Expenditure exp : category) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (exp.getCost() \u003e expenditure) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                expenditure \u003d exp.getCost();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return expenditure;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * The expenditure with the longest name."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return The name of the longest expenditure"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public int getLongestExpenditure() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int longestName \u003d 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Expenditure exp : category) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (exp.toString().length() \u003e longestName) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                longestName \u003d exp.toString().length();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (longestName \u003e\u003d 14) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                longestName \u003d 14;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return longestName;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void sort(String type) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        if (\"name\".equals(type)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(Comparator.comparing(Expenditure::toString));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (\"cost\".equals(type)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(Comparator.comparing(Expenditure::costToString));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } else if (\"date\".equals(type)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(Comparator.comparing(Expenditure::dateToString));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Populate the categoryList array with dummy variables. FOR TESTING PURPOSES."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    void testPopulate() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e population \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"SanicTheHodgepodge\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"MetalGearLiquid\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"GTB\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"Far:Automata\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"League of Mobile Legends\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            Expenditure newExp \u003d new Expenditure(population.get(i), i * 100 / (i + 3), LocalDate.now());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            category.add(newExp);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 12,
      "Greatnest": 3,
      "guanyewtan": 48,
      "shannonlee98": 59
    }
  },
  {
    "path": "src/main/java/moomoo/task/category/CategoryList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.task.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private ArrayList\u003cCategory\u003e categoryList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public CategoryList(ArrayList\u003cCategory\u003e categoryList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        this.categoryList \u003d categoryList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return categoryList.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void add(Category newCategory) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.add(newCategory);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void delete(String categoryName) throws MooMooException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        int categoryNumber \u003d find(categoryName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryList.remove(categoryNumber);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Returns the category if it currently exists."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param value Name of category to return."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return The category with name equal to value, or null if it is not found."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category get(String value) throws MooMooException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Category iterCategory : categoryList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (iterCategory.toString().equalsIgnoreCase(value)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return iterCategory;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        throw new MooMooException(\"Sorry I could not find a category named \" + value);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category get(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return categoryList.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public ArrayList\u003cCategory\u003e getCategoryList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return categoryList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private int find(String categoryName) throws MooMooException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (get(i).toString().contentEquals(categoryName)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        throw new MooMooException(\"Sorry I could not find a category named \" + categoryName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Return the total sum of all expenditure across all categories for the current month."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return total The total sum"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month, int year) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double total \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            total +\u003d category.getTotal(month, year);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return total;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getTotal(month, LocalDate.now().getYear());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getTotal(LocalDate.now().getMonthValue(), LocalDate.now().getYear());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Gets the total expenditure of a single category."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param month specified month"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param year specified year"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return total expenditure of the category from specified month and year"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private double getCategoryTotal(String categoryName, int month, int year) throws MooMooException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return get(categoryName).getTotal(month, year);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getCategoryTotal(String categoryName, int month) throws MooMooException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getCategoryTotal(categoryName, month, LocalDate.now().getYear());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getCategoryTotal(String categoryName) throws MooMooException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return getCategoryTotal(categoryName, LocalDate.now().getMonthValue(), LocalDate.now().getYear());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Find the category with the largest total expenditure and return the value of that expenditure."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return expenditure The value of the largest expenditure"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getLargestExpenditure(int month) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        double expenditure \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            if (category.getTotal(month) \u003e expenditure) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                expenditure \u003d category.getTotal(month);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return expenditure;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Get the length of the name of the Category with the longest name."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * @return Length of the name of the Category with the longest name"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public int getLongestCategory() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        int longestName \u003d 0;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (category.toString().length() \u003e longestName) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                longestName \u003d category.toString().length();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            if (longestName \u003e\u003d 14) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                longestName \u003d 14;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return longestName;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Prints the current list of categories."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param ui MooMoo\u0027s ui"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void list(Ui ui) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String categoryList \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.categoryList.size(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            categoryList \u003d categoryList.concat(\"\\n\" + i + \". \""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + this.categoryList.get(i).toString()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "                    + \" [ $\" + this.categoryList.get(i).getTotal() + \" ]\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ui.showCategoryList(categoryList);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Determines if the category list contains a category with its name matching the query."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param categoryName Name of the category to be found"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return True if a category is found, false if otherwise"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public boolean hasCategory(String categoryName) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            find(categoryName);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sorts the category list in alphabetical order."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void sortByName() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(\"name\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sorts the category list from largest to smallest total expenditure for the month."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void sortByValue() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(\"value\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Sorts the category list in chronological order."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public void sortByTime() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Category category : categoryList) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            category.sort(\"date\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     * Populate the categoryList array with dummy variables. FOR TESTING PURPOSES."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    public void testPopulate() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        ArrayList\u003cString\u003e population \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"Drugs\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"Food\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"Transportation\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"Individualistically\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        population.add(\"Compartmentalisation\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i +\u003d 1) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            Category newCategory \u003d new Category(population.get(i));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "            categoryList.add(newCategory);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 15,
      "guanyewtan": 66,
      "shannonlee98": 127
    }
  },
  {
    "path": "src/main/java/moomoo/task/category/CategoryParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.task.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.command.category.SortCategoryCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class CategoryParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Parses how the user wants the list to be sorted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param scanner user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param ui ui"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @return command to sort the category list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public static Command parseSort(Scanner scanner, Ui ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String text \u003d \"parse sort error\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String sortType \u003d parseInput(scanner, ui, text);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return new SortCategoryCommand(sortType);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    private static String parseInput(Scanner scanner, Ui ui, String text) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            input \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ui.showInputPrompt(text);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shannonlee98": 34
    }
  },
  {
    "path": "src/main/java/moomoo/task/category/Expenditure.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "package moomoo.task.category;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "public class Expenditure {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private double cost;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * Initializes name, value and date of expenditure if given by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param name     Name of the expenditure (e.g chicken rice)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param cost     Cost of the expenditure."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param date     Date of the expenditure."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public Expenditure(String name, double cost, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    String dateToString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    String costToString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return String.valueOf(cost);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getCost() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return this.cost;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public String getCostString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return Double.toString(this.cost);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return (Double.toString(this.cost)).length();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 26,
      "guanyewtan": 1,
      "Greatnest": 2,
      "shannonlee98": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"moomoo.gui.MainWindow\" \u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"620.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"620\" layoutY\u003d\"556.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"80.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"555\" prefWidth\u003d\"700\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555\" prefWidth\u003d\"700\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 1,
      "-": 18
    }
  },
  {
    "path": "src/test/java/moomoo/command/BudgetCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.CategoryStub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.ExpenditureStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import moomoo.stubs.UiStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.MooMooException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class BudgetCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testSetBudgetCommand() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jinwentay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Shoes\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Food\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Places to go\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Test Value\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(50.0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(100.0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(-150.0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(200.0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"You have set $50.00 as the budget for shoes\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have set $100.00 as the budget for food\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Please set your budget for places to go to a value more than 0\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"test value category does not exist. Please add it first.\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testEditBudgetCommand() throws MooMooException, IOException  {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"shoes\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"sweets\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Invalid Value\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(123.45);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(1123.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(217.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(122.23);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(0, 300.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(1, -675.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(2, 675.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        EditBudgetCommand editBudget \u003d new EditBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        editBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"You have changed the budget for shoes from $123.45 to $300.00\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Please set your budget for window to a value more than 0\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have changed the budget for sweets from $217.00 to $675.00\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"invalid value category does not exist. Please add it first.\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testListBudgetCommand() throws MooMooException, IOException  {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"shoes\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"food\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"places to go\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Test Value\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"sweets\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(183.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(128.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(527.0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(103.34);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(105.0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e listCategories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"shoes\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"food\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"places to go\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"Test Value\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listCategories.add(\"sweets\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ListBudgetCommand listBudget \u003d new ListBudgetCommand(false, listCategories);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        listBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Budget for shoes is $183.00\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Budget for food is $128.00\\n\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Budget for places to go is $527.00\\n\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"test value category does not exist. Please add it first.\\n\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Budget for sweets is $105.00\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testSavingsBudgetCommand() throws MooMooException, IOException  {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"slippers\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Dogs\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(875.0);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(938.0);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(75.89);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(100.58);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c newCatList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            newCatList.getCategoryList().get(i).add(null);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate startDate \u003d LocalDate.of(2019, 9, 15);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDate endDate \u003d LocalDate.of(2019, 11, 15);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SavingsBudgetCommand savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, endDate);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"slippers category does not exist. Please create it first.\\n\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your savings for window from SEPTEMBER 2019 to NOVEMBER 2019 is: $2549.00\\n\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have overspent for your budget for laptop from SEPTEMBER 2019 to NOVEMBER 2019 by: $37.33\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"dogs category does not exist. Please create it first.\\n\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your total savings: $2511.67\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, null);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"slippers category does not exist. Please create it first.\\n\""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your savings for window for SEPTEMBER 2019 is: $788.00\\n\""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have overspent your budget for laptop for SEPTEMBER 2019 by $74.11\\n\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"dogs category does not exist. Please create it first.\\n\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your total savings: $713.89\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.clear();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(0, categories.size());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, null);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"The budget for shoes does not exist. Please set it using budget set.\\n\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"The budget for food does not exist. Please set it using budget set.\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your savings for window for SEPTEMBER 2019 is: $788.00\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"The budget for places to go does not exist. Please set it using budget set.\\n\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"The budget for sweets does not exist. Please set it using budget set.\\n\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have overspent your budget for laptop for SEPTEMBER 2019 by $74.11\\n\""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your total savings: $713.89\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.clear();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(0, categories.size());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(1, categories.size());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        startDate \u003d LocalDate.of(2017, 9, 15);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        endDate \u003d LocalDate.of(2019, 2, 15);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget \u003d new SavingsBudgetCommand(false, categories, startDate, endDate);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        savingsBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"Your savings for laptop from SEPTEMBER 2017 to FEBRUARY 2019 is: $1066.02\\n\""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"Your total savings: $1066.02\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 18,
      "Greatnest": 242,
      "jinwentay": 3
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/CategoryListStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.CategoryList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryListStub extends CategoryList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cCategory\u003e newArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryListStub() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList \u003d  new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void add(Category newCategory) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"shoes\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"food\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"window\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"places to go\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"sweets\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newArrayList.add(new CategoryStub(\"laptop\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cCategory\u003e getCategoryList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return newArrayList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Category get(int i) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return newArrayList.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public Category get(String value) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (Category iterCategory : newArrayList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (iterCategory.toString().equalsIgnoreCase(value)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return iterCategory;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month, int year) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        double total \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        for (Category category : newArrayList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            total +\u003d category.getTotal(month, year);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        return total;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 41,
      "shannonlee98": 12
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/CategoryStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Expenditure;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class CategoryStub extends Category {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private ArrayList\u003cExpenditureStub\u003e category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryStub() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * Creates a category."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     * @param name name of category"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public CategoryStub(String name) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.category \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "    public double getTotal(int month, int year) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        double totalCost \u003d 0.00;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c category.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "            ExpenditureStub currExpenditure \u003d category.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "            if (currExpenditure.getDate().getMonthValue() \u003d\u003d month"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                    \u0026\u0026 currExpenditure.getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                totalCost +\u003d currExpenditure.getCost();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return totalCost;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void add(Expenditure newExpenditure) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 1\",100, LocalDate.of(2017, Month.DECEMBER, 20)));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 2\", 100, LocalDate.of(2018, Month.DECEMBER, 20)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 3\", 100, LocalDate.of(2019, Month.JANUARY, 20)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 4\", 200, LocalDate.of(2019, Month.AUGUST, 20)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 5\", 150, LocalDate.of(2019, Month.SEPTEMBER, 20)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 6\", 50, LocalDate.of(2019, Month.OCTOBER, 25)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.category.add(new ExpenditureStub(\"Value 7\", 65, LocalDate.of(2019, Month.NOVEMBER, 21)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 11,
      "Greatnest": 36,
      "shannonlee98": 10
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/ExpenditureStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Expenditure;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ExpenditureStub extends Expenditure {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private double cost;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * Initializes the expenditure stub with name,cost and date time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param name Given input name of expenditure."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     * @param cost Given cost of expenditure."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "     * @param date Date and time of expenditure."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public ExpenditureStub(String name, double cost, LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        super(name, cost, date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.cost \u003d cost;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    //@Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public double getCost() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return cost;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 8,
      "Greatnest": 29,
      "shannonlee98": 2
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/ScheduleListStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.ScheduleList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ScheduleListStub extends ScheduleList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 7
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/StorageStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Budget;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "import moomoo.task.category.Category;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void saveBudgetToFile(Budget budget) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public HashMap\u003cString, Double\u003e loadBudget(ArrayList\u003cCategory\u003e catList, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        HashMap\u003cString, Double\u003e newHashMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return newHashMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 20,
      "shannonlee98": 1
    }
  },
  {
    "path": "src/test/java/moomoo/stubs/UiStub.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.task.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class UiStub extends Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String returnResponse() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.response;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void setOutput(String output) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.response \u003d output;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 17
    }
  },
  {
    "path": "src/test/java/moomoo/task/ParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.CategoryStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.StorageStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.UiStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParseSavingsBudgetCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"slippers\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"Dogs\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(875.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(938.0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(75.89);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(100.58);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c newCatList.getCategoryList().size(); ++i) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            newCatList.getCategoryList().get(i).add(null);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/01/2019 e/14/2019\", newUi);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"Please set an end month and year in this format \\\"e/01/2019\\\"\\n\", e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/13/2019 e/14/2019\", newUi);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\", e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/invalid input\", newUi);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"Please input in this format \\\"c/CATEGORY \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    + \"s/STARTMONTHYEAR e/ENDMONTHYEAR\\\"\\n\", e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Command c \u003d newParser.parse(\"budget savings s/invalid\", newUi);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"Please set a start month and year in this format \\\"s/01/2019\\\"\\n\", e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParseSetBudgetCommand() throws MooMooException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Command c \u003d newParser.parse(\"budget set c/food c/laptop b/123.45 c/places to go b/150\", newUi);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"You have set $123.45 as the budget for food\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have set $123.45 as the budget for laptop\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"You have set $150.00 as the budget for places to go\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c \u003d newParser.parse(\"budget set b/100 c/places to go b/150\", newUi);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\", e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testParseEditBudgetCommand() throws MooMooException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Parser newParser \u003d new Parser();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        StorageStub newStorage \u003d new StorageStub();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Command c \u003d newParser.parse(\"budget set c/food b/100 c/laptop b/125 c/places to go b/123\", newUi);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c \u003d newParser.parse(\"budget edit c/food c/laptop b/100 c/places to go b/150\", newUi);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(\"The budget for food is the same.\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            + \"You have changed the budget for laptop from $125.00 to $100.00\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            + \"You have changed the budget for places to go from $123.00 to $150.00\\n\", newUi.returnResponse());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c \u003d newParser.parse(\"budget edit b/100 c/places to go b/150\", newUi);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            c.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (MooMooException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            assertEquals(\"Please input in this format \\\"c/CATEGORY b/BUDGET\\\"\", e.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 132
    }
  },
  {
    "path": "src/test/java/moomoo/task/StorageTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "package moomoo.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "guanyewtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.EditBudgetCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.CategoryListStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.CategoryStub;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.ScheduleListStub;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import moomoo.stubs.UiStub;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void testBudgetFileLoad() throws MooMooException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        File budgetFile \u003d File.createTempFile(\"budget\", \".txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgetFile.deleteOnExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        File scheduleFile \u003d File.createTempFile(\"schedule\", \".txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jinwentay"
        },
        "content": "        scheduleFile.deleteOnExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        File categoryFile \u003d File.createTempFile(\"category\", \".txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": "        categoryFile.deleteOnExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shannonlee98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        File expenditureFile \u003d File.createTempFile(\"expenditure\", \".txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        expenditureFile.deleteOnExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryListStub newCatList \u003d new CategoryListStub();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newCatList.add(null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cString\u003e categories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"window\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"sweets\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        categories.add(\"laptop\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cDouble\u003e budgets \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(60.0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(153.34);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.add(13840.45);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        CategoryStub newCategory \u003d new CategoryStub();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ScheduleListStub newCalendar \u003d new ScheduleListStub();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        UiStub newUi \u003d new UiStub();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "        Storage newStorage \u003d new Storage(budgetFile.getPath(), scheduleFile.getPath(), categoryFile.getPath(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JOSHTAM"
        },
        "content": "                expenditureFile.getPath());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Budget newBudget \u003d new Budget();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        SetBudgetCommand setBudget \u003d new SetBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        setBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        HashMap\u003cString, Double\u003e newHashMap \u003d newStorage.loadBudget(newCatList.getCategoryList(), newUi);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(60.0, newHashMap.get(\"window\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(153.34, newHashMap.get(\"sweets\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(13840.45, newHashMap.get(\"laptop\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(0, 500.23);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        budgets.set(2, 123.45);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        EditBudgetCommand editBudget \u003d new EditBudgetCommand(false, categories, budgets);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        editBudget.execute(newCalendar, newBudget, newCatList, newCategory, newUi, newStorage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        newHashMap \u003d newStorage.loadBudget(newCatList.getCategoryList(), newUi);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(500.23, newHashMap.get(\"window\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(153.34, newHashMap.get(\"sweets\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        assertEquals(123.45, newHashMap.get(\"laptop\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JOSHTAM": 5,
      "Greatnest": 63,
      "guanyewtan": 1,
      "jinwentay": 2,
      "shannonlee98": 3
    }
  }
]
