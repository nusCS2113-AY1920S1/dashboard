[
  {
    "path": "src/main/java/Dictionary/Word.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package Dictionary;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " * Represents words stored in the Word Bank"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class Word {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String meaning;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private HashSet\u003cString\u003e tags;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Number of times that a word is searched"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private int numberOfSearches;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * String represents the closest time that user search"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * for a specific word"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String closetSearch;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word(String word, String meaning) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.meaning \u003d meaning;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.numberOfSearches \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word(String word, String meaning, HashSet\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.meaning \u003d meaning;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.numberOfSearches \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void setClosetSearch(String closetSearch) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.closetSearch \u003d closetSearch;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getWord() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return word;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public int getNumberOfSearches() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return numberOfSearches;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getClosetSearch() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return closetSearch;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getMeaning() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return meaning;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public HashSet\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void addTag(String tag) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags.add(tag);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void editMeaning(String newMeaning) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.meaning \u003d newMeaning;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return word + \": \" + meaning;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 76
    }
  },
  {
    "path": "src/main/java/Dictionary/WordBank.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package Dictionary;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "njw95"
        },
        "content": "import command.OxfordCall;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WordBank {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private TreeMap\u003cString, Word\u003e wordBank;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WordBank(Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        wordBank \u003d storage.loadFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordBank(TreeMap\u003cString, Word\u003e wordBank) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.wordBank \u003d wordBank;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public TreeMap\u003cString, Word\u003e getWordBank() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word getWordAndMeaning(String word) throws NoWordFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (!wordBank.containsKey(word)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(word);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank.get(word);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void addWord(Word word) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.wordBank.put(word.getWord(), word);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Looks up for meaning of a specific word"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to be searched for its meaning"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string represents meaning of that word"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the word bank"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public String searchForMeaning(String word){ //throws NoWordFoundException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "njw95"
        },
        "content": "        word \u003d word.toLowerCase();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "njw95"
        },
        "content": "        if (!(wordBank.containsKey(word))){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "njw95"
        },
        "content": "            System.out.println(\"Unable to locate \"+word+\" in local dictionary. Looking up Oxford Dictionary\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "njw95"
        },
        "content": "            String result \u003d OxfordCall.onlineSearch(word);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "njw95"
        },
        "content": "            Word temp \u003d new Word(word,result);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "njw95"
        },
        "content": "            wordBank.put(word,temp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "njw95"
        },
        "content": "        return wordBank.get(word).getMeaning();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Updates the meaning of a specific word"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordToBeEdited word whose meaning is updated"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param newMeaning new meaning of the word"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the word bank"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void editMeaning(String wordToBeEdited, String newMeaning) throws NoWordFoundException{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordBank.containsKey(wordToBeEdited)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            wordBank.get(wordToBeEdited).editMeaning(newMeaning);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(wordToBeEdited);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word getAndDelete(String word) throws NoWordFoundException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordBank.containsKey(word)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return wordBank.remove(word);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(word);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Adds a tag to a specific word in word bank"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordToBeAddedTag word that the tag is set for"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tags new tags input by user"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return tag lists of that word"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the word bank"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public HashSet\u003cString\u003e addTag(String wordToBeAddedTag, ArrayList\u003cString\u003e tags) throws NoWordFoundException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (!wordBank.containsKey(wordToBeAddedTag)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(wordToBeAddedTag);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Word word \u003d wordBank.get(wordToBeAddedTag);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : tags) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            word.addTag(tag);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return word.getTags();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getBankData() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        StringBuilder data \u003d new StringBuilder();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (Map.Entry\u003cString, Word\u003e entry : wordBank.entrySet()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            data.append(entry.getValue() + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return data.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void deleteTags(String word, ArrayList\u003cString\u003e tagList, ArrayList\u003cString\u003e deletedTags, ArrayList\u003cString\u003e nonExistTags) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        HashSet\u003cString\u003e tags \u003d wordBank.get(word).getTags();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : tagList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (tags.contains(tag)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tags.remove(tag);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                deletedTags.add(tag);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                nonExistTags.add(tag);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "njw95": 9,
      "tessa-z": 7,
      "tran-quang-thanh": 102
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.Word;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Creates a Command object after extracting information needed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Extracts the command specified in the user input and creates the respective command objects."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param input user input from command line"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return respective Command class objects"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] taskInfo \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (taskInfo[0].equals(\"exit\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else if (taskInfo[0].equals(\"help\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                // CREATE A HELP COMMAND TO SHOW THE AVAILABLE INSTRUCTION"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else if (taskInfo[0].equals(\"add\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (taskInfo.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new WrongAddFormatException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String[] wordDetail \u003d taskInfo[1].split(\"w/\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (wordDetail.length !\u003d 3) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new WrongAddFormatException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String wordDescription \u003d wordDetail[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (wordDescription.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new EmptyWordException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String[] meaningAndTag \u003d wordDetail[2].split(\"t/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String meaning \u003d meaningAndTag[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (meaning.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new EmptyWordException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                Word word;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (meaningAndTag.length \u003e 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    HashSet\u003cString\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    for (int j \u003d 1; j \u003c meaningAndTag.length; ++j) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                        tags.add(meaningAndTag[j]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    word \u003d new Word(wordDescription, meaning, tags);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    word \u003d new Word(wordDescription, meaning);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return new AddCommand(word);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (taskInfo[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                // FIX DELETE COMMAND TO DELETE WORD FROM DICTIONARY (BOTH TAG AND WORD)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new WrongDeleteFormatException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String[] wordAndTags \u003d taskInfo[1].split(\"t/\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (wordAndTags.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    return new DeleteCommand(taskInfo[1].substring(2));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    String wordDescription \u003d wordAndTags[0].substring(2).trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    for (int i \u003d 1; i \u003c wordAndTags.length; ++i) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                        tags.add(wordAndTags[i].trim());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    return new DeleteCommand(wordDescription, tags);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else if (taskInfo[0].equals(\"search\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new WrongSearchFormatException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return new SearchCommand(taskInfo[1].substring(2));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (taskInfo[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                //FIX LIST COMMAND TO MATCH THE TASK WE NEED TO DO"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String order \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (taskInfo.length \u003e 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    if (!taskInfo[1].startsWith(\"o/\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                        throw new WrongListFormatDescription();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    order \u003d taskInfo[1].substring(2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    if (!order.equals(\"asc\") \u0026\u0026 !order.equals(\"desc\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                        throw new WrongListFormatDescription();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return new ListCommand(order);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else if (taskInfo[0].equals(\"edit\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                // CREATE AN EDIT COMMAND TO DEAL WITH EDIT WORD"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else if (taskInfo[0].equals(\"tag\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new WrongAddTagFormatException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String[] wordAndTags \u003d taskInfo[1].split(\"t/\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (wordAndTags.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new WrongAddTagFormatException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String wordDescription \u003d wordAndTags[0].substring(2).trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                for (int i \u003d 1; i \u003c wordAndTags.length; ++i) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    tags.add(wordAndTags[i].trim());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return new AddTagCommand(wordDescription, tags);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "njw95"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new CommandInvalidException(input);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                } catch (CommandInvalidException e){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    e.showError();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    return new BadCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } catch (WordUpException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            return new BadCommand();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "njw95": 1,
      "tessa-z": 12,
      "-": 24,
      "tran-quang-thanh": 83
    }
  },
  {
    "path": "src/main/java/WordUp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.CommandEmptyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class WordUp {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordBank wordBank;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WordUp(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        wordBank \u003d new WordBank(storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (fullCommand.equals(\"\")) { throw new CommandEmptyException(); }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                c.execute(ui, wordBank, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } catch (CommandEmptyException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                e.showError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        new WordUp(\"data/wordup.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tessa-z": 28,
      "-": 3,
      "tran-quang-thanh": 11
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from user to add a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public AddCommand(Word w) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        word \u003d w;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        //add task to tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask storage to write to file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        wordBank.addWord(word);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        storage.writeFile(word.toString(), true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        ui.showAdded(word);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 5,
      "-": 14,
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/command/AddTagCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class AddTagCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    ArrayList\u003cString\u003e tags;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    String wordDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public AddTagCommand(String word, ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.wordDescription \u003d word;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            HashSet\u003cString\u003e tagList \u003d wordBank.addTag(wordDescription, tags);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            ui.showAddTag(wordDescription, tags, tagList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 30
    }
  },
  {
    "path": "src/main/java/command/BadCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from system to abort task due to bad user command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class BadCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask tasks to store the thing in arraylist"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask storage to write to file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        isExit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 4,
      "-": 15,
      "tran-quang-thanh": 2
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a general command from user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Word word;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask storage to store the thing into tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 4,
      "-": 15,
      "tran-quang-thanh": 4
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command from user to delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String deletedWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected ArrayList\u003cString\u003e tags;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public DeleteCommand(String deletedWord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.deletedWord \u003d deletedWord;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public DeleteCommand(String deletedWord, ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.deletedWord \u003d deletedWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask tasks to store the thing in arraylist"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask storage to write to file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            // delete word"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (tags.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                word \u003d wordBank.getAndDelete(this.deletedWord);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                storage.deleteFromFile(word.toString() + \"\\r\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ui.showDeleted(word);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            //delete tag"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                word \u003d wordBank.getWordBank().get(deletedWord);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ArrayList\u003cString\u003e nullTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ArrayList\u003cString\u003e deletedTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                wordBank.deleteTags(deletedWord, tags, deletedTags, nullTags);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ui.showDeletedTags(deletedWord, deletedTags);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ui.showNullTags(deletedWord, nullTags);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 2,
      "-": 24,
      "tran-quang-thanh": 28
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the command from user to exit application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask tasks to store the thing in arraylist"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask storage to write to file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.goodBye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * Changes the exit boolean to be true."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the value of exit as true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 29,
      "tran-quang-thanh": 2
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordBankEmptyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command from user to lists current tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String order;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public ListCommand(String order) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask tasks to store the thing in arraylist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        //ask storage to write to file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (wordBank.getWordBank().isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                throw new WordBankEmptyException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            ui.showList(wordBank, this.order);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (WordBankEmptyException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "-": 20,
      "tran-quang-thanh": 13
    }
  },
  {
    "path": "src/main/java/command/OxfordCall.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "njw95"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "njw95"
        },
        "content": "import Dictionary.Word;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "njw95"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "njw95"
        },
        "content": "import exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "njw95"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "njw95"
        },
        "content": "import javax.net.ssl.HttpsURLConnection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "njw95"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "njw95"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "njw95"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "njw95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "njw95"
        },
        "content": " * Sets up API call and options to query a word from Oxford Dictionary API"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "njw95"
        },
        "content": " * Only works if internet connection is present."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "njw95"
        },
        "content": " * @author Ng Jian Wei"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "njw95"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "njw95"
        },
        "content": "public class OxfordCall{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public static String onlineSearch(String word){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String queryWord \u003d word;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String alpha \u003d doInBackground(queryWord);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String result \u003d CleanUp(alpha);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "njw95"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public static String dictionaryEntries(String lookUpWord) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String language \u003d \"en-gb\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String word \u003d lookUpWord; //query this word to oxford API"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String fields \u003d \"definitions\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String strictMatch \u003d \"false\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String word_id \u003d word.toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "njw95"
        },
        "content": "        return \"https://od-api.oxforddictionaries.com/api/v2/entries/\" + language + \"/\" + word_id + \"?\" + \"fields\u003d\" + fields + \"\u0026strictMatch\u003d\" + strictMatch;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public static String doInBackground(String word) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String app_id \u003d \"11f848bf\"; //obtained from Oxford account"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String app_key \u003d \"5be9615c9940859a6ce549f449cc670d\"; //obtained from Oxford account"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "njw95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "njw95"
        },
        "content": "            URL url \u003d new URL(dictionaryEntries(word));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "njw95"
        },
        "content": "            HttpsURLConnection urlConnection \u003d (HttpsURLConnection) url.openConnection();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "njw95"
        },
        "content": "            urlConnection.setRequestProperty(\"Accept\", \"application/json\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "njw95"
        },
        "content": "            urlConnection.setRequestProperty(\"app_id\", app_id);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "njw95"
        },
        "content": "            urlConnection.setRequestProperty(\"app_key\", app_key);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "njw95"
        },
        "content": "            // read the output from the server"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "njw95"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "njw95"
        },
        "content": "            StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "njw95"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "njw95"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "njw95"
        },
        "content": "                stringBuilder.append(line + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "njw95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "njw95"
        },
        "content": "            return stringBuilder.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "njw95"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "njw95"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "njw95"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "njw95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "njw95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "njw95"
        },
        "content": "     * Extract the first definition inside the metadata"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "njw95"
        },
        "content": "     * @author Ng Jian Wei"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "njw95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public static String CleanUp(String metaData){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String result \u003d\"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String[] temp \u003d metaData.split(\"definitions\", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String[] temp2 \u003d temp[1].split(\"]\", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "njw95"
        },
        "content": "        temp2[0] \u003d temp2[0].replaceAll(\":\",\"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "njw95"
        },
        "content": "        temp2[0] \u003dtemp2[0].replaceAll(\"\\\\[\",\"\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "njw95"
        },
        "content": "        temp2[0] \u003dtemp2[0].replaceAll(\"\\\"\",\"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "njw95"
        },
        "content": "        return temp2[0].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "njw95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "njw95": 71
    }
  },
  {
    "path": "src/main/java/command/SearchCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "njw95"
        },
        "content": "import Dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from user to find tasks containing keywords specified."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String searchedWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public SearchCommand(String queryWord) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "njw95"
        },
        "content": "        this.searchedWord \u003d queryWord;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void execute(Ui ui, WordBank wordBank, Storage storage){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        //ask tasks to store the thing in arraylist"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        //ask storage to write to file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "njw95"
        },
        "content": "        /*try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String meaning \u003d wordBank.searchForMeaning(this.searchedWord);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            ui.showSearch(this.searchedWord, meaning);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            e.showError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "njw95"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String meaning \u003d wordBank.searchForMeaning(this.searchedWord);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "njw95"
        },
        "content": "        ui.showSearch(this.searchedWord,meaning);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "njw95": 7,
      "tessa-z": 15,
      "tran-quang-thanh": 14
    }
  },
  {
    "path": "src/main/java/exception/CommandEmptyException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class CommandEmptyException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public CommandEmptyException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Command cannot be empty, please input a command.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 6
    }
  },
  {
    "path": "src/main/java/exception/CommandInvalidException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class CommandInvalidException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public CommandInvalidException(String falseCommand) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: I don\u0027t understand what you have entered: \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.command \u003d falseCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(this.getMessage() + command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"     Please check help for more information on what command you can use.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 15
    }
  },
  {
    "path": "src/main/java/exception/EmptyWordException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class EmptyWordException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public EmptyWordException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Your input word is empty\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 6
    }
  },
  {
    "path": "src/main/java/exception/NoWordFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class NoWordFoundException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String searchWord;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public NoWordFoundException(String searchWord) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: The word you are searching is not in the word bank: \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.searchWord \u003d searchWord;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(this.getMessage() + \"\\\"\" + searchWord + \"\\\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 14
    }
  },
  {
    "path": "src/main/java/exception/WordBankEmptyException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class WordBankEmptyException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordBankEmptyException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Your word bank is empty. Please input a word before\\n       viewing list.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 6
    }
  },
  {
    "path": "src/main/java/exception/WordUpException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents the exception object used to handle errors thrown in the main execution."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from the Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class WordUpException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WordUpException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WordUpException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(this.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 8,
      "tran-quang-thanh": 12
    }
  },
  {
    "path": "src/main/java/exception/WrongAddFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongAddFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongAddFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Expected format \\\"add w/WORD w/MEANING [t/TAG]\\\"\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/exception/WrongAddTagFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongAddTagFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongAddTagFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Expected format \\\"tag w/WORD t/TAG...\\\"\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/exception/WrongDeleteFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongDeleteFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongDeleteFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Your input format is incorrect\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                \"     If you want to delete tag(s):\\n     Expected format \\\"delete w/WORD_TO_BE_DELETED [t/TAG]...\\\"\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                \"     If you want to delete word:\\n     Expected format \\\"delete w/WORD_TO_BE_DELETED\\\"\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 9
    }
  },
  {
    "path": "src/main/java/exception/WrongFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public abstract class WrongFormatException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(message + \"\\n        You can type \\\"help\\\" to check the correct format\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 6
    }
  },
  {
    "path": "src/main/java/exception/WrongListFormatDescription.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongListFormatDescription extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongListFormatDescription() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Expected format \\\"list [o/ORDER]\\\"\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                \"        (ORDER can be \\\"asc\\\" for ascending and \\\"desc\\\" for descending\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 8
    }
  },
  {
    "path": "src/main/java/exception/WrongSearchFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongSearchFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongSearchFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"     ☹ OOPS: Expected format \\\"search w/WORD_TO_BE_SEARCHED\\\"\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import Dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents the object that reads and writes to the text files where data is stored."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    private static String FILE_PATH;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        FILE_PATH \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Convert all data from text file in storage to list of words"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return an arraylist containing all words in dictionary"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public TreeMap\u003cString, Word\u003e loadFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            TreeMap\u003cString, Word\u003e wordBank \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                // get data from storage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                // parse the line first"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                if (line.equals(\"\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    line \u003d br.readLine(); continue;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                String[] parsedWordAndMeaning \u003d line.split(\":\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                Word word \u003d new Word(parsedWordAndMeaning[0].trim(), parsedWordAndMeaning[1].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordBank.put(word.getWord(), word);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return wordBank;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void writeFile(String s, boolean append) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedWriter bw \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            fw \u003d new FileWriter(file, append);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            bw.write(s);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//            bw.newLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                bw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void deleteFromFile(String oldString) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            while ((line !\u003d null) \u0026\u0026 (!line.equals(\"\\n\"))){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            oldContent \u003d oldContent.substring(0, oldContent.length() - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String newContent \u003d oldContent.replace(oldString, \"\").trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage writer \u003d new Storage();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            writer.writeFile(newContent,false);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 32,
      "-": 79,
      "tran-quang-thanh": 5
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import Dictionary.WordBank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents the object that displays prompts and feedback from the system to the user\u0027s commands."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        System.out.println(\"\\n                      |  | _  _ _|  /  \\\\ _  \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        + \"                      |/\\\\|(_)| (_|  \\\\__/|_) \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        + \"                                        |   \\n\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                        + \"             Welcome, what would you like to do today?\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public void goodBye() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showDeleted(Word w) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this word:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"       \" + w.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public void showFound(ArrayList\u003cTask\u003e foundItems) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (foundItems.size() \u003e 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Task task : foundItems) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"     \" + count + \". \" + task.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"     No task matching description. Try another keyword!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showAdded(Word w) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this word:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"       \" + w.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showAddTag(String word, ArrayList\u003cString\u003e tags, HashSet\u003cString\u003e tagList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"     I have added \" + (tags.size() \u003d\u003d 1 ? \"this tag \\\"\" + tags.get(0) + \"\\\"\" : \"these tags\") + \" to word \\\"\" + word + \"\\\"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"     Here \" + (tagList.size() \u003d\u003d 1 ? \"is the tag \" : \"are the tags \") + \"of word \\\"\" + word + \"\\\"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : tagList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            System.out.println(\"      \" + tag);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showList(WordBank wordBank, String order) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"     Here are your words:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (order.equals(\"asc\") || order.equals(\"\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (Map.Entry\u003cString, Word\u003e entry : wordBank.getWordBank().entrySet()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                System.out.println(\"     \" + entry.getValue());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (String description : wordBank.getWordBank().descendingKeySet()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                System.out.println(\"     \" + wordBank.getWordBank().get(description));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showSearch(String description, String meaning){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.out.println(\"     Here is the meaning of \\\"\" + description + \"\\\": \\\"\" + meaning + \"\\\"\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showDeletedTags(String word, ArrayList\u003cString\u003e deletedTags) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (deletedTags.size() \u003e 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            System.out.println(\"     I have removed \" + (deletedTags.size() \u003d\u003d 1 ? \"this tag \" : \"these tags \") +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    \"from the word \\\"\" + word + \"\\\"\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (String tag : deletedTags) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                System.out.println(\"      \" + tag);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void showNullTags(String word, ArrayList\u003cString\u003e nullTags) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (nullTags.size() \u003e 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            System.out.println(\"     \" + (nullTags.size() \u003d\u003d 1 ? \"This tag \" : \"These tags \") +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    \"doesn\u0027t exist in the word \\\"\" + word + \"\\\"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (String tag : nullTags) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                System.out.println(\"      \" + tag);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tessa-z": 11,
      "-": 47,
      "tran-quang-thanh": 52
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Deadline D_TEST \u003d new Deadline(\"finish JUnit testing\", \"23rd of January 2019, 3pm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(D_TEST.toString(), \"[D][✘] finish JUnit testing (by: 23rd of January 2019, 3pm)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "//    void testToData() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "tran-quang-thanh": 2
    }
  },
  {
    "path": "src/test/java/RemindersTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "class RemindersTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    void getCurrentTimeUsingCalendar() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "//        task.Reminders.getCurrentTimeUsingCalendar();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "-": 10
    }
  }
]
