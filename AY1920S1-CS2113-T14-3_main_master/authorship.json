[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    archiveBaseName \u003d \"wordup\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    archiveVersion \u003d \"v1.2\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "group \u0027wordup\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    mainClassName \u003d \"WordUp\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 10,
      "-": 33,
      "tran-quang-thanh": 1
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    Launcher() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Application.launch(WordUp.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 5,
      "tran-quang-thanh": 10
    }
  },
  {
    "path": "src/main/java/WordUp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import scene.MainScene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WordUp extends Application {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Bank bank;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private Stage window;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        launch(args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Constructor of the word up containing UI, storage, and word bank."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        storage \u003d new Storage(\"data/wordup.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        bank \u003d new Bank(storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window \u003d stage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window.setScene(new MainScene(ui, bank, storage, window).getScene());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window.setTitle(\"WordUp\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window.setResizable(false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window.setMinHeight(600.0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window.setMinWidth(400.0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tessa-z": 9,
      "-": 1,
      "tran-quang-thanh": 33
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordAlreadyExistException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from user to add a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public AddCommand(Word w) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        word \u003d w;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            bank.addWord(word);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            storage.writeFile(word.toString(), true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return ui.showAdded(word);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (WordAlreadyExistException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return e.showError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 5,
      "-": 11,
      "tran-quang-thanh": 12
    }
  },
  {
    "path": "src/main/java/command/AddTagCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class AddTagCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    ArrayList\u003cString\u003e tags;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    String wordDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public AddTagCommand(String word, ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.wordDescription \u003d word;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            HashSet\u003cString\u003e tagList \u003d bank.addTag(wordDescription, tags);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return ui.showAddTag(wordDescription, tags, tagList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return e.showError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 29
    }
  },
  {
    "path": "src/main/java/command/BadCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from system to abort task due to bad user command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class BadCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public BadCommand(String errorMessage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return this.errorMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 4,
      "-": 11,
      "tran-quang-thanh": 9
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a general command from user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Word word;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Executes the command input of user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param ui UI class to interact with user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param bank Bank to store all the information in dictionary"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param storage File extracted to store all data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string to show to user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 3,
      "-": 10,
      "tran-quang-thanh": 12
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command from user to delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String deletedWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected ArrayList\u003cString\u003e tags;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public DeleteCommand(String deletedWord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.deletedWord \u003d deletedWord;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public DeleteCommand(String deletedWord, ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.deletedWord \u003d deletedWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (tags.size() \u003d\u003d 0) {                     //delete word"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                word \u003d bank.getAndDelete(this.deletedWord);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                storage.editFromFile(word.toString() + \"\\r\",\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return ui.showDeleted(word);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else {                                    //delete tags"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ArrayList\u003cString\u003e nullTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                ArrayList\u003cString\u003e deletedTags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                bank.deleteTags(deletedWord, tags, deletedTags, nullTags);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                String returned \u003d ui.showDeletedTags(deletedWord, deletedTags);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                returned +\u003d ui.showNullTags(deletedWord, nullTags);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return returned;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return e.showError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "-": 20,
      "tran-quang-thanh": 26,
      "kevin996231": 1
    }
  },
  {
    "path": "src/main/java/command/EditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevin996231"
        },
        "content": " * Represents a command from user to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevin996231"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevin996231"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    protected String editedWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    protected String newMeaning;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    public EditCommand(String editedWord, String newMeaning) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        this.editedWord \u003d editedWord;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        this.newMeaning \u003d newMeaning;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            // edit word"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String oldWordToString \u003d bank.getWordBank().getWordBank().get(editedWord).toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            Word newWord \u003d bank.getAndEditMeaning(editedWord, newMeaning);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            storage.editFromFile(oldWordToString,newWord.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            String returned \u003d ui.showEdited(newWord);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return returned;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return e.showError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevin996231": 32,
      "tran-quang-thanh": 5
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents the command from user to exit application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "tran-quang-thanh": 4
    }
  },
  {
    "path": "src/main/java/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevin996231"
        },
        "content": " * Represents the command from user to show instructions for usage."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevin996231"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevin996231"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    protected String instruction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    public HelpCommand(String instruction) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        return ui.showHelp(this.instruction);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevin996231": 22,
      "tran-quang-thanh": 2
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordBankEmptyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents a command from user to lists current tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String order;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public ListCommand(String order) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (bank.getWordBank().isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                throw new WordBankEmptyException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return ui.showList(bank.getWordBank().getWordBank(), this.order);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (WordBankEmptyException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return e.showError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "-": 16,
      "tran-quang-thanh": 14
    }
  },
  {
    "path": "src/main/java/command/OxfordCall.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "njw95"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "njw95"
        },
        "content": "import javax.net.ssl.HttpsURLConnection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "njw95"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "njw95"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "njw95"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "njw95"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " * Sets up API call and options to query a word from Oxford dictionary API"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "njw95"
        },
        "content": " * Only works if internet connection is present."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "njw95"
        },
        "content": " * @author Ng Jian Wei"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "njw95"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "njw95"
        },
        "content": "public class OxfordCall {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Searches a word on online dictionary if the word doesn\u0027t exist in word bank."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word string represents the word"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return meaning of the word on the internet"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word also doesn\u0027t exist in Oxford dictionary"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public static String onlineSearch(String word) throws NoWordFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String queryWord \u003d word;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String alpha \u003d doInBackground(queryWord);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String result \u003d cleanUp(alpha);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "njw95"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Gets the http link of the word online."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param lookUpWord word to be looked for meaning"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return http link to the word"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public static String dictionaryEntries(String lookUpWord) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String language \u003d \"en-gb\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String word \u003d lookUpWord; //query this word to oxford API"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String fields \u003d \"definitions\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String strictMatch \u003d \"false\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String word_id \u003d word.toLowerCase();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "njw95"
        },
        "content": "        return \"https://od-api.oxforddictionaries.com/api/v2/entries/\" + language + \"/\" + word_id + \"?\" + \"fields\u003d\" + fields + \"\u0026strictMatch\u003d\" + strictMatch;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Searches for the word online."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to be searched"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return Meanings found by online dictionary"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist on online dictionary"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public static String doInBackground(String word) throws NoWordFoundException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String app_id \u003d \"11f848bf\"; //obtained from Oxford account"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "njw95"
        },
        "content": "        final String app_key \u003d \"5be9615c9940859a6ce549f449cc670d\"; //obtained from Oxford account"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "njw95"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "njw95"
        },
        "content": "            URL url \u003d new URL(dictionaryEntries(word));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "njw95"
        },
        "content": "            HttpsURLConnection urlConnection \u003d (HttpsURLConnection) url.openConnection();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "njw95"
        },
        "content": "            urlConnection.setRequestProperty(\"Accept\", \"application/json\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "njw95"
        },
        "content": "            urlConnection.setRequestProperty(\"app_id\", app_id);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "njw95"
        },
        "content": "            urlConnection.setRequestProperty(\"app_key\", app_key);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "njw95"
        },
        "content": "            // read the output from the server"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "njw95"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "njw95"
        },
        "content": "            StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "njw95"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "njw95"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "njw95"
        },
        "content": "                stringBuilder.append(line + \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "njw95"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "njw95"
        },
        "content": "            return stringBuilder.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(word);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "njw95"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "njw95"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Extracts the first definition inside the metadata."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "njw95"
        },
        "content": "     * @author Ng Jian Wei"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "njw95"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public static String cleanUp(String metaData) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String[] temp \u003d metaData.split(\"definitions\", 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "njw95"
        },
        "content": "        String[] temp2 \u003d temp[1].split(\"]\", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "njw95"
        },
        "content": "        temp2[0] \u003d temp2[0].replaceAll(\":\",\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "njw95"
        },
        "content": "        temp2[0] \u003d temp2[0].replaceAll(\"\\\\[\",\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "njw95"
        },
        "content": "        temp2[0] \u003d temp2[0].replaceAll(\"\\\"\",\"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "njw95"
        },
        "content": "        return temp2[0].trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "njw95"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "njw95"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "njw95": 56,
      "tran-quang-thanh": 31
    }
  },
  {
    "path": "src/main/java/command/QuizCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.WordBank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordBankNotEnoughForQuizException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " * Generate a 4-option MCQ. User should answer by index of options, namely 1, 2, 3, 4."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class QuizCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String question;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String answer;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String[] options;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Random random;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected ArrayList\u003cInteger\u003e randomNumbers;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public int optionSequence;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Creates a quiz command with a random integer for the asked word,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * options are the words to be chosen, randomNumbers is a list to store quiz."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public QuizCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.random \u003d new Random();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.options \u003d new String[4];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.randomNumbers  \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Checks if the number already exists in the randomized quiz."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param r randomized integer"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return true if r already exists in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private boolean isDuplicate(int r) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (int i \u003d 0; i \u003c randomNumbers.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (randomNumbers.get(i).equals(r)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Creates a quiz with 4 options 1, 2, 3, 4 for user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordBank word bank to contain all the words"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws WordBankNotEnoughForQuizException if word bank have fewer than 4"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     *     words, it cannot generate the quiz"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void generateQuiz(WordBank wordBank) throws WordBankNotEnoughForQuizException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        int sizeOfWordBank \u003d wordBank.getWordBank().size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (sizeOfWordBank \u003c 4) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WordBankNotEnoughForQuizException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Object[] wordBankWord \u003d wordBank.getWordBank().keySet().toArray();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        while (randomNumbers.size() \u003c 4) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            int r \u003d random.nextInt(sizeOfWordBank);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (!isDuplicate(r)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                randomNumbers.add(r);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.question \u003d toString().valueOf(wordBankWord[randomNumbers.get(0)]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.answer \u003d toString().valueOf(wordBank.getWordBank().get(question).getMeaning());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.options[0] \u003d answer;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (int i \u003d 0; i \u003c 3; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String tempWord \u003d toString().valueOf(wordBankWord[randomNumbers.get(i + 1)]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            this.options[i + 1] \u003d wordBank.getWordBank().get(tempWord).getMeaning();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        optionSequence \u003d random.nextInt(4);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 73
    }
  },
  {
    "path": "src/main/java/command/RecentlyAddedCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from user to see recently added words."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class RecentlyAddedCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected int numberOfWordsToDisplay;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected Stack\u003cWord\u003e wordHistory;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public RecentlyAddedCommand(int numberOfWordsToDisplay) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.numberOfWordsToDisplay \u003d numberOfWordsToDisplay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        wordHistory \u003d storage.loadHistoryFromFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return ui.showHistory(wordHistory, numberOfWordsToDisplay);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 24,
      "tran-quang-thanh": 4
    }
  },
  {
    "path": "src/main/java/command/SearchBeginCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class SearchBeginCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    String begin;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public SearchBeginCommand(String begin) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.begin \u003d begin;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            ArrayList\u003cString\u003e wordWithBegins \u003d bank.searchWordWithBegin(this.begin);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return ui.showSearchBegin(this.begin, wordWithBegins);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return e.showError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 26
    }
  },
  {
    "path": "src/main/java/command/SearchCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from user to find tasks containing keywords specified."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String searchTerm;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "njw95"
        },
        "content": "    public SearchCommand(String queryWord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.searchTerm \u003d queryWord;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String meaning \u003d bank.searchForMeaning(this.searchTerm);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            bank.increaseSearchCount(searchTerm);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return ui.showSearch(this.searchTerm, meaning);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } catch (NoWordFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            ArrayList\u003cString\u003e arrayList \u003d bank.getClosedWords(this.searchTerm);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (arrayList.size() \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                stringBuilder.append(\"Are you looking for these words instead?\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (int i \u003d 0; i \u003c arrayList.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                stringBuilder.append(arrayList.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return e.showError() + stringBuilder;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "njw95": 1,
      "tessa-z": 15,
      "tran-quang-thanh": 24
    }
  },
  {
    "path": "src/main/java/command/SearchFrequencyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents a command from user to see most/least searched words."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from Command class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class SearchFrequencyCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected String order;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public SearchFrequencyCommand(String order) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.order \u003d order;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String execute(Ui ui, Bank bank, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        //ask ui to print something"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        //ask tasks to store the thing in arraylist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        //ask storage to write to file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return ui.showSearchFrequency(bank.getWordBank(), order);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 24,
      "tran-quang-thanh": 3
    }
  },
  {
    "path": "src/main/java/dictionary/Bank.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package dictionary;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordAlreadyExistException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class Bank {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    WordBank wordBank;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    TagBank tagBank;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Bank(Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        wordBank \u003d new WordBank(storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        tagBank \u003d new TagBank();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordBank getWordBank() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public TagBank getTagBank() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return tagBank;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void addWord(Word word) throws WordAlreadyExistException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        wordBank.addWord(word);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        tagBank.addWordAllTags(word);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Adds a list of tags to a word in WordBank and adds the word to all tags."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordDescription word to be added tag"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tags list of tags to add"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return all tags of the word after adding to show to user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the WordBank"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public HashSet\u003cString\u003e addTag(String wordDescription, ArrayList\u003cString\u003e tags) throws NoWordFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        HashSet\u003cString\u003e tagsOfWord \u003d wordBank.addTag(wordDescription, tags);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        tagBank.addTag(wordDescription, tags);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return tagsOfWord;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Deletes a word from the WordBank and from all tags in TagBank."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param deletedWord word to be deleted"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return object Word containing the word to be deleted and its meaning"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the bank"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word getAndDelete(String deletedWord) throws NoWordFoundException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Word word \u003d wordBank.getAndDelete(deletedWord);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        tagBank.deleteWordAllTags(word);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return word;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void deleteTags(String deletedWord, ArrayList\u003cString\u003e tags,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                           ArrayList\u003cString\u003e deletedTags, ArrayList\u003cString\u003e nullTags) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        wordBank.deleteTags(deletedWord, tags, deletedTags, nullTags);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        tagBank.deleteWordSomeTags(deletedTags, deletedWord);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word getAndEditMeaning(String editedWord, String newMeaning) throws NoWordFoundException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank.getAndEditMeaning(editedWord, newMeaning);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public ArrayList\u003cString\u003e searchWordWithBegin(String begin) throws NoWordFoundException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank.searchWordWithBegin(begin);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String searchForMeaning(String searchTerm) throws NoWordFoundException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank.searchForMeaning(searchTerm);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void increaseSearchCount(String searchTerm) throws NoWordFoundException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        wordBank.increaseSearchCount(searchTerm);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public ArrayList\u003cString\u003e getClosedWords(String searchTerm) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank.getClosedWords(searchTerm);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 83
    }
  },
  {
    "path": "src/main/java/dictionary/TagBank.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package dictionary;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class TagBank {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    HashMap\u003cString, HashSet\u003cString\u003e\u003e tagBank;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public TagBank() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        tagBank \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Adds a word to some tags."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordDescription word that need to be added"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tags list of tags that will add the word"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void addTag(String wordDescription, ArrayList\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : tags) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (tagBank.containsKey(tag)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tagBank.get(tag).add(wordDescription);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tagBank.put(tag, new HashSet\u003c\u003e(Collections.singletonList(wordDescription)));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Deletes a word from all tags of that word."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to be deleted"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void deleteWordAllTags(Word word) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : word.getTags()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            tagBank.get(tag).remove(word.getWord());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Deletes a word from some tags of that word."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param deletedTags list of tags to delete the word"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param deletedWord word to be deleted"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void deleteWordSomeTags(ArrayList\u003cString\u003e deletedTags, String deletedWord) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : deletedTags) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            tagBank.get(tag).remove(deletedWord);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Adds a word to all tags in TagBank of that the word has."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to add tag"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void addWordAllTags(Word word) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : word.getTags()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (tagBank.containsKey(tag)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tagBank.get(tag).add(word.getWord());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tagBank.put(tag, new HashSet\u003c\u003e(Collections.singletonList(word.getWord())));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 64
    }
  },
  {
    "path": "src/main/java/dictionary/Word.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package dictionary;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " * Represents words stored in the Word Bank."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class Word {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String meaning;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private HashSet\u003cString\u003e tags;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Maximum ratio of difference allowed for 2 words to be considered close."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private static final double MAX_DIF_ALLOWED \u003d 0.5;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Number of times that a word is searched."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private int numberOfSearches;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * String represents the closest time that user search for a specific word."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String closetSearch;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Initializes a word without tags."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word description of the word"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param meaning meaning of the word"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word(String word, String meaning) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.meaning \u003d meaning;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.numberOfSearches \u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Initializes a word with tags."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word description of the word"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param meaning meaning of the word"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tags hash set containing tags that are added to word"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word(String word, String meaning, HashSet\u003cString\u003e tags) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.meaning \u003d meaning;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags \u003d tags;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.numberOfSearches \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void setClosetSearch(String closetSearch) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.closetSearch \u003d closetSearch;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getWord() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return word;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public int getNumberOfSearches() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return numberOfSearches;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void incrementNumberOfSearches() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        this.numberOfSearches +\u003d 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getClosetSearch() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return closetSearch;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getMeaning() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return meaning;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public HashSet\u003cString\u003e getTags() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return tags;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void addTag(String tag) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.tags.add(tag);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void editMeaning(String newMeaning) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.meaning \u003d newMeaning;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Counts the number of different characters with another word."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param another string represents word to be compared"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return number of different characters between 2 words"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private double differenceToWord(String another) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        int lengthOfShorterWord \u003d Math.min(another.length(), word.length());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (int i \u003d 0; i \u003c lengthOfShorterWord; i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (word.charAt(i) !\u003d another.charAt(i)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return count * 1.0 / lengthOfShorterWord;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Checks if 2 words are closed to each other."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param another string represents word to be compared"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return true if 2 words are closed with each other"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public boolean isClosed(String another) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return differenceToWord(another) \u003c MAX_DIF_ALLOWED;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return word + \": \" + meaning;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 6,
      "tran-quang-thanh": 114
    }
  },
  {
    "path": "src/main/java/dictionary/WordBank.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package dictionary;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.SortedMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.NoWordFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "njw95"
        },
        "content": "import command.OxfordCall;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordAlreadyExistException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WordBank {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private TreeMap\u003cString, Word\u003e wordBank;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Maps the search count (KEY) to an ordered list of words (VALUE) with that search count."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    private TreeMap\u003cInteger, TreeMap\u003cString, Word\u003e\u003e wordCount \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WordBank(Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        wordBank \u003d storage.loadFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        makeWordCount();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordBank(TreeMap\u003cString, Word\u003e wordBank) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.wordBank \u003d wordBank;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public TreeMap\u003cString, Word\u003e getWordBank() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return wordBank.isEmpty();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public TreeMap\u003cInteger, TreeMap\u003cString, Word\u003e\u003e getWordCount() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return wordCount;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected void makeWordCount() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        for (Map.Entry\u003cString, Word\u003e entry : wordBank.entrySet()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            //find key. if exists append to treemap, else create new hashmap entry"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            int numberOfSearches \u003d entry.getValue().getNumberOfSearches();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String wordText \u003d entry.getValue().getWord();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            Word wordWord \u003d entry.getValue();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (!wordCount.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                if (wordCount.containsKey(numberOfSearches)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    wordCount.get(numberOfSearches).put(wordText, wordWord);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordCount.put(numberOfSearches, new TreeMap\u003c\u003e());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordCount.get(numberOfSearches).put(wordText, wordWord);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Increases the search count for a word."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param searchTerm word that is being searched for by the user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws NoWordFoundException if word does not exist in the word bank"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void increaseSearchCount(String searchTerm) throws NoWordFoundException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (wordBank.containsKey(searchTerm)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            Word searchedWord \u003d wordBank.get(searchTerm);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            int searchCount \u003d searchedWord.getNumberOfSearches();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            searchedWord.incrementNumberOfSearches();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            wordCount.get(searchCount).remove(searchTerm);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (wordCount.get(searchCount).isEmpty()) { //treemap is empty, delete key"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordCount.remove(searchCount);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            int newSearchCount \u003d searchCount + 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (wordCount.containsKey(newSearchCount)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordCount.get(newSearchCount).put(searchTerm, searchedWord); //add directly to existing treemap"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordCount.put(newSearchCount, new TreeMap\u003c\u003e());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordCount.get(newSearchCount).put(searchTerm, searchedWord); //create new entry and add word to treemap"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            throw new NoWordFoundException(searchTerm);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Adds a word to the WordBank."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word Word object represents the word to be added"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws WordAlreadyExistException if the word has already exists in the WordBank"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void addWord(Word word) throws WordAlreadyExistException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordBank.containsKey(word.getWord())) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WordAlreadyExistException(word.getWord());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.wordBank.put(word.getWord(), word);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Looks up for meaning of a specific word."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to be searched for its meaning"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string represents meaning of that word"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the word bank nor Oxford dictionary"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String searchForMeaning(String word) throws NoWordFoundException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "njw95"
        },
        "content": "        word \u003d word.toLowerCase();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "njw95"
        },
        "content": "        if (!(wordBank.containsKey(word))) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            s \u003d \"Unable to locate \\\"\" + word + \"\\\" in local dictionary. Looking up Oxford dictionary\\n\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String result \u003d OxfordCall.onlineSearch(word);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            Word temp \u003d new Word(word, result);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            wordBank.put(word, temp);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return s + wordBank.get(word).getMeaning();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Searches for all words with a few beginning characters."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word a string represents the beginning substring"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return list of words that have that beginning substring"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if no words in the WordBank have that beginning substring"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public ArrayList\u003cString\u003e searchWordWithBegin(String word) throws NoWordFoundException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        word \u003d word.toLowerCase();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        ArrayList\u003cString\u003e arrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String upperBoundWord \u003d wordBank.ceilingKey(word);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (!upperBoundWord.startsWith(word)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(word);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        SortedMap\u003cString, Word\u003e subMap \u003d wordBank.subMap(upperBoundWord, wordBank.lastKey());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String s : subMap.keySet()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (s.startsWith(word)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                arrayList.add(s);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return arrayList;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Updates the meaning of a specific word."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordToBeEdited word whose meaning is updated"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the word bank"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    public Word getAndEditMeaning(String wordToBeEdited, String newMeaning) throws NoWordFoundException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordBank.containsKey(wordToBeEdited)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            wordBank.get(wordToBeEdited).editMeaning(newMeaning);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return wordBank.get(wordToBeEdited);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(wordToBeEdited);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Deletes a word with a specific description and return it."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word string represents a word to be deleted"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return the word itself"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the word bank"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Word getAndDelete(String word) throws NoWordFoundException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordBank.containsKey(word)) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return wordBank.remove(word);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(word);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Adds a tag to a specific word in word bank."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordToBeAddedTag word that the tag is set for"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tags new tags input by user"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return tags lists of that word"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @throws NoWordFoundException if the word doesn\u0027t exist in the word bank"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public HashSet\u003cString\u003e addTag(String wordToBeAddedTag, ArrayList\u003cString\u003e tags) throws NoWordFoundException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (!wordBank.containsKey(wordToBeAddedTag)) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new NoWordFoundException(wordToBeAddedTag);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Word word \u003d wordBank.get(wordToBeAddedTag);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : tags) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            word.addTag(tag);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return word.getTags();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Deletes tags from a word."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word string represent the word"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tagList list of tags to be deleted"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param deletedTags tags to be deleted"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param nonExistTags tags that doesn\u0027t exist in the word"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void deleteTags(String word, ArrayList\u003cString\u003e tagList,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                           ArrayList\u003cString\u003e deletedTags, ArrayList\u003cString\u003e nonExistTags) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        HashSet\u003cString\u003e tags \u003d wordBank.get(word).getTags();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : tagList) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (tags.contains(tag)) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tags.remove(tag);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                deletedTags.add(tag);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                nonExistTags.add(tag);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Checks spelling when user input a non-existing word."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to be searched"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return list of words that is considered to be close from the word user is looking for"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public ArrayList\u003cString\u003e getClosedWords(String word) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        ArrayList\u003cString\u003e closedWords \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (Word w : wordBank.values()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (w.isClosed(word)) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                closedWords.add(w.getWord());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return closedWords;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "njw95": 3,
      "tessa-z": 59,
      "tran-quang-thanh": 158,
      "kevin996231": 2
    }
  },
  {
    "path": "src/main/java/exception/ChangeSceneException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class ChangeSceneException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public ChangeSceneException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/exception/CommandEmptyException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class CommandEmptyException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public CommandEmptyException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\"  OOPS: Command cannot be empty, please input a command.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tessa-z": 1,
      "tran-quang-thanh": 5
    }
  },
  {
    "path": "src/main/java/exception/CommandInvalidException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class CommandInvalidException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public CommandInvalidException(String falseCommand) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\" OOPS: I don\u0027t understand what you have entered: \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.command \u003d falseCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return this.getMessage() + command + \"\\nPlease check help for more information on what command you can use.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tessa-z": 1,
      "tran-quang-thanh": 13
    }
  },
  {
    "path": "src/main/java/exception/EmptyWordException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class EmptyWordException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public EmptyWordException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\" OOPS: Your input word is empty\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tessa-z": 1,
      "tran-quang-thanh": 5
    }
  },
  {
    "path": "src/main/java/exception/InvalidAnswerException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class InvalidAnswerException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public InvalidAnswerException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"This is not a valid answer.\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"Please type a number from 1 to 4\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 8
    }
  },
  {
    "path": "src/main/java/exception/NoWordFoundException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class NoWordFoundException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private String searchWord;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public NoWordFoundException(String searchWord) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\" OOPS: I cannot find the your word: \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.searchWord \u003d searchWord;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return (this.getMessage() + \"\\\"\" + searchWord + \"\\\" \\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 14
    }
  },
  {
    "path": "src/main/java/exception/WordAlreadyExistException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WordAlreadyExistException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordAlreadyExistException(String word) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\" OOPS: This word has already exists in the bank\\n\" + word);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/exception/WordBankEmptyException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class WordBankEmptyException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordBankEmptyException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\" OOPS: Your word bank is empty. Please input a word before viewing list.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tessa-z": 1,
      "tran-quang-thanh": 5
    }
  },
  {
    "path": "src/main/java/exception/WordBankNotEnoughForQuizException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WordBankNotEnoughForQuizException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WordBankNotEnoughForQuizException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"Words not enough. Need at least 4 words to make a quiz! \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"Please type \\\"exit_quiz\\\" to go back to main page to add more words\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 8
    }
  },
  {
    "path": "src/main/java/exception/WordUpException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents the exception object used to handle errors thrown in the main execution."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Inherits from the Exception class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class WordUpException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WordUpException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WordUpException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 8,
      "tran-quang-thanh": 12
    }
  },
  {
    "path": "src/main/java/exception/WrongAddFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongAddFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongAddFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\" OOPS: Expected format \\\"add w/WORD m/MEANING [t/TAG]\\\"\\n\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/exception/WrongAddTagFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongAddTagFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongAddTagFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\" OOPS: Expected format \\\"tag w/WORD t/TAG...\\\"\\n\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tran-quang-thanh": 6
    }
  },
  {
    "path": "src/main/java/exception/WrongDeleteFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongDeleteFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Creates an exception if user input the wrong format for delete command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongDeleteFormatException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\" OOPS: Your input format is incorrect\" + \"\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"If you want to delete tag(s):\\n    Expected format \\\"delete w/WORD_TO_BE_DELETED [t/TAG]...\\\"\" + \"\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"If you want to delete word:\\n      Expected format \\\"delete w/WORD_TO_BE_DELETED\\\"\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 12
    }
  },
  {
    "path": "src/main/java/exception/WrongEditFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "public class WrongEditFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    public WrongEditFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        super(\" OOPS: Expected format \\\"edit w/WORD m/MEANING \\\"\\n\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevin996231": 7
    }
  },
  {
    "path": "src/main/java/exception/WrongFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public abstract class WrongFormatException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongFormatException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(message + \"\\n You can type \\\"help\\\" to check the correct format\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 1,
      "tran-quang-thanh": 6
    }
  },
  {
    "path": "src/main/java/exception/WrongHistoryFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class WrongHistoryFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WrongHistoryFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\" OOPS: Expected format \\\"history {int value}\\\"\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tessa-z": 6
    }
  },
  {
    "path": "src/main/java/exception/WrongListFormatDescription.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongListFormatDescription extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongListFormatDescription() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\" OOPS: Expected format \\\"list [o/ORDER]\\\"\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"(ORDER can be \\\"asc\\\" for ascending and \\\"desc\\\" for descending\\n\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 8
    }
  },
  {
    "path": "src/main/java/exception/WrongQuizFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongQuizFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongQuizFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\"Only \\\"quiz\\\" is enough for this command\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/exception/WrongSearchBeginFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongSearchBeginFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongSearchBeginFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(\" OOPS: Expected format \\\"search_begin w/WORD_TO_BE_SEARCHED\\\"\\n\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 7
    }
  },
  {
    "path": "src/main/java/exception/WrongSearchFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class WrongSearchFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public WrongSearchFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\" OOPS: Expected format \\\"search w/WORD_TO_BE_SEARCHED\\\"\\n\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tran-quang-thanh": 6
    }
  },
  {
    "path": "src/main/java/exception/WrongSearchFrequencyFormatException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class WrongSearchFrequencyFormatException extends WrongFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public WrongSearchFrequencyFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        super(\" OOPS: Expected format \\\"freq [o/ORDER]\\\"\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                + \"(ORDER can be \\\"asc\\\" for ascending and \\\"desc\\\" for descending\\n\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 8
    }
  },
  {
    "path": "src/main/java/exception/ZeroHistoryRequestException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class ZeroHistoryRequestException extends WordUpException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public ZeroHistoryRequestException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chelsea148629"
        },
        "content": "        super(\" OOPS: Please enter a number more than 0.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chelsea148629": 1,
      "tessa-z": 5,
      "tran-quang-thanh": 1
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.QuizCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.BadCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.AddTagCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.SearchCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import command.RecentlyAddedCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import command.SearchFrequencyCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.EditCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.SearchBeginCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "import command.HelpCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.CommandInvalidException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.EmptyWordException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WordUpException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongAddFormatException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongDeleteFormatException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongSearchFormatException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongListFormatDescription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongHistoryFormatException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.ZeroHistoryRequestException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongSearchFrequencyFormatException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongEditFormatException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongAddTagFormatException;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import exception.WrongQuizFormatException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WrongSearchBeginFormatException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Creates a Command object after extracting information needed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Extracts the command specified in the user input and creates the respective command objects."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param input user input from command line"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return respective Command class objects"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String[] taskInfo \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String userCommand \u003d taskInfo[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            Command command;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (userCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                command \u003d parseHelp(taskInfo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"add\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseAdd(taskInfo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseDelete(taskInfo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"search\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseSearch(taskInfo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else if (userCommand.equals(\"search_begin\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                command \u003d parseSearchBegin(taskInfo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseList(taskInfo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"history\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseHistory(taskInfo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"freq\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseSearchFrequency(taskInfo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"edit\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseEdit(taskInfo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"tag\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseTag(taskInfo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else if (userCommand.equals(\"quiz\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                command \u003d parseQuiz(taskInfo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    throw new CommandInvalidException(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                } catch (CommandInvalidException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    command \u003d new BadCommand(e.showError());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } catch (WordUpException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return new BadCommand(e.showError());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses an add command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     * @return an HelpCommand object"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    protected static Command parseHelp(String[] taskInfo) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return new HelpCommand(\"\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        return new HelpCommand(taskInfo[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     * Parses a help command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return an AddCommand object"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongAddFormatException when the format of the delete command does not match the required format"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws EmptyWordException when there is no word entered with the command"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseAdd(String[] taskInfo) throws WrongAddFormatException, EmptyWordException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongAddFormatException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String[] wordDetail \u003d taskInfo[1].split(\"w/\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordDetail.length !\u003d 2) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongAddFormatException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        wordDetail \u003d wordDetail[1].split(\"m/\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordDetail.length !\u003d 2) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongAddFormatException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String wordDescription \u003d wordDetail[0].trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordDescription.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new EmptyWordException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String[] meaningAndTag \u003d wordDetail[1].split(\"t/\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String meaning \u003d meaningAndTag[0].trim();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (meaning.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new EmptyWordException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Word word;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (meaningAndTag.length \u003e 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            HashSet\u003cString\u003e tags \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (int j \u003d 1; j \u003c meaningAndTag.length; ++j) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tags.add(meaningAndTag[j]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            word \u003d new Word(wordDescription, meaning, tags);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            word \u003d new Word(wordDescription, meaning);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return new AddCommand(word);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses a delete command."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a DeleteCommand object"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongDeleteFormatException when the format of the delete command does not match required format"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseDelete(String[] taskInfo) throws WrongDeleteFormatException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongDeleteFormatException();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String[] wordAndTags \u003d taskInfo[1].split(\"t/\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordAndTags.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return new DeleteCommand(taskInfo[1].substring(2));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String wordDescription \u003d wordAndTags[0].substring(2).trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (int i \u003d 1; i \u003c wordAndTags.length; ++i) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                tags.add(wordAndTags[i].trim());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return new DeleteCommand(wordDescription, tags);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses a search command."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a SearchCommand object"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongSearchFormatException when the format of the search command does not match required format"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseSearch(String[] taskInfo) throws WrongSearchFormatException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongSearchFormatException();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return new SearchCommand(taskInfo[1].substring(2).trim());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected static Command parseSearchBegin(String[] taskInfo) throws WrongSearchBeginFormatException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongSearchBeginFormatException();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return new SearchBeginCommand(taskInfo[1].substring(2).trim());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses a list command."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a ListCommand object"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongListFormatDescription when the format of the list command does not match required format"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseList(String[] taskInfo) throws WrongListFormatDescription {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String order \u003d \"\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (taskInfo.length \u003e 1) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (!taskInfo[1].startsWith(\"o/\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                throw new WrongListFormatDescription();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            order \u003d taskInfo[1].substring(2);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (!order.equals(\"asc\") \u0026\u0026 !order.equals(\"desc\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                throw new WrongListFormatDescription();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return new ListCommand(order);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses a history command which requests for the list of words in order of entry."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a HistoryCommand object"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongHistoryFormatException when the format of the history command does not match required format"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws ZeroHistoryRequestException when the requested number of entries to be shown is zero"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseHistory(String[] taskInfo)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            throws WrongHistoryFormatException, ZeroHistoryRequestException {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        int numberOfWordsToDisplay;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            throw new WrongHistoryFormatException();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (taskInfo[1].equals(\"0\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            throw new ZeroHistoryRequestException();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            numberOfWordsToDisplay \u003d Integer.parseInt(taskInfo[1]);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            throw new WrongHistoryFormatException();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return new RecentlyAddedCommand(numberOfWordsToDisplay);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses a frequency command which requests for a list of the number of searches for each word."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a SearchFrequencyCommand object"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongSearchFrequencyFormatException when format of the frequency command does not match required format"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseSearchFrequency(String[] taskInfo) throws WrongSearchFrequencyFormatException {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        String order \u003d \"\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (taskInfo.length \u003e 1) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (!taskInfo[1].startsWith(\"o/\")) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                throw new WrongSearchFrequencyFormatException();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            order \u003d taskInfo[1].substring(2);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            if (!order.equals(\"asc\") \u0026\u0026 !order.equals(\"desc\")) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                throw new WrongSearchFrequencyFormatException();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return new SearchFrequencyCommand(order);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses an edit command."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return an EditCommand object"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongEditFormatException when the format of the edit command does not match required format"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseEdit(String[] taskInfo) throws WrongEditFormatException {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            throw new WrongEditFormatException();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        String[] wordAndMeanings \u003d taskInfo[1].split(\"m/\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        if (wordAndMeanings.length !\u003d 2) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            throw new WrongEditFormatException();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        String wordDescription \u003d wordAndMeanings[0].substring(2).trim();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        String meaning \u003d wordAndMeanings[1];"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        return new EditCommand(wordDescription, meaning);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses an add tag command."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a AddTagCommand object"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongAddTagFormatException when the format of the add tag command does not match required format"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseTag(String[] taskInfo) throws WrongAddTagFormatException {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (taskInfo.length \u003d\u003d 1 || !taskInfo[1].startsWith(\"w/\")) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongAddTagFormatException();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String[] wordAndTags \u003d taskInfo[1].split(\"t/\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (wordAndTags.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongAddTagFormatException();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String wordDescription \u003d wordAndTags[0].substring(2).trim();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (int i \u003d 1; i \u003c wordAndTags.length; ++i) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            tags.add(wordAndTags[i].trim());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return new AddTagCommand(wordDescription, tags);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Parses a quiz command."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param taskInfo String array containing first stage parsed user input"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a QuizCommand object"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @throws WrongQuizFormatException when the format of the quiz command does not match required format"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    protected static Command parseQuiz(String[] taskInfo) throws WrongQuizFormatException {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (taskInfo.length \u003e 1) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new WrongQuizFormatException();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return new QuizCommand();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 176,
      "tran-quang-thanh": 104,
      "kevin996231": 24
    }
  },
  {
    "path": "src/main/java/scene/Box.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class Box extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Creates a dialogue box."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param l text represents command from user and reply from bot"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param iv image user and bot"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Box(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Changes the position of dialogue box to the other side."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public static Box getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return new Box(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Returns the dialogue box of bot."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param l box to show reply from bot"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param iv avatar of bot"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a dialogue box"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public static Box getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        var db \u003d new Box(l, iv);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 57
    }
  },
  {
    "path": "src/main/java/scene/MainScene.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.QuizCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.ChangeSceneException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordUpException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class MainScene extends NewScene {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public MainScene(Ui ui, Bank bank, Storage storage, Stage window) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(ui, bank, storage, ui.greet(), window);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        setupHandleInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Scene getScene() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return scene;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void resolveException(WordUpException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        window.setScene(new QuizScene(ui, bank, storage, window).getScene());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getResponse(String fullCommand) throws ChangeSceneException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (c instanceof QuizCommand) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new ChangeSceneException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return c.execute(ui, bank, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 38
    }
  },
  {
    "path": "src/main/java/scene/NewScene.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordUpException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public abstract class NewScene {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Scene scene;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected AnchorPane layout;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Bank bank;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected String greet;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Stage window;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Creates a new scene."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param ui to interact with user"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param bank to store all words data"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param storage extracted file to store all data"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param greet greeting from bot to user when user moves to a new scene"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param window main window containing the scene"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public NewScene(Ui ui, Bank bank, Storage storage, String greet, Stage window) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.window \u003d window;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.greet \u003d greet;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.bank \u003d bank;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        layout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        layout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scene \u003d new Scene(layout);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        layout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scrollPane.setPrefSize(400, 570);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        userInput.setPrefWidth(340.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        sendButton.setPrefWidth(50.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Label userText \u003d new Label(greet);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                Box.getDukeDialog(userText, new ImageView(duke))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected void setupHandleInput() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } catch (WordUpException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                resolveException(e);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } catch (WordUpException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                resolveException(e);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected void handleUserInput() throws WordUpException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                Box.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                Box.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected void resolveException(WordUpException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected String getResponse(String fullCommand) throws WordUpException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return c.execute(ui, bank, storage);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected Scene getScene() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return scene;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 140
    }
  },
  {
    "path": "src/main/java/scene/QuizScene.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "package scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Bank;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import command.QuizCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.ChangeSceneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.InvalidAnswerException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordBankNotEnoughForQuizException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.CommandInvalidException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import exception.WordUpException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "public class QuizScene extends NewScene {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private QuizCommand quizCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    boolean startQuiz \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public QuizScene(Ui ui, Bank bank, Storage storage, Stage window) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        super(ui, bank, storage, ui.quizGreet(), window);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        setupHandleInput();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public Scene getScene() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String getResponse(String fullCommand)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throws ChangeSceneException, InvalidAnswerException,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            WordBankNotEnoughForQuizException, CommandInvalidException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (fullCommand.equals(\"exit_quiz\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            throw new ChangeSceneException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (!startQuiz) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            if (fullCommand.equals(\"start\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                generateQuiz();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                startQuiz \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return ui.quizDisplay(quizCommand.question, quizCommand.options, quizCommand.optionSequence);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                throw new CommandInvalidException(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                int i \u003d Integer.parseInt(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (i \u003c 1 || i \u003e 4) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    throw new InvalidAnswerException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                if (fullCommand.equals(Integer.toString((4 - quizCommand.optionSequence) % 4 + 1))) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    s \u003d ui.quizResponse(true, quizCommand.answer);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    s \u003d ui.quizResponse(false, quizCommand.answer);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                generateQuiz();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                return s + \"\\n\" + ui.quizDisplay(quizCommand.question, quizCommand.options, quizCommand.optionSequence);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                throw new InvalidAnswerException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    private void generateQuiz() throws WordBankNotEnoughForQuizException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        quizCommand \u003d new QuizCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        quizCommand.generateQuiz(bank.getWordBank());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    protected void handleUserInput() throws ChangeSceneException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        Label dukeText;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } catch (InvalidAnswerException | WordBankNotEnoughForQuizException | CommandInvalidException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            dukeText \u003d new Label(e.showError());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                Box.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                Box.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public void resolveException(WordUpException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (e instanceof ChangeSceneException) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            window.setScene(new MainScene(ui, bank, storage, window).getScene());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tran-quang-thanh": 93
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents the object that reads and writes to the text files where data is stored."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    private static String FILE_PATH;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        FILE_PATH \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Converts all data from text file in storage to list of words."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return an arraylist containing all words in dictionary ordered by ALPHABET"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public TreeMap\u003cString, Word\u003e loadFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            TreeMap\u003cString, Word\u003e wordBank \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                // get data from storage"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                // parse the line first"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                if (line.equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    line \u003d br.readLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                String[] parsedWordAndMeaning \u003d line.split(\":\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                Word word \u003d new Word(parsedWordAndMeaning[0].trim(), parsedWordAndMeaning[1].trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordBank.put(word.getWord(), word);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return wordBank;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Converts all data from the text file in the order it is written in."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Stack structure used because the first words to be extracted are the last ones added to stack."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a stack containing all input words ordered by SEQUENCE OF ENTRY"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public Stack\u003cWord\u003e loadHistoryFromFile() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            Stack\u003cWord\u003e wordHistory \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                // get data from storage"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                // parse the line first"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                if (line.equals(\"\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    line \u003d br.readLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                String[] parsedWordAndMeaning \u003d line.split(\":\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                Word word \u003d new Word(parsedWordAndMeaning[0].trim(), parsedWordAndMeaning[1].trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                wordHistory.add(word);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            return wordHistory;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Writes data to an extracted file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param s new word to be added"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param append return true if the file can be appended"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public void writeFile(String s, boolean append) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedWriter bw \u003d null;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            fw \u003d new FileWriter(file, append);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            bw.write(s);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            bw.newLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                bw.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Deletes an item from file."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param oldString a string to be deleted"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public void deleteFromFile(String oldString) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            while ((line !\u003d null) \u0026\u0026 (!line.equals(\"\\n\"))) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            oldContent \u003d oldContent.substring(0, oldContent.length() - 1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            String newContent \u003d oldContent.replace(oldString, \"\").trim();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            Storage writer \u003d new Storage();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            writer.writeFile(newContent,false);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Updates a word in extracted file."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param oldString value of old word"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param newString value of word after updated"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    public void editFromFile(String oldString,String newString) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            while ((line !\u003d null) \u0026\u0026 (!line.equals(\"\\n\"))) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                oldContent \u003d oldContent + line + System.lineSeparator();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            oldContent \u003d oldContent.substring(0, oldContent.length() - 1);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            String newContent \u003d oldContent.replace(oldString, newString).trim();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            Storage writer \u003d new Storage();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            writer.writeFile(newContent,false);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                br.close();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                fr.close();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tessa-z": 62,
      "-": 113,
      "tran-quang-thanh": 25,
      "kevin996231": 5
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.Word;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import dictionary.WordBank;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " * Represents the object that displays prompts and feedback from the system to the user\u0027s commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tessa-z"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Greets users when they open the app."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a greeting string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return (\"\\n                      |   | _ _ _|   /  \\\\ _  \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                + \"                      |/\\\\|(_)| (_|  \\\\__/|_) \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                + \"                                            |   \\n\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                + \"Welcome, what would you like to do today?\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Greets user when they move to quiz scene."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a greeting string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String quizGreet() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return (\"\\n                      |   | _ _ _|   /  \\\\ _  \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    + \"                      |/\\\\|(_)| (_|  \\\\__/|_) \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"                                            |   \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"Let\u0027s do some quiz to enhance your word knowledge \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"Type \\\"start\\\" to begin quiz or \\\"exit_quiz\\\" to go back\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showDeleted(Word w) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return \"Noted. I\u0027ve removed this word:\\n\" + w.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showAdded(Word w) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return \"Got it. I\u0027ve added this word:\\n\" + w.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    public String showEdited(Word w) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        return \"Got it. I\u0027ve edited this word:\\n\" + w.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Shows the tags to be added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to add tag"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tags list of tags to be added"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param tagList hash set represents existed tags of the word"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string shown when command is completed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showAddTag(String word, ArrayList\u003cString\u003e tags, HashSet\u003cString\u003e tagList) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String returnedString \u003d \"I have added \" + (tags.size() \u003d\u003d 1 ? \"this tag \\\"\" + tags.get(0) + \"\\\"\" : \"these tags\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \" to word \\\"\" + word + \"\\\"\" + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        returnedString +\u003d \"Here \" + (tagList.size() \u003d\u003d 1 ? \"is the tag \" : \"are the tags \")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                + \"of word \\\"\" + word + \"\\\"\" + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String tag : tagList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            stringBuilder.append(tag + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return returnedString + stringBuilder.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Shows the list of all words in the word bank."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordBank to store all words"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param order order to show words (ascending / descending)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string shown when command is completed"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showList(TreeMap\u003cString, Word\u003e wordBank, String order) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String returnedString \u003d \"Here are your words:\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (order.equals(\"asc\") || order.equals(\"\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (Map.Entry\u003cString, Word\u003e entry : wordBank.entrySet()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                returnedString +\u003d entry.getValue() + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (String description : wordBank.descendingKeySet()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                returnedString +\u003d wordBank.get(description) + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return returnedString;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Shows completion when tags are deleted from words."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word word to be deleted tags"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param deletedTags list containing tags to delete from word"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string shown when command is completed"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showDeletedTags(String word, ArrayList\u003cString\u003e deletedTags) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (deletedTags.size() \u003e 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            stringBuilder.append(\"I have removed \" + (deletedTags.size() \u003d\u003d 1 ? \"this tag \" : \"these tags \")"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    + \"from the word \\\"\" + word + \"\\\"\" + \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (String tag : deletedTags) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                stringBuilder.append(tag + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Shows non-existing tags of the words that are searched."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param word a string represents a word to be searched for tags"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param nullTags list of non-existing tags that are searched"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string to show all non-existing tags"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showNullTags(String word, ArrayList\u003cString\u003e nullTags) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (nullTags.size() \u003e 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            stringBuilder.append((nullTags.size() \u003d\u003d 1 ? \"This tag \" : \"These tags \")"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    + \"doesn\u0027t exist in the word \\\"\" + word + \"\\\"\" + \"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            for (String tag : nullTags) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                stringBuilder.append(tag + \"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showSearch(String description, String meaning) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return (\"Here is the meaning of \" + description + \": \" + meaning + \"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * Shows a list of words ordered by their search count in ascending or descending order as specified by the user."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param wordBank a main class object containing the word bank content"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @param order the order (asc/desc) in which to display the word list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     * @return a string to show list of words and their search count"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    public String showSearchFrequency(WordBank wordBank, String order) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        TreeMap\u003cInteger, TreeMap\u003cString, Word\u003e\u003e wordCount \u003d wordBank.getWordCount(); //get map ordered by word count"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        String returnedString \u003d \"You have searched for these words \";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (order.equals(\"asc\") || order.equals(\"\")) { //list in ascending order"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            returnedString +\u003d \"least:\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            for (Map.Entry\u003cInteger, TreeMap\u003cString, Word\u003e\u003e entry : wordCount.entrySet()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                returnedString +\u003d entry.getKey() + \" searches -\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                for (Map.Entry\u003cString, Word\u003e word : entry.getValue().entrySet()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    returnedString +\u003d word.getKey() + \"\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } else { //list in descending order"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            returnedString +\u003d \"most:\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            for (Integer searchCount : wordCount.descendingKeySet()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                returnedString +\u003d searchCount + \" searches -\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                for (Map.Entry\u003cString, Word\u003e word : wordCount.get(searchCount).entrySet()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                    returnedString +\u003d word.getKey() + \"\\n\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        return returnedString;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tessa-z"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Shows a string to inform the completion when user look for search history."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordHistory stack containing the closest searches"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param numberOfWordsToDisplay number of closest searched words to display"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string shown when command is completed"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showHistory(Stack\u003cWord\u003e wordHistory, int numberOfWordsToDisplay) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        int numberOfWords;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        if (numberOfWordsToDisplay \u003e wordHistory.size()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            s +\u003d \"The number of words requested exceeds the number of words in your word bank.\\n\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            numberOfWords \u003d wordHistory.size();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            numberOfWords \u003d numberOfWordsToDisplay;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        s +\u003d (\"Here are the last \" + numberOfWords + \" words you have added:\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        for (int i \u003d 0; i \u003c numberOfWords; i++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            s +\u003d wordHistory.peek() + \"\\n\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "            wordHistory.pop();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tessa-z"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     * Shows a string containing description and format of a specific instruction."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     * @param instruction name of the instruction which user wants to know more"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     * @return a string to show manual of specific instruction"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    public String showHelp(String instruction) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        if (instruction.equals(\"add\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Add a word to wordbank.\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "                    + \"Format: add w/WORD m/MEANING [t/TAG]\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"delete\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Delete a word or tag from wordbank.\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: delete w/WORD_TO_BE_DELETED [t/TAG]\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"exit\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Exit WordUp.\\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: exit\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"search\")) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Search the meaning of a specific word.\\n\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: search w/WORD_TO_BE_SEARCHED\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Show the list of words in wordbank.\\n\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: list [o/ORDER]\\n\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"(ORDER can be \\\"asc\\\" for ascending and \\\"desc\\\" for descending)\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"history\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"View recent search history.\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: history {int value}\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"freq\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Show search frequency of each word.\\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: freq [o/ORDER]\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"(ORDER can be \\\"asc\\\" for ascending and \\\"desc\\\" for descending)\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"edit\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Edit the meaning of word.\\n\""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: edit w/WORD m/MEANING\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"tag\")) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Add tags of a specific word.\\n\""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: tag w/WORD t/TAG...\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else if (instruction.equals(\"quiz\")) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Take a quiz to test yourself.\\n\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Format: quiz\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "            return \"Here are the instructions for WordUp.\\n\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"add, delete, edit, exit, freq, help, history, list, search, tag, quiz\\n\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "                    + \"Enter \\\"help [instruction]\\\" for more details.\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kevin996231"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kevin996231"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Displays quiz to ask user."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param question word to be asked for meaning"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param options options available to be chosen"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param optionSequence sequence of the options"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string shown when the command is completed"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String quizDisplay(String question, String[] options, int optionSequence) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        String s \u003d (\"What is the meaning of \" + question + \"?\\n\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (int i \u003d optionSequence; i \u003c optionSequence + 4; i++) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            s +\u003d (index + \".\" + options[i % 4] + \"  \");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        s +\u003d \"\\n\";"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Shows respond of bot when user input the answer."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param isCorrect is true if user get the correct answer"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param answer correct answer"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string shown when the command is completed"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String quizResponse(Boolean isCorrect, String answer) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        if (isCorrect) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return (\"Yes!! The correct answer is \\\"\" + answer + \"\\\".\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            return (\"Sorry, The answer is \\\"\" + answer + \"\\\".\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * Shows to user all words that have a specific beginning."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param begin begin substring to be searched"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @param wordWithBegins list of all words that have that begin substring"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     * @return a string shown to user when the command is completed"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "    public String showSearchBegin(String begin, ArrayList\u003cString\u003e wordWithBegins) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        stringBuilder.append((wordWithBegins.size() \u003d\u003d 1) ? \"This is a word that has \" : \"These are words that have\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        stringBuilder.append(\"the same meaning as \" + begin + \"\\n\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        for (String s : wordWithBegins) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "            stringBuilder.append(s + \"\\n\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tran-quang-thanh"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tessa-z": 49,
      "-": 30,
      "tran-quang-thanh": 153,
      "kevin996231": 46
    }
  }
]
