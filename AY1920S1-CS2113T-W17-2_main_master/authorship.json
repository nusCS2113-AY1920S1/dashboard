[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \u0027wallet.Main\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    compile group: \u0027com.opencsv\u0027, name: \u0027opencsv\u0027, version: \u00274.6\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    archiveBaseName \u003d \"test\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"1.0\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 2,
      "-": 39
    }
  },
  {
    "path": "src/main/java/wallet/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "     * The Ui object that handles input and output of the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * The TaskList object that handles the list of task added by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private LogicManager logicManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs a new Main object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        logicManager \u003d new LogicManager();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Execute and run the Duke application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.welcomeMsg();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getReminder().autoRemindStart();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            String fullCommand \u003d ui.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author Xdecosee"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (\"help\".equalsIgnoreCase(fullCommand)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                ui.showHelp(logicManager.getHelpList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            isExit \u003d logicManager.execute(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ui.byeMsg();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 11,
      "kyang96": 4,
      "A0171206R": 1,
      "-": 31
    }
  },
  {
    "path": "src/main/java/wallet/exception/InsufficientParameters.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class InsufficientParameters extends ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public InsufficientParameters(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.message \u003d errorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 15
    }
  },
  {
    "path": "src/main/java/wallet/exception/WrongDateTimeFormat.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class WrongDateTimeFormat extends DateTimeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public WrongDateTimeFormat(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.message \u003d errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 16
    }
  },
  {
    "path": "src/main/java/wallet/exception/WrongParameterFormat.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class WrongParameterFormat extends NumberFormatException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public WrongParameterFormat(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.message \u003d errorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 15
    }
  },
  {
    "path": "src/main/java/wallet/logic/LogicManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.InsufficientParameters;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.exception.WrongDateTimeFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.parser.ExpenseParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.parser.ParserManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.WalletList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.currency.CurrencyList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.help.Help;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.reminder.Reminder;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.storage.CurrencyStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.storage.HelpStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.storage.StorageManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The LogicManager Class handles the logic of Wallet."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class LogicManager {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_COMMAND \u003d \"An error encountered while executing command.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private CurrencyStorage currencyStorage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static StorageManager storageManager;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ParserManager parserManager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static Wallet wallet;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static Reminder reminder;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static ArrayList\u003cString\u003e commandHistory;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static WalletList walletList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int state \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private ArrayList\u003cHelp\u003e helpList;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a LogicManager object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public LogicManager() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.currencyStorage \u003d new CurrencyStorage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        HelpStorage helpStorage \u003d new HelpStorage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cHelp\u003e helpData \u003d  helpStorage.helpData();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.helpList \u003d helpData;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.storageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.wallet \u003d new Wallet(new CurrencyList(currencyStorage.loadFile()),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                new BudgetList(storageManager.loadBudget()),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(storageManager.loadExpense()),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                new ContactList(storageManager.loadContact()),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                new LoanList(storageManager.loadLoan()),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                helpList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this.parserManager \u003d new ParserManager();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.commandHistory \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.walletList \u003d new WalletList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        walletList.getWalletList().add(wallet);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.reminder \u003d new Reminder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param fullCommand The full command input by user."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A boolean isExit."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(String fullCommand) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author A0171206R"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        StorageManager newStorageManager \u003d new StorageManager();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet newWallet \u003d new Wallet(new CurrencyList(currencyStorage.loadFile()),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new BudgetList(newStorageManager.loadBudget()),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(newStorageManager.loadExpense()),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(newStorageManager.loadContact()),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new LoanList(newStorageManager.loadLoan()),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                helpList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Command command \u003d parserManager.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (command !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (!fullCommand.contains(\"undo\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        \u0026\u0026 !fullCommand.contains(\"list\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        \u0026\u0026 !fullCommand.contains(\"help\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        \u0026\u0026 !fullCommand.contains(\"history\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        \u0026\u0026 !fullCommand.contains(\"redo\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        \u0026\u0026 !fullCommand.contains(\"view\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    if (walletList.getState() \u003d\u003d walletList.getWalletList().size() - 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        walletList.getWalletList().add(newWallet);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        state++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        walletList.setState(state);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        //Remove the unused wallet states as newly added wallet"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        // will be part of a different \u0027branch\u0027"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        removeUnusedNodes(walletList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        walletList.getWalletList().add(newWallet);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        state \u003d walletList.getState() + 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        walletList.setState(state);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                isExit \u003d command.execute(walletList.getWalletList().get(walletList.getState()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ExpenseParser.updateRecurringRecords(walletList.getWalletList().get(walletList.getState()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                boolean isModified \u003d newStorageManager.save(walletList.getWalletList().get(walletList.getState()));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (isModified) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    commandHistory.add(fullCommand);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_COMMAND);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (WrongDateTimeFormat | WrongParameterFormat | InsufficientParameters | ParseException err) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printError(err.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_COMMAND);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Remove unused wallet objects."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param walletList The WalletList object."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void removeUnusedNodes(WalletList walletList) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author A0171206R"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int maxState \u003d walletList.getWalletList().size() - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int currentState \u003d walletList.getState();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int loops \u003d maxState - currentState;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        while (loops \u003e 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            walletList.getWalletList().remove(maxState);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            maxState--;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loops--;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        walletList.setState(walletList.getWalletList().size() - 1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the Reminder object."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Reminder object."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static Reminder getReminder() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return reminder;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the ArrayList commandHistory."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList commandHistory."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static ArrayList\u003cString\u003e getCommandHistory() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return commandHistory;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static WalletList getWalletList() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return walletList;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void setWalletList(WalletList walletList1) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        walletList \u003d walletList1;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Gets list of help sections."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list of help sections."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ArrayList\u003cHelp\u003e getHelpList() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return helpList;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 16,
      "kyang96": 4,
      "matthewng1996": 8,
      "A0171206R": 128,
      "-": 21
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The AddCommand Class which extends Command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"add\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"The format for add command is:\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nadd expense \u003cdescription\u003e $\u003camount\u003e \u003ccategory\u003e [/on \u003cdate\u003e] [/r \u003crecurrence rate\u003e].\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nThe options for recurrence rate (/r) are \\\\\\\"daily, weekly or monthly\\\\\\\"\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nThe options for category are \\\\\\\"food, transport, bills, shopping or others\\\\\\\"\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense Lunch $5 Food\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense Phone Bills $100 bills /on 10/10/2019 /r monthly\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_SUCCESS_ADD_CONTACT \u003d \"Got it. I\u0027ve added this contact.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String MESSAGE_SUCCESS_ADD_EXPENSE \u003d \"Got it. I\u0027ve added this expense:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_ADD_LOAN \u003d \"Got it. I\u0027ve added this loan:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NEW_REMAINING_BUDGET \u003d \" is your budget left for \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EXCEED_BUDGET \u003d \"Your budget has exceeded!!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_REACH_BUDGET \u003d \"You have reached your budget!!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private Expense expense \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private Contact contact \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Loan loan \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the AddCommand object with Expense object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expense The Expense Object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Expense expense) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.expense \u003d expense;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the AddCommand object with Contract object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contact The Contract object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand(Contact contact) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contact \u003d contact;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the AddCommand object with Loan object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan The Loan object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public AddCommand(Loan loan) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loan \u003d loan;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Add the Record objects into their respective lists and returns false."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return a boolean variable which indicates"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        if (expense !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            wallet.getExpenseList().addExpense(expense);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            LocalDate date \u003d expense.getDate();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            for (Budget b : wallet.getBudgetList().getBudgetList()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (b.getMonth() \u003d\u003d date.getMonthValue() \u0026\u0026 b.getYear() \u003d\u003d date.getYear()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    BigDecimal monthBudget \u003d BigDecimal.valueOf(b.getAmount());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    BigDecimal expenseSum \u003d BigDecimal.valueOf(wallet.getExpenseList()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            .getMonthExpenses(b.getMonth(), b.getYear()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    BigDecimal accountedAmount \u003d BigDecimal.valueOf(b.getAccountedExpenseAmount());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    double remainingBudget \u003d monthBudget.subtract(expenseSum).add(accountedAmount).doubleValue();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    b.setExpenseTakenIntoAccount(true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (remainingBudget \u003c 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_EXCEED_BUDGET);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else if (remainingBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_REACH_BUDGET);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"$\" + remainingBudget + MESSAGE_NEW_REMAINING_BUDGET"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[b.getMonth() - 1] + \" \" + b.getYear());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_ADD_EXPENSE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Ui.printExpense(expense);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        if (contact !\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            wallet.getContactList().addContact(contact);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getContactList().setModified(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_ADD_CONTACT);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author Xdecosee"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printContact(contact);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author A0171206R"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (loan !\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getLoanList().addLoan(loan);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_ADD_LOAN);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printLoanTableHeaders();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printLoanRow(loan);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printLoanTableClose();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 5,
      "matthewng1996": 24,
      "kyang96": 11,
      "A0171206R": 43,
      "-": 31
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a boolean indicating whether the user wants to continue running the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A boolean indicating whether the user wants to continue running the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract boolean execute(Wallet wallet);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 6,
      "-": 8
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/CurrencyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.thread.CurrencyThread;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class CurrencyCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"currency\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NO_CURRENCY \u003d \"There is no such currency found for the conversion to \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_SUCCESSFUL_CONVERSION \u003d \"Your currency is converted to the country of \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Error in format for command.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" singapore\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" south korea\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public CurrencyCommand(String type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (type !\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            CurrencyThread currencyThread \u003d new CurrencyThread(wallet, type);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 33
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * DeleteCommand class handles any command that involves deletion of Record objects."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Format for delete command:\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\ndelete expense \u003cid\u003e\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense 2\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DELETE_EXPENSE \u003d \"Noted. I\u0027ve removed this expense:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DELETE_LOAN \u003d \"Noted. I\u0027ve removed this loan:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DELETE_CONTACT \u003d \"Noted. I\u0027ve removed this contact:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_DELETE_EXPENSE \u003d \"An error occurred when trying to delete expense.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_DELETE_LOAN \u003d \"An error occurred when trying to delete loan.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_DELETE_CONTACT \u003d \"An error occurred when trying to delete contact.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_LOAN_USAGE \u003d \"There are loans using this contact. Unable to delete!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private String object;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a DeleteCommand object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param object A String object for deletion."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param id     The id of the object in a specified list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public DeleteCommand(String object, int id) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.object \u003d object;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Deletes the specific Record object by entry id"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * and returns false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A boolean which indicates whether program terminates."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        switch (object) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"expense\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            //@@author kyang96"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense expense \u003d wallet.getExpenseList().deleteExpense(id);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_DELETE_EXPENSE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Ui.printExpense(expense);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_DELETE_EXPENSE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case \"loan\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            //@@author A0171206R"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan \u003d wallet.getLoanList().deleteLoan(id);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_DELETE_LOAN);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanTableHeaders();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanRow(loan);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanTableClose();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (!LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        .getLoanList().checkUnsettledLoan()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"Turning off auto reminders because all loans have been settled!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_DELETE_LOAN);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case \"contact\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author Xdecosee"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            for (Loan l : wallet.getLoanList().getLoanList()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (l.getPerson().getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_ERROR_LOAN_USAGE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Contact contact \u003d wallet.getContactList().deleteContact(id);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (contact !\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getContactList().setModified(true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_DELETE_CONTACT);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printContact(contact);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_DELETE_CONTACT);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 32,
      "kyang96": 38,
      "A0171206R": 37
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/DoneCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The DoneCommand sets the isSettled attribute in"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * the Loan object to be true."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_DONE \u003d \"This loan is now settled:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_DONE \u003d \"There is an error in settling the loan.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_NO_SUCH_ID \u003d \"There is no such id in loans!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_ALREADY_DONE \u003d \"The loan has already been settled!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a DoneCommand object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the Loan object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public DoneCommand(int id) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Lists the Record objects in any list and returns false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan \u003d wallet.getLoanList().findLoanWithId(id);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (loan.getIsSettled()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    Ui.printError(MESSAGE_FAILURE_ALREADY_DONE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                loan.setIsSettled(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printError(MESSAGE_FAILURE_NO_SUCH_ID);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_DONE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printLoanTableHeaders();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printLoanRow(loan);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printLoanTableClose();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (!LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    .getLoanList().checkUnsettledLoan()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(\"Great! All loans have been settled!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printError(MESSAGE_FAILURE_DONE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 68
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/EditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * EditCommand Class deals with commands that involves"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * in editing a specific object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * in the a specific list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Format for edit command:\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nedit expense \u003cid\u003e [/d \u003cdescription\u003e] [/t \u003cdate\u003e] [/a \u003camount\u003e] [/c \u003ccategory\u003e] [/r \u003crecurrence rate\u003e]\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense 2 /d Dinner /a 4.50 /c Food /t 10/10/2019 /r daily\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense 2 /d Lunch /a 9 /c Food /r no\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_SUCCESS_EDIT_EXPENSE \u003d \"Successfully edited this expense:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_SUCCESS_EDIT_CONTACT \u003d \"Successfully edited this contact:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_EDIT_LOAN \u003d \"Successfully edited this loan:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_FORMAT \u003d \"Your format for edit command is wrong.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_COMMAND \u003d \"An error encountered while executing edit command.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_ID_DOES_NOT_EXIST \u003d \"The ID given does not exist.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private Expense expense;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private Contact contact;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Loan loan;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs the EditCommand object with Expense object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param expense The Expense Object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public EditCommand(Expense expense) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expense \u003d expense;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Constructs the EditCommand object with Contact object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param contact The Contact Object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public EditCommand(Contact contact) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.contact \u003d contact;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs the EditCommand object with Loan object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan The Loan Object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public EditCommand(Loan loan) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loan \u003d loan;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (expense !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            //@@author kyang96"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int index \u003d wallet.getExpenseList().findIndexWithId(expense.getId());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense currentExpense \u003d new Expense();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense \u003d wallet.getExpenseList().getExpense(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(MESSAGE_ERROR_ID_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getRecFrequency() !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setRecurring(expense.isRecurring());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setRecFrequency(expense.getRecFrequency());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getDate() !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setDate(expense.getDate());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getAmount() !\u003d 0.0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setAmount(expense.getAmount());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getCategory() !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setCategory(expense.getCategory());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                currentExpense.setDescription(expense.getDescription());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().editExpense(index, currentExpense);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(MESSAGE_SUCCESS_EDIT_EXPENSE);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Ui.printExpense(currentExpense);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } else if (contact !\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author Xdecosee"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            int index \u003d wallet.getContactList().findIndexWithId(contact.getId());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (index !\u003d -1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Contact currentContact \u003d wallet.getContactList().getContact(index);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                ArrayList\u003cLoan\u003e loanList \u003d wallet.getLoanList().getLoanList();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (contact.getName() !\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setName(contact.getName());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (\"\".equals(contact.getDetail())) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setDetail(null);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else if (contact.getDetail() !\u003d null) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setDetail(contact.getDetail());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (\"\".equals(contact.getPhoneNum())) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setPhoneNum(null);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else if (contact.getPhoneNum() !\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    currentContact.setPhoneNum(contact.getPhoneNum());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getContactList().editContact(index, currentContact);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getContactList().setModified(true);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                for (Loan l : loanList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (l.getPerson().getId() \u003d\u003d currentContact.getId()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        int loanIndex \u003d wallet.getLoanList().findIndexWithId(l.getId());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        Loan toUpdate \u003d wallet.getLoanList().getLoan(loanIndex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        toUpdate.setPerson(currentContact);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        wallet.getLoanList().editLoan(loanIndex, toUpdate);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_EDIT_CONTACT);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printContact(currentContact);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_COMMAND);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (loan !\u003d null) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            //@@author A0171206R"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan updatedLoan \u003d new Loan();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            updatedLoan.setId(loan.getId());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            updatedLoan.setDescription(loan.getDescription());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            updatedLoan.setIsSettled(loan.getIsSettled());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            updatedLoan.setAmount(loan.getAmount());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            updatedLoan.setPerson(loan.getPerson());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            updatedLoan.setIsLend(loan.getIsLend());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            updatedLoan.setDate(loan.getDate());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            int index \u003d wallet.getLoanList().findIndexWithId(updatedLoan.getId());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (index !\u003d -1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                wallet.getLoanList().editLoan(index, updatedLoan);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_EDIT_LOAN);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanTableHeaders();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanRow(updatedLoan);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanTableClose();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_COMMAND);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 55,
      "kyang96": 51,
      "A0171206R": 43,
      "-": 12
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ExitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ExitCommand Class deals with the \u0027bye\u0027 command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns true to indicate to Main to terminate the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return True. (Always)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 9,
      "-": 12
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ExportCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "//@@author Xdecosee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import com.opencsv.CSVWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.net.URISyntaxException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class ExportCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"export\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_ERROR_WRITING_CSV \u003d \"Error in exporting data to csv!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_SUCCESS_WRITING_CSV \u003d \"Export success! File saved to -\u003e \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private List\u003cString[]\u003e data;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Constructs the EditCommand object with data and type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param data Processed Data from memory store."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param type type of data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ExportCommand(List\u003cString[]\u003e data, String type) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.data \u003d data;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Exports data into home folder."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param wallet The Wallet Object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            File current \u003d new File(ExportCommand.class.getProtectionDomain().getCodeSource().getLocation()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    .toURI().getPath());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            File csv \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            FileWriter output;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            LocalDateTime localDate \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd.MM.yyyy-HH.mm.ss\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String currentDate \u003d localDate.format(formatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (\"expense\".equals(type)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                csv \u003d new File(current.getParentFile().getPath(), \"WalletCLi-expenses-\" + currentDate + \".csv\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (\"loan\".equals(type)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                csv \u003d new File(current.getParentFile().getPath(), \"WalletCLi-loans-\" + currentDate + \".csv\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (csv !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                output \u003d new FileWriter(csv);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                CSVWriter writer \u003d new CSVWriter(output);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                writer.writeAll(data);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                output.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_WRITING_CSV + csv);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_WRITING_CSV);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (URISyntaxException | IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_WRITING_CSV);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 79
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/GenerateCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class GenerateCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"generate\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"All previous data has been wiped. Inserting default data...\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        deleteAllFiles(); //clear all data first"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getLoanList().getLoanList().clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getContactList().getContactList().clear();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().getExpenseList().clear();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getBudgetList().getBudgetList().clear();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate1 \u003d LocalDate.parse(\"10/10/2019\", formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate2 \u003d LocalDate.parse(\"11/10/2019\", formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate3 \u003d LocalDate.parse(\"12/10/2019\", formatter);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //test data for contact"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Sister\", \"91837362\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person2 \u003d new Contact(\"Tom\", \"Friend\", \"81276251\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getContactList().addContact(person1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getContactList().addContact(person2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //test data for loan"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate3, 10.0, false,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, person1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan2 \u003d new Loan(\"textbook\", createdDate2, 150.0, false,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, person2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan3 \u003d new Loan(\"dinner\", createdDate1, 8.0, true,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, person1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan4 \u003d new Loan(\"phone bills\", createdDate2, 50.0, false,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, person1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan5 \u003d new Loan(\"groceries\", createdDate3, 15.0, false,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, person1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getLoanList().addLoan(loan1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getLoanList().addLoan(loan2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getLoanList().addLoan(loan3);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getLoanList().addLoan(loan4);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getLoanList().addLoan(loan5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //test data for expense"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense1 \u003d new Expense(\"textbook\", createdDate3, 100.0, Category.SHOPPING,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense2 \u003d new Expense(\"groceries\", createdDate3, 50.0, Category.SHOPPING,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense3 \u003d new Expense(\"taxi\", createdDate2, 15.0, Category.TRANSPORT,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense4 \u003d new Expense(\"grab\", createdDate1, 10.0, Category.TRANSPORT,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense5 \u003d new Expense(\"Ajisen Ramen\", createdDate3, 20.0, Category.FOOD,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense6 \u003d new Expense(\"Korean BBQ\", createdDate3, 25.0, Category.FOOD,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense7 \u003d new Expense(\"Electricity bills\", createdDate3, 100.0, Category.BILLS,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense8 \u003d new Expense(\"Phone bills\", createdDate3, 100.0, Category.BILLS,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense9 \u003d new Expense(\"Witcher 3(game)\", createdDate2, 25.0, Category.OTHERS,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Expense expense10 \u003d new Expense(\"Cyberpunk 2077(game)\", createdDate1, 60.0, Category.OTHERS,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense3);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense4);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense5);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense6);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense7);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense8);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense9);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().addExpense(expense10);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //test data for budget"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget1 \u003d new Budget(1500.0, 10, 2019, true, 0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getBudgetList().addBudget(budget1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //save the test data into storage."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getBudgetList().setModified(true);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        wallet.getContactList().setModified(true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Deletes all existing storage files."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void deleteAllFiles() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        File file \u003d new File(\"./data/contact.txt\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (file.delete()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"contact.txt deleted successfully\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        file \u003d new File(\"./data/loan.txt\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (file.delete()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"loan.txt deleted successfully\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        file \u003d new File(\"./data/expense.txt\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (file.delete()) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"expense.txt deleted successfully\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        file \u003d new File(\"./data/budget.txt\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (file.delete()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"budget.txt deleted successfully\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 1,
      "A0171206R": 129
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The HelpCommand Class shows users what the valid commands are."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static String MESSAGE_ERROR_INDEX \u003d \"Error! Input not a valid help section index\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public HelpCommand(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Shows a list of valid commands to the user and returns false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author Xdecosee"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int chosenIndex;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            chosenIndex \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (chosenIndex \u003c\u003d 0 || chosenIndex \u003e wallet.getHelpList().size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_INDEX);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            ArrayList\u003cString\u003e sectionData \u003d wallet.getHelpList().get(chosenIndex - 1).getSectionData();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            for (String s : sectionData) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(s);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 27,
      "A0171206R": 9,
      "-": 11
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/HistoryCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class HistoryCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"history\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_LIST_HISTORY \u003d \"Command History from earliest to latest:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ArrayList\u003cString\u003e commandHistory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public HistoryCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        commandHistory \u003d LogicManager.getCommandHistory();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(MESSAGE_LIST_HISTORY);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (int i \u003d 0; i \u003c commandHistory.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(commandHistory.get(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "A0171206R": 31
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ImportCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "//@@author Xdecosee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class ImportCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"import\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_SUCCESS_ADD_CONTACT \u003d \"Got it. I\u0027ve added this contact:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_SUCCESS_ADD_EXPENSE \u003d \"Got it. I\u0027ve added this expense:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_SUCCESS_ADD_LOAN \u003d \"Got it. I\u0027ve added this loan:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_IMPORT_PROGRESS \u003d \"Importing records...\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_IMPORT_FINISH \u003d \"Finish Import!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_NEW_REMAINING_BUDGET \u003d \" is your budget left for \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_EXCEED_BUDGET \u003d \"Your budget has exceeded!!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_REACH_BUDGET \u003d \"You have reached your budget!!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private LoanList loanList \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private ExpenseList expenseList \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Constructs the ImportCommand object with LoanList object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param newList list of new loan entries."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ImportCommand(LoanList newList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.loanList \u003d newList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Constructs the ImportCommand object with LoanList object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param newList list of new expense entries."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ImportCommand(ExpenseList newList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.expenseList \u003d newList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Imports data into wallet."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param wallet The Wallet Object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_IMPORT_PROGRESS + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (loanList !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            ArrayList\u003cLoan\u003e loanData \u003d loanList.getLoanList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            for (Loan loan : loanData) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                //@@author Xdecosee-reused"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                int largestId \u003d wallet.getContactList().getLargestId(wallet.getContactList().getContactList()) + 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                loan.getPerson().setId(largestId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getContactList().addContact(loan.getPerson());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getContactList().setModified(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_ADD_CONTACT);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(loan.getPerson().toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getLoanList().addLoan(loan);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getLoanList().setModified(true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_ADD_LOAN);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(loan.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (expenseList !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            //@@author Xdecosee-reused"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            ArrayList\u003cExpense\u003e expenseData \u003d expenseList.getExpenseList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            for (Expense expense : expenseData) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getExpenseList().addExpense(expense);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                LocalDate date \u003d expense.getDate();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                for (Budget b : wallet.getBudgetList().getBudgetList()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (b.getMonth() \u003d\u003d date.getMonthValue() \u0026\u0026 b.getYear() \u003d\u003d date.getYear()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        BigDecimal monthBudget \u003d BigDecimal.valueOf(b.getAmount());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        BigDecimal expenseSum \u003d BigDecimal.valueOf(wallet.getExpenseList()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                                .getMonthExpenses(b.getMonth(), b.getYear()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        BigDecimal accountedAmount \u003d BigDecimal.valueOf(b.getAccountedExpenseAmount());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        double remainingBudget \u003d monthBudget.subtract(expenseSum).add(accountedAmount).doubleValue();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        b.setExpenseTakenIntoAccount(true);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        if (remainingBudget \u003c 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                            System.out.println(MESSAGE_EXCEED_BUDGET);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        } else if (remainingBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                            System.out.println(MESSAGE_REACH_BUDGET);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        System.out.println(\"$\" + remainingBudget + MESSAGE_NEW_REMAINING_BUDGET"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                                + new DateFormatSymbols().getMonths()[b.getMonth() - 1] + \" \" + b.getYear());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                wallet.getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_SUCCESS_ADD_EXPENSE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(expense.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_IMPORT_FINISH);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 118,
      "-": 1
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " * The ListCommand Class handles all list commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LIST_CONTACTS \u003d \"Here are the contacts in your list:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LIST_EXPENSES \u003d \"Here are the expenses in your list:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LIST_NO_EXPENSES \u003d \"There are no expenses for \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LIST_NO_LOANS \u003d \"There are no loans for \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LIST_RECURRING_EXPENSES \u003d \"Here are the recurring expenses in your list:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LIST_LOANS \u003d \"Here are the loans in your list:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Error in format for command.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" all\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" expense /sortby date\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" loan\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" task\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" recurring\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LIST_ALL_SORT \u003d \"list all can only be sorted by date.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_LOANS_SORT \u003d \"loans can only be sorted by date, lend or borrow\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EXPENSE_SORT \u003d \"expenses can only be sorted by date and category.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_RECURRING_SORT \u003d \"recurring can only be sorted by date and category.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_CONTACT_SORT \u003d \"contacts can only be sorted by name (A to Z).\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private final String record;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs a ListCommand object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param record The Record object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ListCommand(String record) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.record \u003d record;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Lists the Record objects in any list and returns false."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param wallet The Wallet object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (record.contains(\"recurring\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (\"recurring\".equals(record)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_LIST_RECURRING_EXPENSES);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                ArrayList\u003cExpense\u003e recList \u003d wallet.getExpenseList().getRecurringExpense();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Ui.printExpenseTable(recList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] arguments \u003d record.split(\" \", 3);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (arguments[1].equals(\"/sortby\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (arguments[2].equals(\"date\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cExpense\u003e expenseList \u003d wallet.getExpenseList().getSortedRecurringExpenseDate();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printExpenseTable(expenseList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else if (arguments[2].equals(\"category\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cExpense\u003e expenseList \u003d wallet.getExpenseList().getSortedRecurringExpenseCategory();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printExpenseTable(expenseList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printError(MESSAGE_RECURRING_SORT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else if (record.contains(\"all\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (\"all\".equals(record)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                ArrayList\u003cLoan\u003e loanList \u003d wallet.getLoanList().getLoanList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Ui.printLoanTable(loanList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                ArrayList\u003cExpense\u003e expenseList \u003d wallet.getExpenseList().getExpenseList();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_LIST_CONTACTS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                ArrayList\u003cContact\u003e contactList \u003d wallet.getContactList().getContactList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Ui.printContactTable(contactList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Ui.printExpenseTable(expenseList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] arguments \u003d record.split(\" \", 3);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (arguments[1].equals(\"/sortby\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (arguments[2].equals(\"date\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cLoan\u003e loanList \u003d wallet.getLoanList().sortByDate();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printLoanTable(loanList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_LIST_CONTACTS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cContact\u003e contactList \u003d wallet.getContactList().getContactList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printContactTable(contactList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cExpense\u003e expenseSortedList \u003d wallet.getExpenseList().sortByDate();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printExpenseTable(expenseSortedList);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_LIST_ALL_SORT);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else if (record.contains(\"contact\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author Xdecosee"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            ArrayList\u003cContact\u003e contactList \u003d wallet.getContactList().getContactList();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (\"contact\".equals(record)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                System.out.println(MESSAGE_LIST_CONTACTS);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printContactTable(contactList);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String[] arguments \u003d record.split(\" \", 3);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (arguments.length \u003c 3) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_CONTACT_SORT);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (arguments[1].equals(\"/sortby\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (arguments[2].equals(\"name\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        ArrayList\u003cContact\u003e sortedContacts \u003d wallet.getContactList().sortByName();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        System.out.println(MESSAGE_LIST_CONTACTS);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        Ui.printContactTable(sortedContacts);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        Ui.printError(MESSAGE_CONTACT_SORT);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else if (record.contains(\"loan\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (\"loan\".equals(record)) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                //@@author A0171206R"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ArrayList\u003cLoan\u003e loanList \u003d wallet.getLoanList().getLoanList();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanTable(loanList);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                //@@author"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] arguments \u003d record.split(\" \", 3);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (arguments[1].equals(\"/sortby\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (arguments[2].equals(\"date\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cLoan\u003e loanList \u003d wallet.getLoanList().sortByDate();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printLoanTable(loanList);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else if (arguments[2].equals(\"lend\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cLoan\u003e loanList \u003d wallet.getLoanList().sortByLend();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printLoanTable(loanList);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else if (arguments[2].equals(\"borrow\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cLoan\u003e loanList \u003d wallet.getLoanList().sortByBorrow();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printLoanTable(loanList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        Ui.printError(MESSAGE_LOANS_SORT);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else if (record.contains(\"expense\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (\"expense\".equals(record)) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                ArrayList\u003cExpense\u003e expenseList \u003d wallet.getExpenseList().getExpenseList();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Ui.printExpenseTable(expenseList);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] arguments \u003d record.split(\" \", 3);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (arguments[1].equals(\"/sortby\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (arguments[2].equals(\"date\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cExpense\u003e expenseList \u003d wallet.getExpenseList().sortByDate();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printExpenseTable(expenseList);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else if (arguments[2].equals(\"category\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ArrayList\u003cExpense\u003e expenseList \u003d wallet.getExpenseList().sortByCategory();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_LIST_EXPENSES);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printExpenseTable(expenseList);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        Ui.printError(MESSAGE_EXPENSE_SORT);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(record.trim(), formatter);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            ArrayList\u003cExpense\u003e expensesList \u003d new ArrayList\u003cExpense\u003e();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            ArrayList\u003cLoan\u003e loansList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (date !\u003d null) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (wallet.getExpenseList().getExpenseList().size() !\u003d 0"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        || wallet.getLoanList().getLoanList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (wallet.getExpenseList().getExpenseList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        for (Expense e : wallet.getExpenseList().getExpenseList()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            if (e.getDate().equals(date)) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                expensesList.add(e);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (expensesList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            Ui.printExpenseTable(expensesList);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_LIST_NO_EXPENSES"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + date.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[date.getMonthValue() - 1]"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + date.getYear());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (wallet.getLoanList().getLoanList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        for (Loan l : wallet.getLoanList().getLoanList()) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            if (l.getDate().equals(date)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                loansList.add(l);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (loansList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            Ui.printLoanTable(loansList);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_LIST_NO_LOANS"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + date.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[date.getMonthValue() - 1]"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + date.getYear());"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            //@@author"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 30,
      "matthewng1996": 193,
      "kyang96": 3,
      "A0171206R": 6,
      "-": 8
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/RedoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.WalletList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class RedoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"redo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Moving forward to later state...\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_ALREADY_LATEST_STATE \u003d \"There is nothing more to be redone!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private WalletList walletList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int newState;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public RedoCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.walletList \u003d LogicManager.getWalletList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (walletList.getState() \u003d\u003d walletList.getWalletList().size() - 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(MESSAGE_ALREADY_LATEST_STATE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        newState \u003d walletList.getState() + 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        walletList.setState(newState);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getLoanList().setModified(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getContactList().setModified(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getBudgetList().setModified((true));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 48
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ReminderCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ReminderCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"reminder\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Usage for reminder command.\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            + \"\\n\" + COMMAND_WORD + \"on\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            + \"\\n\" + COMMAND_WORD + \"off\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            + \"\\n\" + COMMAND_WORD + \"set\" + \"\u003cTIME IN SECONDS\u003e\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_REMINDER_ON \u003d \"Got it. I\u0027ve turned on reminders!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_REMINDER_ON \u003d \"It looks like you already have reminders turned on!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_FAILURE_REMINDER_OFF \u003d \"It looks like you already have reminders turned off!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_REMINDER_OFF \u003d \"Got it. I\u0027ve turned off reminders!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS_REMINDER_SET \u003d \"Got it. I\u0027ve set reminders to notify every \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int timeInSeconds;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ReminderCommand(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] info \u003d input.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (info.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (info[0].equals(\"on\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (LogicManager.getReminder().getAutoRemind()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    Ui.printError(MESSAGE_FAILURE_REMINDER_ON);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().setAutoRemind(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().autoRemindStart();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(MESSAGE_SUCCESS_REMINDER_ON);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } else if (info[0].equals(\"off\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (!LogicManager.getReminder().getAutoRemind()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    Ui.printError(MESSAGE_FAILURE_REMINDER_OFF);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(ReminderCommand.MESSAGE_SUCCESS_REMINDER_OFF);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().setAutoRemind(false);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (info.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (info[0].equals(\"set\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    timeInSeconds \u003d Integer.parseInt(info[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    throw new WrongParameterFormat(\"Please ensure the time set(in seconds) is a number!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (timeInSeconds \u003e\u003d 600) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().autoRemindStop();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    LogicManager.getReminder().setTimeInSeconds(timeInSeconds);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(MESSAGE_SUCCESS_REMINDER_SET + timeInSeconds + \" seconds\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    if (LogicManager.getReminder().getAutoRemind()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        LogicManager.getReminder().autoRemindStart();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    Ui.printError(\"The minimum time interval for auto reminders is 10 minutes (a.k.a 600 seconds)\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 73
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/SetBudgetCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " * The SetBudgetCommand Class deals with the \u0027budget\u0027 command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class SetBudgetCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"budget\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_SET_BUDGET \u003d \" dollars is a new budget set for \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NOTE \u003d \"Note that to update your budget, \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"simply set the budget for the same month and year again.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Error in format for command.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" $100 01/2019\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" $0 01/2019 \" + \"(To remove your budget for the month/year)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EDIT_BUDGET \u003d \"You successfully edited your budget for \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_REMOVE_BUDGET \u003d \"You have successfully removed your budget for \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NO_BUDGET_TO_REMOVE \u003d \"There is no budget for removal\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NO_NEGATIVE_BUDGET \u003d \"Budget must be more than or equals to zero\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EXISTING_EXPENSES \u003d \"There are existing expenses for \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_ADD_EXISTING_EXPENSES \u003d \"Would you like to add them into the budget? (Yes/No)\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_YES_OR_NO \u003d \"Please reply with a Yes or No (Not case sensitive)\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_CURRENT_BUDGET \u003d \"Your budget set for \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_REMAINING_BUDGET \u003d \"Your remaining budget for \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private Budget budget;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public SetBudgetCommand(Budget budget) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budget \u003d budget;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (budget !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                BudgetList budgetList \u003d wallet.getBudgetList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (budget.getAmount() \u003c 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    Ui.printError(MESSAGE_NO_NEGATIVE_BUDGET);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else if (budget.getAmount() \u003e 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (budgetList.getBudgetList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (checkExpensesMatch(wallet)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_EXISTING_EXPENSES"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_ADD_EXISTING_EXPENSES);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            takeInUserReply(wallet);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        int index \u003d checkDuplicates(budgetList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            wallet.getBudgetList().editBudget(index, budget);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_EDIT_BUDGET"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(budget.getAmount() + MESSAGE_SET_BUDGET"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            wallet.getBudgetList().addBudget(budget);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        updateSaveFile(wallet);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (checkExpensesMatch(wallet)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_EXISTING_EXPENSES"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_ADD_EXISTING_EXPENSES);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            takeInUserReply(wallet);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(budget.getAmount() + MESSAGE_SET_BUDGET"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        wallet.getBudgetList().addBudget(budget);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        updateSaveFile(wallet);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.println(MESSAGE_NOTE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else if (budget.getAmount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (budgetList.getBudgetList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Ui.printError(MESSAGE_NO_BUDGET_TO_REMOVE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        int index \u003d checkDuplicates(budgetList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            budgetList.getBudgetList().remove(index);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            updateSaveFile(wallet);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_REMOVE_BUDGET"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + \" \" + budget.getYear());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            Ui.printError(MESSAGE_NO_BUDGET_TO_REMOVE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private boolean checkExpensesMatch(Wallet wallet) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Expense e : wallet.getExpenseList().getExpenseList()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            LocalDate expenseDate \u003d e.getDate();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (expenseDate.getMonthValue() \u003d\u003d budget.getMonth()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    \u0026\u0026 expenseDate.getYear() \u003d\u003d budget.getYear()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private void takeInUserReply(Wallet wallet) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String reply \u003d scanner.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        while (!\"yes\".equals(reply) || !\"no\".equals(reply)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (\"yes\".equals(reply)) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                BigDecimal monthBudget \u003d BigDecimal.valueOf(budget.getAmount());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                BigDecimal expenseSum \u003d BigDecimal.valueOf(wallet.getExpenseList()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        .getMonthExpenses(budget.getMonth(), budget.getYear()));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                double remainingBudget \u003d monthBudget.subtract(expenseSum).doubleValue();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                budget.setAmount(remainingBudget);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (remainingBudget \u003c 0) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(AddCommand.MESSAGE_EXCEED_BUDGET);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_CURRENT_BUDGET"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + \" \" + budget.getYear() + \" is \" + \"$\" + budget.getAmount());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_REMAINING_BUDGET"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + \" \" + budget.getYear() + \" is \" + \"$\" + remainingBudget);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else if (remainingBudget \u003d\u003d 0) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(AddCommand.MESSAGE_REACH_BUDGET);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_CURRENT_BUDGET"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + \" \" + budget.getYear() + \" is \" + \"$\" + budget.getAmount());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_REMAINING_BUDGET"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + \" \" + budget.getYear() + \" is \" + \"$\" + remainingBudget);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(\"Budget updated.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_CURRENT_BUDGET"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + \" \" + budget.getYear() + \" is \" + \"$\" + budget.getAmount());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_REMAINING_BUDGET"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + \" \" + budget.getYear() + \" is \" + \"$\" + remainingBudget);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else if (\"no\".equals(reply)) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                BigDecimal expenseSum \u003d BigDecimal.valueOf(wallet.getExpenseList()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        .getMonthExpenses(budget.getMonth(), budget.getYear()));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                budget.setAccountedExpenseAmount(expenseSum.doubleValue());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_CURRENT_BUDGET"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        + \" \" + budget.getYear() + \" is \" + \"$\" + budget.getAmount());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_REMAINING_BUDGET"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        + new DateFormatSymbols().getMonths()[budget.getMonth() - 1]"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        + \" \" + budget.getYear() + \" is \" + \"$\" + budget.getAmount());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_YES_OR_NO);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                reply \u003d scanner.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private int checkDuplicates(BudgetList budgetList) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (int i \u003d 0; i \u003c budgetList.getBudgetList().size(); i++) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (budget.getMonth() \u003d\u003d budgetList.getBudgetList().get(i).getMonth()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    \u0026\u0026 budget.getYear() \u003d\u003d budgetList.getBudgetList().get(i).getYear()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private void updateSaveFile(Wallet wallet) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        wallet.getBudgetList().setModified(true);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 195
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/UndoCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.WalletList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"undo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Reverting back to previous state...\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String MESSAGE_ALREADY_INITIAL_STATE \u003d \"There is nothing more to be undone!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private WalletList walletList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int newState;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public UndoCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.walletList \u003d LogicManager.getWalletList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean execute(Wallet wallet) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (walletList.getState() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printError(MESSAGE_ALREADY_INITIAL_STATE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        newState \u003d walletList.getState() - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        walletList.setState(newState);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getLoanList().setModified(true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getContactList().setModified(true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getBudgetList().setModified((true));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getExpenseList().setModified(true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(MESSAGE_SUCCESS);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 49
    }
  },
  {
    "path": "src/main/java/wallet/logic/command/ViewCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"view\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_EMPTY_BUDGET \u003d \"There is no budget set for \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_VIEW_BUDGET \u003d \"This is the budget set for \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_REMAINING_BUDGET \u003d \"This is the budget left for \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_VIEW_STATS \u003d \"This is the statistics for \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_STATS_CATEGORY \u003d \"These are the expenses for \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NICE_TRY_MONTH \u003d \"Nice try, but month runs from 1 to 12 :)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NICE_TRY_YEAR \u003d \"zero or negative years does not exist.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NO_EXPENSE_IN_MONTH \u003d \"There are no expenses in this month.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_NO_EXPENSE \u003d \"There are no expenses in your wallet.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Error in format for command.\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" budget 01/2019\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" stats\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            + \"\\nExample: \" + COMMAND_WORD + \" stats 01/2019\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String[] type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ViewCommand(String... type) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public boolean execute(Wallet wallet) throws NumberFormatException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (type.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String[] monthYear \u003d type[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                int month \u003d Integer.parseInt(monthYear[0].trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (month \u003c\u003d 0 || month \u003e 12) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    throw new WrongParameterFormat(MESSAGE_NICE_TRY_MONTH);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                int year \u003d Integer.parseInt(monthYear[1].trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (year \u003c\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    throw new WrongParameterFormat(MESSAGE_NICE_TRY_YEAR);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (type[0].equals(\"budget\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    for (Budget b : wallet.getBudgetList().getBudgetList()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (b.getMonth() \u003d\u003d month \u0026\u0026 b.getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(MESSAGE_VIEW_BUDGET"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    + new DateFormatSymbols().getMonths()[b.getMonth() - 1] + \" \" + b.getYear());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.println(\"$\" + b.getAmount());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            if (b.getExpenseTakenIntoAccount()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                BigDecimal monthBudget \u003d BigDecimal.valueOf(b.getAmount());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                BigDecimal expenseSum \u003d BigDecimal.valueOf(wallet.getExpenseList()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                        .getMonthExpenses(b.getMonth(), b.getYear()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                BigDecimal accountedAmount \u003d BigDecimal.valueOf(b.getAccountedExpenseAmount());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                double remainingBudget \u003d monthBudget.subtract(expenseSum)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                    .add(accountedAmount).doubleValue();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                System.out.println(MESSAGE_REMAINING_BUDGET"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                        + new DateFormatSymbols().getMonths()[b.getMonth() - 1] + \" \" + b.getYear());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                System.out.println(\"$\" + remainingBudget);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                System.out.println(MESSAGE_REMAINING_BUDGET"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                        + new DateFormatSymbols().getMonths()[b.getMonth() - 1] + \" \" + b.getYear());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                System.out.println(\"$\" + b.getAmount());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    System.out.println(MESSAGE_EMPTY_BUDGET"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[month - 1] + \" \" + year);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                } else if (type[0].equals(\"stats\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    //@@author kyang96"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    HashMap\u003cCategory, ArrayList\u003cExpense\u003e\u003e categoryMap"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            \u003d getCategoryMap(wallet.getExpenseList().getExpenseList(), month, year);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (categoryMap.isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        System.out.println(MESSAGE_NO_EXPENSE_IN_MONTH);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    System.out.println(MESSAGE_VIEW_STATS"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            + new DateFormatSymbols().getMonths()[month - 1]"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            + \" \" + year);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    double total \u003d wallet.getExpenseList().getMonthExpenses(month, year);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    double budget \u003d wallet.getBudgetList().getBudget(month, year);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    ui.drawBarChart(total, budget);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    for (Category category : Category.values()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        ArrayList\u003cExpense\u003e expenseList \u003d categoryMap.get(category);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        if (expenseList !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            System.out.println(MESSAGE_STATS_CATEGORY + category);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            Ui.printExpenseTable(expenseList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    //@@author matthewng1996"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    ArrayList\u003cExpense\u003e expenseList \u003d new ArrayList\u003cExpense\u003e();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    for (Expense e : wallet.getExpenseList().getExpenseList()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (e.getDate().getMonthValue() \u003d\u003d month \u0026\u0026 e.getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            expenseList.add(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    ui.drawPieChart(expenseList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                throw new WrongParameterFormat(\"There is an error in your parameters. \""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        + MESSAGE_NICE_TRY_MONTH + \" and \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        + MESSAGE_NICE_TRY_YEAR);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else if (type.length \u003d\u003d 1 \u0026\u0026 type[0].equals(\"stats\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            ArrayList\u003cExpense\u003e expenseList \u003d wallet.getExpenseList().getExpenseList();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (expenseList.isEmpty()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(MESSAGE_NO_EXPENSE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            ui.drawPieChart(expenseList);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Ui.printError(MESSAGE_USAGE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Generate a HashMap containing all expenses of a certain month in each category."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param expenseList The entire list of expenses."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param month       The month to filter."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param year        The year to filter."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public HashMap\u003cCategory, ArrayList\u003cExpense\u003e\u003e getCategoryMap(ArrayList\u003cExpense\u003e expenseList, int month, int year) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        HashMap\u003cCategory, ArrayList\u003cExpense\u003e\u003e categoryMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense expense : expenseList) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getDate().getMonthValue() \u003d\u003d month \u0026\u0026 expense.getDate().getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                switch (expense.getCategory()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                case FOOD:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (categoryMap.get(Category.FOOD) \u003d\u003d null) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        categoryMap.put(Category.FOOD, new ArrayList\u003cExpense\u003e());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    categoryMap.get(Category.FOOD).add(expense);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                case BILLS:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (categoryMap.get(Category.BILLS) \u003d\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        categoryMap.put(Category.BILLS, new ArrayList\u003cExpense\u003e());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    categoryMap.get(Category.BILLS).add(expense);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                case TRANSPORT:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (categoryMap.get(Category.TRANSPORT) \u003d\u003d null) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        categoryMap.put(Category.TRANSPORT, new ArrayList\u003cExpense\u003e());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    categoryMap.get(Category.TRANSPORT).add(expense);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                case SHOPPING:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (categoryMap.get(Category.SHOPPING) \u003d\u003d null) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        categoryMap.put(Category.SHOPPING, new ArrayList\u003cExpense\u003e());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    categoryMap.get(Category.SHOPPING).add(expense);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                case OTHERS:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (categoryMap.get(Category.OTHERS) \u003d\u003d null) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        categoryMap.put(Category.OTHERS, new ArrayList\u003cExpense\u003e());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    categoryMap.get(Category.OTHERS).add(expense);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return categoryMap;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 110,
      "kyang96": 71
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/AddCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.InsufficientParameters;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.exception.WrongDateTimeFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class AddCommandParser implements Parser\u003cAddCommand\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_ADD_CONTACT \u003d \"Error in command syntax when adding contact.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_WRONG_DATETIME_FORMAT \u003d \"Wrong date format, use \\\"dd/MM/yyyy\\\".\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_INVALID_CATEGORY"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            \u003d \"Category can only be Bills, Food, Others, Shopping or Transport.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_INVALID_RECURRENCE_RATE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            \u003d \"Recurrence rate can only be Daily, Weekly or Monthly.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_NEGATIVE_AMOUNT \u003d \"Amount should only be positive values.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns an AddCommand object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return An AddCommand object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException ParseException."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public AddCommand parse(String input) throws ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"expense\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Expense expense;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                expense \u003d parseExpense(arguments[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } catch (DateTimeParseException dt) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongDateTimeFormat(MESSAGE_ERROR_WRONG_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            if (expense !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(expense);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        case \"contact\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Contact contact;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            contact \u003d parseContact(arguments[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            if (contact !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                return new AddCommand(contact);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case \"loan\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                loan \u003d parseLoan(arguments[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } catch (DateTimeParseException dt) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongDateTimeFormat(MESSAGE_ERROR_WRONG_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan !\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return new AddCommand(loan);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(AddCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Parses user input and returns an Expense object with input values."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param input A string input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The Expense object."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @throws NumberFormatException  Wrong format."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @throws InsufficientParameters Insufficient parameters provided."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense parseExpense(String input) throws DateTimeParseException,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                                NumberFormatException, InsufficientParameters {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        boolean isRecurring \u003d input.contains(\"/r\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\"\\\\$\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String desc \u003d arguments[0].trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        arguments \u003d arguments[1].split(\" \", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Double amount \u003d Double.parseDouble(arguments[0].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (amount \u003c 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            throw new WrongParameterFormat(MESSAGE_ERROR_NEGATIVE_AMOUNT);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Category cat;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        RecurrenceRate freq \u003d null;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (arguments[1].contains(\"/on\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            arguments \u003d arguments[1].split(\" \", 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            cat \u003d Category.getCategory(arguments[0].trim());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (cat \u003d\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(MESSAGE_ERROR_INVALID_CATEGORY);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (isRecurring) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                arguments \u003d arguments[1].split(\"/on\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                arguments \u003d arguments[1].split(\"/r\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                date \u003d LocalDate.parse(arguments[0].trim(), formatter);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                freq \u003d RecurrenceRate.getRecurrence(arguments[1].trim());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (freq \u003d\u003d null) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    throw new WrongParameterFormat(MESSAGE_ERROR_INVALID_RECURRENCE_RATE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                arguments \u003d arguments[1].split(\"/on\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                date \u003d LocalDate.parse(arguments[1].trim(), formatter);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                freq \u003d RecurrenceRate.NO;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            cat \u003d Category.getCategory(arguments[1].trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (cat \u003d\u003d null) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(MESSAGE_ERROR_INVALID_CATEGORY);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            freq \u003d RecurrenceRate.NO;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d new Expense(desc, date, amount, cat, isRecurring, freq);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expense;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a Loan object."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input The string after \"loan\"."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Loan object."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException Out of index."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException                 ParseException."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    Loan parseLoan(String input) throws InsufficientParameters, ParseException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author A0171206R"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d null;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Boolean isLend \u003d false;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] info \u003d input.split(\"\\\\$\", 2);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String description \u003d info[0].trim();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        info \u003d info[1].split(\"\\\\s+\", 4);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        double amount \u003d Double.parseDouble(info[0].trim());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(info[1].trim(), formatter);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        info \u003d info[3].split(\"/c \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int contactId;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            contactId \u003d Integer.parseInt(info[1].trim());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            throw new WrongParameterFormat(\"Contact ID must be an integer!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (input.matches(\"(?s).*\\\\b( /l)\\\\b.*\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            isLend \u003d true;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (input.matches(\"(?s).*\\\\b( /b)\\\\b.*\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            isLend \u003d false;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ArrayList\u003cContact\u003e contactList \u003d LogicManager.getWalletList().getWalletList()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .get(LogicManager.getWalletList().getState()).getContactList().getContactList();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int index \u003d LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState())"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getContactList().findIndexWithId(contactId);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person \u003d new ContactList(contactList).getContact(index);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan \u003d new Loan(description, createdDate, amount, isLend, false, person);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loan;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a Contact object."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input The string after \"contact\"."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The Contact object."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException Out of index."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Contact parseContact(String input) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author Xdecosee"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] info \u003d input.split(\" \");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ContactParserHelper contactHelper \u003d new ContactParserHelper();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact contact \u003d contactHelper.newInput(info);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (contact \u003d\u003d null) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_ADD_CONTACT);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return contact;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 16,
      "kyang96": 70,
      "A0171206R": 81,
      "-": 36
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ContactParserHelper.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "//@@author Xdecosee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class ContactParserHelper {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Concat an array of strings."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param toJoin Array of strings needed to join together."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return A string with words joined together."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public String concatList(ArrayList\u003cString\u003e toJoin) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (String s : toJoin) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            result +\u003d s + \" \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return result.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Find index of command line option in user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param info   Array of user input arguments."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param toFind Command Line option to find."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return Index of command line option."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private int findIndexOf(String[] info, String toFind) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (int i \u003d 0; i \u003c info.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (info[i].equalsIgnoreCase(toFind)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Process user input for a new Contact entry."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param info Array of user input arguments."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return Contact object with user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Contact newInput(String[] info) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int section \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int detailsIndex;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int phoneIndex;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String details;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String phone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e detailsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e phoneList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        detailsIndex \u003d findIndexOf(info, \"/d\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        phoneIndex \u003d findIndexOf(info, \"/p\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (int i \u003d 0; i \u003c info.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (i \u003d\u003d detailsIndex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (i \u003d\u003d phoneIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 2;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                detailsList.add(info[i]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                phoneList.add(info[i]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                nameList.add(info[i]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        name \u003d concatList(nameList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        details \u003d concatList(detailsList);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (details.isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            details \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        phone \u003d concatList(phoneList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (phone.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            phone \u003d null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return new Contact(name, details, phone);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Process user input to update Contact entry."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param info Array of user input arguments."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return Contact object with user input."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Contact updateInput(String[] info) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int section \u003d -1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int detailsIndex;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int phoneIndex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int nameIndex;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String details \u003d null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String phone \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e detailsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e phoneList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        detailsIndex \u003d findIndexOf(info, \"/d\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        phoneIndex \u003d findIndexOf(info, \"/p\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        nameIndex \u003d findIndexOf(info, \"/n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (int i \u003d 0; i \u003c info.length; i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (i \u003d\u003d detailsIndex) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (i \u003d\u003d phoneIndex) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 2;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (i \u003d\u003d nameIndex) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                section \u003d 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                detailsList.add(info[i]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                phoneList.add(info[i]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else if (section \u003d\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                nameList.add(info[i]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        name \u003d concatList(nameList);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            name \u003d null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (detailsIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            details \u003d concatList(detailsList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (details.isEmpty()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                details \u003d \"\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (phoneIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            phone \u003d concatList(phoneList);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (phone.isEmpty()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                phone \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (nameIndex \u003c 0 \u0026\u0026 phoneIndex \u003c 0 \u0026\u0026 detailsIndex \u003c 0) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return new Contact(name, details, phone);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 162
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/CurrencyParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.CurrencyCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class CurrencyParser implements Parser\u003cCurrencyCommand\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public CurrencyCommand parse(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return new CurrencyCommand(input.toLowerCase());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 16
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/DeleteCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The DeleteCommandParser Class converts user String to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * appropriate parameters."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_INVALID_ID \u003d \"You need to provide a valid ID (Number) when deleting.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Changes user input String to appropriate parameters"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * and returns a DeleteCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A DeleteCommand object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException ParseException."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public DeleteCommand parse(String input) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int id \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            id \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            throw new WrongParameterFormat(MESSAGE_ERROR_INVALID_ID);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return new DeleteCommand(arguments[0].toLowerCase(), id);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 2,
      "kyang96": 14,
      "A0171206R": 19
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/DoneCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.InsufficientParameters;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The DoneCommandParser Class converts user String to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * appropriate parameters."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Changes user input String to appropriate parameters"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * and returns a DeleteCommand object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return A DeleteCommand object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @throws ParseException ParseException."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public DoneCommand parse(String input) throws InsufficientParameters, ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] arguments \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (\"loan\".equals(arguments[0])) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                id \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                throw new WrongParameterFormat(\"You need to provide a valid ID (Number) when settling your loans!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new DoneCommand(id);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Ui.printError(\"DONE command can only be applied to loans!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 42
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/EditCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.InsufficientParameters;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.exception.WrongDateTimeFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.EditCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The EditCommandParser class helps to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * change user input String into appropriate parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class EditCommandParser implements Parser\u003cEditCommand\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_EDIT_CONTACT \u003d \"Error in command syntax when editing contact.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_NOT_NUMBER \u003d \"Error when parsing number, please provide proper input.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_WRONG_DATE_FORMAT \u003d \"Error when parsing date, format is \\\"dd/MM/yyyy\\\".\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_INVALID_RECURRENCE_RATE \u003d \"Invalid value for rate of recurrence. \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            + \"Acceptable values are: Daily, Weekly, Monthly or No\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_NEGATIVE_AMOUNT \u003d \"Amount should only be positive values.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public EditCommand parse(String input) throws InsufficientParameters {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"expense\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Expense expense;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                expense \u003d parseExpense(arguments[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } catch (NumberFormatException nf) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(MESSAGE_ERROR_NOT_NUMBER);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } catch (DateTimeParseException dt) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongDateTimeFormat(MESSAGE_ERROR_WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                return new EditCommand(expense);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case \"loan\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loan \u003d parseLoan(arguments[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return new EditCommand(loan);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case \"contact\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Contact contact;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            contact \u003d parseContact(arguments[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (contact !\u003d null) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new EditCommand(contact);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(EditCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Parses the parameters of contact to be edited."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param input User input arguments"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Contact parseContact(String input) throws NumberFormatException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author Xdecosee"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (arguments.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String[] parameters \u003d arguments[1].split(\" \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                int id \u003d Integer.parseInt(arguments[0].trim());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                ContactParserHelper contactHelper \u003d new ContactParserHelper();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Contact contact \u003d contactHelper.updateInput(parameters);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (contact \u003d\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_ERROR_EDIT_CONTACT);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                contact.setId(id);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return contact;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_EDIT_CONTACT);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Ui.printError(MESSAGE_ERROR_EDIT_CONTACT);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Parses the parameters of contact to be edited."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param input User input arguments"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    Loan parseLoan(String input) throws NumberFormatException, InsufficientParameters {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author A0171206R"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d new Loan();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int loanId;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        boolean isValid \u003d true;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String[] check \u003d input.split(\" \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loanId \u003d Integer.parseInt(arguments[0].trim());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (NumberFormatException err) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            throw new WrongParameterFormat(\"You need to provide a valid ID (Number) when editing your loans!\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setId(loanId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String parameters \u003d arguments[1].trim();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet wallet \u003d LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList().getState());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int index \u003d wallet.getLoanList().findIndexWithId(loanId);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan currentLoan \u003d LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getState()).getLoanList().getLoan(index);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setId(currentLoan.getId());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setDescription(currentLoan.getDescription());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setIsSettled(currentLoan.getIsSettled());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setAmount(currentLoan.getAmount());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setPerson(currentLoan.getPerson());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setIsLend(currentLoan.getIsLend());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setDate(currentLoan.getDate());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (parameters.contains(\"/c\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] getContact \u003d parameters.split(\"/c\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            int contactId \u003d Integer.parseInt(getContact[1].trim());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            for (Contact contact : LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList()"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    .getState()).getContactList().getContactList()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (contact.getId() \u003d\u003d contactId) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    System.out.println(\"Edit: Contact found! \" + contact.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.setPerson(contact);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            parameters \u003d getContact[0].trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (parameters.contains(\"/l\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loan.setIsLend(true);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (parameters.equals(\"/l\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return loan;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] getIsLend \u003d parameters.split(\"/l\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            parameters \u003d getIsLend[0].trim();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (parameters.contains(\"/b\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loan.setIsLend(false);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (parameters.equals(\"/b\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return loan;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] getIsLend \u003d parameters.split(\"/b\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            parameters \u003d getIsLend[0].trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (parameters.contains(\"/t\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] getDate \u003d parameters.split(\"/t\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            LocalDate createdDate \u003d LocalDate.parse(getDate[1].trim(), formatter);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loan.setDate(createdDate);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            parameters \u003d getDate[0].trim();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (parameters.contains(\"/a\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] getAmount \u003d parameters.split(\"/a\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            double amount \u003d Double.parseDouble(getAmount[1].trim());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loan.setAmount(amount);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            parameters \u003d getAmount[0].trim();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (parameters.contains(\"/d\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String[] getDescription \u003d parameters.split(\"/d\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String description \u003d getDescription[1].trim();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loan.setDescription(description);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loan;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Parses the parameters of expense to be edited."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense parseExpense(String input) throws NumberFormatException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        //@@author kyang96"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d new Expense();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int id \u003d Integer.parseInt(arguments[0].trim());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expense.setId(id);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String parameters \u003d arguments[1].trim();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int recIndex \u003d parameters.indexOf(\"/r\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int catIndex \u003d parameters.indexOf(\"/c\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int amtIndex \u003d parameters.indexOf(\"/a\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int dateIndex \u003d parameters.indexOf(\"/t\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int descIndex \u003d parameters.indexOf(\"/d\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (recIndex !\u003d -1) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (recIndex \u003e catIndex \u0026\u0026 recIndex \u003e amtIndex \u0026\u0026 recIndex \u003e dateIndex \u0026\u0026 recIndex \u003e descIndex) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                String[] getRecurring \u003d parameters.split(\"/r\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                RecurrenceRate rec \u003d RecurrenceRate.getRecurrence(getRecurring[1].trim());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (rec \u003d\u003d RecurrenceRate.DAILY || rec \u003d\u003d RecurrenceRate.WEEKLY || rec \u003d\u003d RecurrenceRate.MONTHLY) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expense.setRecurring(true);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expense.setRecFrequency(rec);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                } else if (rec \u003d\u003d RecurrenceRate.NO) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expense.setRecurring(false);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expense.setRecFrequency(rec);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    throw new WrongParameterFormat(MESSAGE_ERROR_INVALID_RECURRENCE_RATE);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                parameters \u003d getRecurring[0].trim();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(EditCommand.MESSAGE_ERROR_FORMAT);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (catIndex !\u003d -1) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (catIndex \u003e amtIndex \u0026\u0026 catIndex \u003e dateIndex \u0026\u0026 catIndex \u003e descIndex) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                String[] getCategory \u003d parameters.split(\"/c\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expense.setCategory(Category.getCategory(getCategory[1].trim()));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                parameters \u003d getCategory[0].trim();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(EditCommand.MESSAGE_ERROR_FORMAT);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (amtIndex !\u003d -1) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (amtIndex \u003e dateIndex \u0026\u0026 amtIndex \u003e descIndex) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                String[] getAmount \u003d parameters.split(\"/a\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (Double.parseDouble(getAmount[1].trim()) \u003c 0) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    throw new WrongParameterFormat(MESSAGE_ERROR_NEGATIVE_AMOUNT);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expense.setAmount(Double.parseDouble(getAmount[1].trim()));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                parameters \u003d getAmount[0].trim();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(EditCommand.MESSAGE_ERROR_FORMAT);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (dateIndex !\u003d -1) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (dateIndex \u003e descIndex) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                String[] getDate \u003d parameters.split(\"/t\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(getDate[1].trim(), formatter);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expense.setDate(date);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                parameters \u003d getDate[0].trim();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                throw new WrongParameterFormat(EditCommand.MESSAGE_ERROR_FORMAT);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (descIndex !\u003d -1) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String[] getDescription \u003d parameters.split(\"/d\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expense.setDescription(getDescription[1].trim());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expense;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 49,
      "kyang96": 104,
      "A0171206R": 109,
      "-": 7
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ExpenseParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ExpenseParser Class handles the logic of creating an Expense Object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseParser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns the list of recurring expenses."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param expenseList The list of all expenses."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The list of recurring expenses."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static ArrayList\u003cExpense\u003e getRecurringRecords(ExpenseList expenseList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e recList \u003d new ArrayList\u003cExpense\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                recList.add(e);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return recList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Updates the expense list with recurring expenses from the"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * input date until the end of the current month."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void updateRecurringRecords(Wallet wallet) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseList expenseList \u003d wallet.getExpenseList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e recList \u003d getRecurringRecords(expenseList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate currentDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : recList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int lastDay \u003d currentDate.lengthOfMonth();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int currentMonth \u003d currentDate.getMonthValue();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int currentYear \u003d currentDate.getYear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            LocalDate expenseDate \u003d e.getDate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expenseDate.getYear() \u003e currentYear) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.getRecFrequency() \u003d\u003d RecurrenceRate.DAILY) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expenseDate.getYear() \u003d\u003d currentYear \u0026\u0026 expenseDate.getMonthValue() \u003e currentMonth"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        || (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003d\u003d lastDay)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecurring(false);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecFrequency(RecurrenceRate.NO);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseList.editExpense(index, e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseDate \u003d expenseDate.plusDays(1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                while (expenseDate.getMonthValue() \u003c\u003d currentMonth || expenseDate.getYear() \u003c currentYear) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Expense expense \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003d\u003d lastDay"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        \u0026\u0026 expenseDate.getYear() \u003d\u003d currentYear) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), true, RecurrenceRate.DAILY);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    new AddCommand(expense).execute(wallet);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expenseDate \u003d expenseDate.plusDays(1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else if (e.getRecFrequency() \u003d\u003d RecurrenceRate.WEEKLY) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expenseDate.getYear() \u003d\u003d currentYear \u0026\u0026 expenseDate.getMonthValue() \u003e currentMonth"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        || (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003e lastDay - 7)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecurring(false);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecFrequency(RecurrenceRate.NO);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseList.editExpense(index, e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseDate \u003d expenseDate.plusDays(7);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                while (expenseDate.getMonthValue() \u003c\u003d currentMonth || expenseDate.getYear() \u003c currentYear) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Expense expense \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getDayOfMonth() \u003e lastDay - 7"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            \u0026\u0026 expenseDate.getYear() \u003d\u003d currentYear) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), true, RecurrenceRate.WEEKLY);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    new AddCommand(expense).execute(wallet);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expenseDate \u003d expenseDate.plusDays(7);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else if (e.getRecFrequency() \u003d\u003d RecurrenceRate.MONTHLY) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expenseDate.getYear() \u003d\u003d currentYear \u0026\u0026 expenseDate.getMonthValue() \u003e\u003d currentMonth) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecurring(false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                e.setRecFrequency(RecurrenceRate.NO);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseList.editExpense(index, e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                expenseDate \u003d expenseDate.plusMonths(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                while (expenseDate.getMonthValue() \u003c\u003d currentMonth || expenseDate.getYear() \u003c currentYear) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    Expense expense;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    if (expenseDate.getMonthValue() \u003d\u003d currentMonth \u0026\u0026 expenseDate.getYear() \u003d\u003d currentYear) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), true, RecurrenceRate.MONTHLY);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        expense \u003d new Expense(e.getDescription(), expenseDate,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                                e.getAmount(), e.getCategory(), false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    new AddCommand(expense).execute(wallet);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expenseDate \u003d expenseDate.plusMonths(1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 3,
      "kyang96": 117,
      "A0171206R": 3
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ExportCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "//@@author Xdecosee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.logic.command.ExportCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.YearMonth;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class ExportCommandParser implements Parser\u003cExportCommand\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_WRONG_FORMAT \u003d \"Wrong export command syntax!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_WRONG_YEARMONTH \u003d \"Wrong year and month input!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private double budgetLeft;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private double budgetSet;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Returns an ExportCommand object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return An ExportCommand object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ExportCommand parse(String input) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        arguments[0] \u003d arguments[0].toLowerCase();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (\"loan\".equals(arguments[0])) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            List\u003cString[]\u003e data \u003d parseLoan();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return new ExportCommand(data, arguments[0]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"expense\".equals(arguments[0])) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_WRONG_FORMAT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            List\u003cString[]\u003e data \u003d parseExpense(arguments[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (data !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new ExportCommand(data, arguments[0]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Ui.printError(MESSAGE_ERROR_WRONG_FORMAT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Formats expense storage data into list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param argument month and year to export"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list of formatted data."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private List\u003cString[]\u003e parseExpense(String argument) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        List\u003cString[]\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] monthYear \u003d argument.split(\"/\", 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (monthYear.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                int month \u003d Integer.parseInt(monthYear[0].trim());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                int year \u003d Integer.parseInt(monthYear[1].trim());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                ExpenseList expenseList \u003d LogicManager.getWalletList().getWalletList().get("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    LogicManager.getWalletList().getState()).getExpenseList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                double totalSpent \u003d expenseList.getMonthExpenses(month, year);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String monthFormatted \u003d DateTimeFormatter.ofPattern(\"MM/yyyy\").format(YearMonth.of(year, month));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                data.add(new String[]{\"Month\", monthFormatted});"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (findBudget(month, year, totalSpent)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    data.add(new String[]{\"Budget Set\", \"$\" + budgetSet});"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    data.add(new String[]{\"Budget Left\", \"$\" + budgetLeft});"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                data.add(new String[]{\"Total Spent\", \"$\" + totalSpent});"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                data.add(new String[]{\"S/N\", \"Description\", \"Amount($)\", \"Date\", \"Category\", \"Recur\", \"Frequency\"});"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                for (Expense e : expenseList.getExpenseList()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    LocalDate recordDate \u003d e.getDate();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (month \u003d\u003d recordDate.getMonthValue() \u0026\u0026 year \u003d\u003d recordDate.getYear()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        String indexOutput \u003d Integer.toString(index);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        String description \u003d e.getDescription();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        String date \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(e.getDate());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        String amount \u003d Double.toString(e.getAmount());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        Category category \u003d e.getCategory();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        String isRecur \u003d (e.isRecurring()) ? \"yes\" : \"no\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        String frequency \u003d (e.isRecurring()) ? e.getRecFrequency().toString() : \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        data.add(new String[]{indexOutput, description, amount, date, String.valueOf(category),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                            isRecur, frequency});"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        index++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Ui.printError(MESSAGE_ERROR_WRONG_FORMAT);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (NumberFormatException | DateTimeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_WRONG_YEARMONTH);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Find remaining budget of month."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param month month to find budget"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param year  month to find budget"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return boolean of found or not."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private boolean findBudget(int month, int year, double totalExpense) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cBudget\u003e budgetList \u003d LogicManager.getWalletList().getWalletList().get("
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            LogicManager.getWalletList().getState()).getBudgetList().getBudgetList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (Budget b : budgetList) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            //@@author Xdecosee-reused"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (b.getMonth() \u003d\u003d month \u0026\u0026 b.getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                this.budgetSet \u003d b.getAmount();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (b.getExpenseTakenIntoAccount()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    BigDecimal monthBudget \u003d BigDecimal.valueOf(b.getAmount());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    BigDecimal expenseSum \u003d BigDecimal.valueOf(totalExpense);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    BigDecimal accountedAmount \u003d BigDecimal.valueOf(b.getAccountedExpenseAmount());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    double remainingBudget \u003d monthBudget.subtract(expenseSum).add(accountedAmount).doubleValue();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    this.budgetLeft \u003d remainingBudget;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    this.budgetLeft \u003d b.getAmount();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            //@@author"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author Xdecosee"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Formats loans storage data into list."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list of formatted data."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private List\u003cString[]\u003e parseLoan() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cLoan\u003e loanList \u003d LogicManager.getWalletList().getWalletList()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            .get(LogicManager.getWalletList().getState()).getLoanList().getLoanList();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        List\u003cString[]\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        data.add(new String[]{\"S/N\", \"Description\", \"Amount($)\", \"Created Date\", \"Name\", \"Phone\","
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            \"Other Details\", \"Lend/Borrow\", \"Settled\"});"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (Loan l : loanList) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String indexOutput \u003d Integer.toString(index);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String description \u003d l.getDescription();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String amount \u003d Double.toString(l.getAmount());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String createdDate \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(l.getDate());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String isLend \u003d (l.getIsLend()) ? \"lend\" : \"borrow\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String isSettled \u003d (l.getIsSettled()) ? \"yes\" : \"no\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String personName \u003d l.getPerson().getName();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String personPhone \u003d l.getPerson().getPhoneNum();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (personPhone \u003d\u003d null) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                personPhone \u003d \"\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String personDetail \u003d l.getPerson().getDetail();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (personDetail \u003d\u003d null) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                personDetail \u003d \"\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            data.add(new String[]{indexOutput, description, amount, createdDate, personName, personPhone,"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                personDetail, isLend, isSettled});"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 187,
      "-": 1
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ImportCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "//@@author Xdecosee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import com.opencsv.CSVReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.logic.command.ImportCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.net.URISyntaxException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class ImportCommandParser implements Parser\u003cImportCommand\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_WRONG_FORMAT \u003d \"Wrong import command syntax!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_READING_CSV \u003d \"Error in importing csv!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_CSV_FORMAT \u003d \"CSV is formatted wrongly\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Returns a ImportCommand object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param input User input of command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return ImportCommand Object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ImportCommand parse(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_WRONG_FORMAT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        arguments[0] \u003d arguments[0].toLowerCase();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (\"loan\".equals(arguments[0])) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            ArrayList\u003cLoan\u003e data \u003d parseLoans(arguments[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (data !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                LoanList newList \u003d new LoanList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                newList.setLoanList(data);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new ImportCommand(newList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"expense\".equals(arguments[0])) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            ArrayList\u003cExpense\u003e data \u003d parseExpenses(arguments[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (data !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                ExpenseList newList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                newList.setExpenseList(data);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new ImportCommand(newList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Ui.printError(MESSAGE_ERROR_WRONG_FORMAT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Read and format loan entries from csv files."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param fileName File Name."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list of formatted data."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private ArrayList\u003cLoan\u003e parseLoans(String fileName) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cLoan\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            File current \u003d new File(ImportCommand.class.getProtectionDomain().getCodeSource().getLocation()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    .toURI().getPath());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            File csv \u003d new File(current.getParentFile().getPath(), fileName);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            FileReader filereader \u003d new FileReader(csv);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            CSVReader csvReader \u003d new CSVReader(filereader);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            List\u003cString[]\u003e fileContent \u003d csvReader.readAll();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            for (String[] s : fileContent) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                //@@author Xdecosee-reused"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String description \u003d s[0].trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                LocalDate createdDate \u003d LocalDate.parse(s[1].trim(), formatter);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                double amount \u003d Double.parseDouble(s[2].trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                boolean isLend;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                boolean isSettled;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String name;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String details \u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String phoneNum \u003d null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (s[3].trim().equalsIgnoreCase(\"lend\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    isLend \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else if (s[3].trim().equalsIgnoreCase(\"borrow\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    isLend \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_ERROR_CSV_FORMAT);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (s[4].trim().equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    isSettled \u003d true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else if (s[4].trim().equalsIgnoreCase(\"no\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    isSettled \u003d false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_ERROR_CSV_FORMAT);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (s[5].trim().isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_ERROR_CSV_FORMAT);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    name \u003d s[5].trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (s.length \u003d\u003d 7) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (s[6].trim().isEmpty()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        details \u003d null;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        details \u003d s[6].trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (s.length \u003d\u003d 8) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (s[7].trim().isEmpty()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        phoneNum \u003d null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        phoneNum \u003d s[7].trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Contact person \u003d new Contact(name, details, phoneNum);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Loan loan \u003d new Loan(description, createdDate, amount, isLend, isSettled, person);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                data.add(loan);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            csvReader.close();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            filereader.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (URISyntaxException | IOException | NullPointerException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_READING_CSV);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (DateTimeParseException | NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_CSV_FORMAT);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Read and format expense entries from csv files."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param fileName File Name."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list of formatted data."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private ArrayList\u003cExpense\u003e parseExpenses(String fileName) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cExpense\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            File current \u003d new File(ImportCommand.class.getProtectionDomain().getCodeSource().getLocation()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    .toURI().getPath());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            File csv \u003d new File(current.getParentFile().getPath(), fileName);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            FileReader filereader \u003d new FileReader(csv);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            CSVReader csvReader \u003d new CSVReader(filereader);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            List\u003cString[]\u003e fileContent \u003d csvReader.readAll();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            for (String[] s : fileContent) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                //@@author Xdecosee-reused"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String desc \u003d s[0].trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(s[1].trim(), formatter);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Double amount \u003d Double.parseDouble(s[2].trim());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Category cat \u003d Category.getCategory(s[3]);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (cat \u003d\u003d null) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Ui.printError(MESSAGE_ERROR_CSV_FORMAT);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                boolean isRecurring \u003d false;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                RecurrenceRate freq \u003d RecurrenceRate.NO;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (s.length \u003d\u003d 6 \u0026\u0026 s[4].trim().equalsIgnoreCase(\"yes\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    isRecurring \u003d true;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    date \u003d LocalDate.parse(s[1].trim(), formatter);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    freq \u003d RecurrenceRate.getRecurrence(s[5].trim());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (freq \u003d\u003d null) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        Ui.printError(MESSAGE_ERROR_CSV_FORMAT);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        return null;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                Expense expense \u003d new Expense(desc, date, amount, cat, isRecurring, freq);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                data.add(expense);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            csvReader.close();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            filereader.close();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (URISyntaxException | IOException | NullPointerException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_READING_CSV);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (NumberFormatException | DateTimeParseException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Ui.printError(MESSAGE_ERROR_CSV_FORMAT);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 210,
      "-": 1
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ListCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ListCommandParser class helps to"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * change user input String into appropriate parameters."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class ListCommandParser implements Parser\u003cListCommand\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public ListCommand parse(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Ui.printError(ListCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 3,
      "A0171206R": 4,
      "-": 14
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ParserManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.exception.InsufficientParameters;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.CurrencyCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.EditCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ExportCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.GenerateCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.HistoryCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ImportCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import wallet.logic.command.ListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.RedoCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ReminderCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.UndoCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ViewCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The ParserManager Class that handles all CommandParser classes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class ParserManager {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private String parametersError \u003d \" command have insufficient parameters!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Parses the user input command and returns the corresponding Command object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param fullCommand The input of user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The corresponding Command object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public Command parseCommand(String fullCommand) throws ParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String replacedCommand \u003d fullCommand.replaceAll(\"\\\\s+\", \" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String[] arguments \u003d replacedCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new AddCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(AddCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new EditCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(EditCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return new ListCommandParser().parse(arguments[1].toLowerCase());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(ListCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case ViewCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return new ViewCommandParser().parse(arguments[1].toLowerCase());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(ViewCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case SetBudgetCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return new SetBudgetParser().parse(arguments[1].toLowerCase());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(SetBudgetCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return new DeleteCommandParser().parse(arguments[1].toLowerCase());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(DeleteCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case ReminderCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return new ReminderCommandParser().parse(arguments[1].toLowerCase());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(ReminderCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return new DoneCommandParser().parse(arguments[1].toLowerCase());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(DoneCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case ExportCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new ExportCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(ExportCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        case ImportCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return new ImportCommandParser().parse(arguments[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(ImportCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return new HelpCommand(arguments[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case HistoryCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new HistoryCommand();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case UndoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case RedoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new RedoCommand();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        case GenerateCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new GenerateCommand();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case CurrencyCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return new CurrencyParser().parse(arguments[1].toLowerCase());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException err) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                throw new InsufficientParameters(CurrencyCommand.COMMAND_WORD + parametersError);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 49,
      "kyang96": 3,
      "matthewng1996": 21,
      "A0171206R": 36,
      "-": 34
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ReminderCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ReminderCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The RemindCommand class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * changes user input String into appropriate parameters."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ReminderCommand parse(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return new ReminderCommand(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Ui.printError(ReminderCommand.MESSAGE_USAGE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 23
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/SetBudgetParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class SetBudgetParser implements Parser\u003cSetBudgetCommand\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public SetBudgetCommand parse(String input) throws NumberFormatException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] arguments \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] amount \u003d arguments[0].split(\"\\\\$\", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Double budgetAmount \u003d Double.parseDouble(amount[1].trim());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] monthYear \u003d arguments[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int month \u003d Integer.parseInt(monthYear[0].trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int year \u003d Integer.parseInt(monthYear[1].trim());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (month \u003c 0 || month \u003e 12) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw new WrongParameterFormat(\"Nice try but month only runs for 1 to 12 :)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else if (year \u003c\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            throw  new WrongParameterFormat(\"I too wonder if zero or negative year exists...\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(budgetAmount, month, year, false, 0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 28
    }
  },
  {
    "path": "src/main/java/wallet/logic/parser/ViewCommandParser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.ViewCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ViewCommandParser implements Parser\u003cViewCommand\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ViewCommand parse(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (!\"\".equals(input)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String[] arguments \u003d input.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return new ViewCommand(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 17
    }
  },
  {
    "path": "src/main/java/wallet/model/Wallet.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.currency.CurrencyList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.help.Help;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Wallet {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private BudgetList budgetList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private ExpenseList expenseList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private ContactList contactList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private LoanList loanList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private CurrencyList currencyList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private ArrayList\u003cHelp\u003e helpList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Default constructor with no data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Wallet() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d new BudgetList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.currencyList \u003d new CurrencyList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.contactList \u003d new ContactList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.loanList \u003d new LoanList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.helpList \u003d new ArrayList\u003cHelp\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a Wallet object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param currencyList The currencyList object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param budgetList The BudgetList object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expenseList The ExpenseList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactList The ContactList object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The LoanList object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Wallet(CurrencyList currencyList, BudgetList budgetList, ExpenseList expenseList,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                  ContactList contactList, LoanList loanList, ArrayList\u003cHelp\u003e helpList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.currencyList \u003d currencyList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.helpList \u003d helpList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public CurrencyList getCurrencyList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return currencyList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public BudgetList getBudgetList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setBudgetList(BudgetList budgetList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the ExpenseList object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ExpenseList object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public ExpenseList getExpenseList() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the ExpenseList object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param expenseList The ExpenseList object."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setExpenseList(ExpenseList expenseList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the ContactList object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ContactList object,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public ContactList getContactList() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return contactList;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the ContactList object."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactList The ContactList object."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setContactList(ContactList contactList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the LoanList object."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The LoanList object."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LoanList getLoanList() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loanList;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the LoanList object."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The LoanList Object."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setLoanList(LoanList loanList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Get list of help sections."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list of help sections."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ArrayList\u003cHelp\u003e getHelpList() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return helpList;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 14,
      "kyang96": 15,
      "matthewng1996": 16,
      "A0171206R": 41,
      "-": 39
    }
  },
  {
    "path": "src/main/java/wallet/model/WalletList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class WalletList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ArrayList\u003cWallet\u003e walletList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int state;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public WalletList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.walletList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.state \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cWallet\u003e getWalletList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.walletList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setState(int state) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.state \u003d state;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getState() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.state;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 29
    }
  },
  {
    "path": "src/main/java/wallet/model/contact/Contact.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.contact;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The Contact Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Contact {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private String detail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private String phoneNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new Contact object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param name     Name of the contact."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param detail   Details of the contact."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param phoneNum Phone number of the contact."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public Contact(String name, String detail, String phoneNum) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        this.detail \u003d detail;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phoneNum \u003d phoneNum;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the name of the contact."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The name of the contact."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the name of the contact."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param name The name of the contact."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the details of the contact."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The details of the contact."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDetail() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        return detail;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the details of the contact."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param detail The details of the contact."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDetail(String detail) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        this.detail \u003d detail;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the phone number of the contact."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The phone number of the contact."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getPhoneNum() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        return phoneNum;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the phone number of the contact."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param phoneNum The phone number of the contact."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setPhoneNum(String phoneNum) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        this.phoneNum \u003d phoneNum;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the id of the contact object."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The identity of the contact object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the id of the contact object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The id of the contact object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.id;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the concatenated string with all the required fields."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The concatenated string with all the required fields."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author Xdecosee"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (this.detail \u003d\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            this.detail \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (this.phoneNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            this.phoneNum \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return \"[ID: \" + this.id + \"]\" + this.name + \" \" + this.detail + \" \" + this.phoneNum;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Form a string to write to contact.txt."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The String to be written in contact.txt."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author Xdecosee"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (this.detail \u003d\u003d null) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            this.detail \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (this.phoneNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            this.phoneNum \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return getId() + \",\" + this.name + \",\" + this.detail + \",\" + this.phoneNum;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 19,
      "kyang96": 1,
      "A0171206R": 33,
      "-": 83
    }
  },
  {
    "path": "src/main/java/wallet/model/contact/ContactList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.contact;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ContactList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Stores the current list of contacts of the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ArrayList\u003cContact\u003e contactList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a new ContactList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ContactList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.contactList \u003d new ArrayList\u003cContact\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ContactList(ArrayList\u003cContact\u003e contactList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Add the given contact into the contactList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contact The contact to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addContact(Contact contact) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contact.setId(getLargestId(this.contactList) + 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.add(contact);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Retrieve the contact at the given index of the contactList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the contact in the contactList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The contact object with the specified index."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Contact getContact(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList.get(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Modify the value of the contact at the given index in the contactList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index   The index of the contact in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contact The contact with modified values."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void editContact(int index, Contact contact) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.set(index, contact);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Removes the contact at the given index of the contactList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the contact in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Contact deleteContact(int id) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int index \u003d findIndexWithId(id);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            Contact contact \u003d getContact(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            contactList.remove(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            return contact;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Get the current number of contacts in the contactList."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The number of contacts in the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getContactListSize() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList.size();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the list of contacts in the contactList."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The list of contacts."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cContact\u003e getContactList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the largest id."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactList The list of contact."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The largest id."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getLargestId(ArrayList\u003cContact\u003e contactList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Contact contact : contactList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (contact.getId() \u003e max) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                max \u003d contact.getId();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return max;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Finds and returns contact index using its id."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param id The id of the contact to find."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return id of contact found. -1 if not found."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public int findIndexWithId(int id) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (Contact e : this.contactList) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (e.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author Xdecosee"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Sorts contact list by name(A to Z)."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return a list of sorted contacts by name."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ArrayList\u003cContact\u003e sortByName() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cContact\u003e contactSortByName \u003d (this.contactList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Collections.sort(contactSortByName, Comparator.comparing(a -\u003e a.getName().toLowerCase()));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return contactSortByName;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 45,
      "kyang96": 16,
      "A0171206R": 87
    }
  },
  {
    "path": "src/main/java/wallet/model/currency/Currency.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.model.currency;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Currency {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private String country;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private double value;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private boolean currentCurrency;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs the Currency object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param country which country the currency belongs to."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param value converted value from SGD."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Currency(String country, double value, boolean currentCurrency) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.country \u003d country;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.currentCurrency \u003d currentCurrency;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the country of the currency."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The country of currency."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String getCountry() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return country;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the conversion value of the currency based on SGD."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The conversion value of the currency"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public double getValue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Gets a boolean based on currenct currency."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return Whether currency is currently used."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public boolean isCurrentCurrency() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return currentCurrency;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets a boolean based on currenct currency."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param currentCurrency The currently used currency."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setCurrentCurrency(boolean currentCurrency) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.currentCurrency \u003d currentCurrency;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 57
    }
  },
  {
    "path": "src/main/java/wallet/model/currency/CurrencyList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.model.currency;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class CurrencyList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private ArrayList\u003cCurrency\u003e currencyList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private Currency currentCurrency;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public CurrencyList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.currencyList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs a new currencyList object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param currencyArrayList The list of currencies to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public CurrencyList(ArrayList\u003cCurrency\u003e currencyArrayList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.currencyList \u003d currencyArrayList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Currency c : currencyArrayList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (c.isCurrentCurrency()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                currentCurrency \u003d c;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the list of currencies in the currencyList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The list of currencies."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cCurrency\u003e getCurrencyList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return currencyList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns a Currency object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return current currency"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Currency getCurrentCurrency() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return currentCurrency;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns a Currency object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param currentCurrency The current currency"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return current currency"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Currency setCurrentCurrency(Currency currentCurrency) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return this.currentCurrency \u003d currentCurrency;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 56
    }
  },
  {
    "path": "src/main/java/wallet/model/help/Help.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "//@@author Xdecosee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.model.help;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class Help {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private String choice;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private ArrayList\u003cString\u003e sectionData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Stores a help section content."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public Help(String choice, ArrayList\u003cString\u003e sectionData) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.choice \u003d choice;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        this.sectionData \u003d sectionData;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Get section header."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return section header."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public String getChoice() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return choice;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Get section data."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list of section data."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ArrayList\u003cString\u003e getSectionData() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return sectionData;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 40
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Budget.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class Budget {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private boolean expenseTakenIntoAccount;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private double accountedExpenseAmount;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs the Budget object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param amount amount of budget set."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param month month which budget is set to."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param year year which budget is set to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Budget(double amount, int month, int year, boolean expenseTakenIntoAccount, double accountedExpenseAmount) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.expenseTakenIntoAccount \u003d expenseTakenIntoAccount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.accountedExpenseAmount \u003d accountedExpenseAmount;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the amount of the budget."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The amount of budget."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets the amount of the budget."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param amount The amount of budget."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the month of the budget."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The month of budget."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public int getMonth() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets the month of the budget."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param month The month of budget."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setMonth(int month) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the year of the budget."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The year of budget."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Gets the boolean value of whether the budget has taken existing expenses into account."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return boolean value of existing budget with existing expenses"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public boolean getExpenseTakenIntoAccount() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return expenseTakenIntoAccount;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets the boolean of the budget with exsiting expenses."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param expenseTakenIntoAccount The boolean value of budget with existing expenses accounted for."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setExpenseTakenIntoAccount(boolean expenseTakenIntoAccount) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.expenseTakenIntoAccount \u003d expenseTakenIntoAccount;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Gets the amount of accounted expenses based on boolean value of Budget."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return accounted expenses amount to be added into existing budget"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public double getAccountedExpenseAmount() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return accountedExpenseAmount;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets the amount of accounted expenses."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param accountedExpenseAmount The accounted expenses amount to be added into existing budget"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setAccountedExpenseAmount(double accountedExpenseAmount) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.accountedExpenseAmount \u003d accountedExpenseAmount;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return amount + \",\" + month + \",\" + year + \",\" + expenseTakenIntoAccount + \",\" + accountedExpenseAmount;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 110
    }
  },
  {
    "path": "src/main/java/wallet/model/record/BudgetList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class BudgetList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private ArrayList\u003cBudget\u003e budgetList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs a new BudgetList object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public BudgetList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d new ArrayList\u003cBudget\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Constructs a new BudgetList object with populated list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public BudgetList(ArrayList\u003cBudget\u003e budgetList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.budgetList \u003d budgetList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the list of budgets."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return The list of budgets."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cBudget\u003e getBudgetList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Add the given budget into the expenseList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param b The budget to be added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void addBudget(Budget b) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            budgetList.add(b);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"Budget addition failed. Please try again.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Edit the budget in budgetlist."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param index The budget to be replaced"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param budget The budget used to replace"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void editBudget(int index, Budget budget) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetList.set(index, budget);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Gets budget for a certain month of the year."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public double getBudget(int month, int year) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Budget b : this.budgetList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (b.getMonth() \u003d\u003d month \u0026\u0026 b.getYear() \u003d\u003d year) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return b.getAmount();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 81
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Category.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public enum Category {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    BILLS,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    FOOD,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    OTHERS,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    SHOPPING,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    TRANSPORT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Parses string input into corresponding category."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param category String input of category."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return Category enum."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static Category getCategory(String category) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        switch (category.toLowerCase()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"bills\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return Category.BILLS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case \"food\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return Category.FOOD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"others\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return Category.OTHERS;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case \"shopping\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return Category.SHOPPING;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        case \"transport\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return Category.TRANSPORT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 22,
      "matthewng1996": 9
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Expense.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The Expense Class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Expense extends Record {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private Category category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isRecurring;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private RecurrenceRate recFrequency;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs the Expense object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param amount      The amount of expense."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param category    The category of the expense."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param isRecurring Whether the expense is recurring."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Expense(String description, LocalDate date, double amount,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                   Category category, boolean isRecurring, RecurrenceRate recFrequency) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isRecurring \u003d isRecurring;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recFrequency \u003d recFrequency;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the amount of the expense."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The amount of expense."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the amount of the expense."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param amount The amount of expense."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the category of the expense."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The category of the expense."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Category getCategory() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        return category;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets the Category of the expense."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param category The category of the expense."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setCategory(Category category) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns whether the expense is recurring."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return true or false - Whether the expense is recurring."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isRecurring() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return isRecurring;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets whether the expense is recurring."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param recurring Whether the expense is recurring."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setRecurring(boolean recurring) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        isRecurring \u003d recurring;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Gets the recurring frequency enum."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return A enum of the recurring frequency."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public RecurrenceRate getRecFrequency() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        return recFrequency;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the recurring frequency."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param recFrequency The recurring frequency."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setRecFrequency(RecurrenceRate recFrequency) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recFrequency \u003d recFrequency;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isRecurring) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \"[\" + recFrequency + \"] \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + getDescription() + \" Amount:$\" + amount + \" Date:\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate()) + \" Category:\" + category;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \" \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + getDescription() + \" Amount:$\" + amount + \" Date:\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate()) + \" Category:\" + category;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (isRecurring) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate()) + \",\" + category + \",\" + recFrequency;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate()) + \",\" + category;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 27,
      "matthewng1996": 4,
      "A0171206R": 16,
      "-": 86
    }
  },
  {
    "path": "src/main/java/wallet/model/record/ExpenseList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.math.BigDecimal;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "//@@author kyang96"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": " * The ExpenseList Class that maintains a list of Expense objects."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private ArrayList\u003cExpense\u003e expenseList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs a new ExpenseList object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ExpenseList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d new ArrayList\u003cExpense\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs a new ExpenseList object with populated list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ExpenseList(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns the list of expenses."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The list of expenses."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cExpense\u003e getExpenseList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Sets the list of expenses."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param expenseList The list of expenses."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setExpenseList(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseList \u003d expenseList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Add the given expense into the expenseList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param e The expense to be added."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void addExpense(Expense e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        e.setId(getLargestId(this.expenseList) + 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Retrieve the expense at the given index of the expenseList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param index The index of the expense in the expenseList."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The expense at the given index."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense getExpense(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList.get(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Modify the value of the expense at the given index in the expenseList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param index The index of the expense in the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param e     The expense object with modified values."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void editExpense(int index, Expense e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.set(index, e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns the index of the Expense object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param e The Expense object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return integer index."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public int findExpenseIndex(Expense e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList.indexOf(e);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns the size of the expenseList."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return integer size of the expenseList."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList.size();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    //@@author matthewng1996"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns the monthly expenses."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param month month of user expenses."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param year year of user expenses."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return sum of expenses in a given month and year."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public double getMonthExpenses(int month, int year) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int expenseMonth;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int expenseYear;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        BigDecimal totalExpenses \u003d new BigDecimal(0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            LocalDate expenseDate \u003d e.getDate();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            expenseMonth \u003d expenseDate.getMonthValue();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            expenseYear \u003d expenseDate.getYear();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (expenseMonth \u003d\u003d month \u0026\u0026 expenseYear \u003d\u003d year) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                BigDecimal entryAmount \u003d new BigDecimal(e.getAmount());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                totalExpenses \u003d totalExpenses.add(entryAmount);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return totalExpenses.doubleValue();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns a sorted expense list by date."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns a sorted arraylist of expenses"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cExpense\u003e sortByDate() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseSortDateList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseSortDateList \u003d this.expenseList;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Comparator\u003cExpense\u003e comparator \u003d Comparator.comparing(Expense::getDate);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Collections.sort(expenseSortDateList, comparator);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return expenseSortDateList;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns a sorted expense list by category."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns a sorted arraylist of expenses"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cExpense\u003e sortByCategory() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseSortCategoryList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseSortCategoryList \u003d this.expenseList;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Comparator\u003cExpense\u003e comparator \u003d Comparator.comparing(Expense::getCategory);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Collections.sort(expenseSortCategoryList, comparator);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return expenseSortCategoryList;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns a sorted recurring expense list by date."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns a sorted arraylist of recurring expenses"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cExpense\u003e getSortedRecurringExpenseDate() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e recList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                recList.add(e);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Comparator\u003cExpense\u003e comparator \u003d Comparator.comparing(Expense::getDate);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Collections.sort(recList, comparator);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return recList;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns a sorted recurring expense list by category."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns a sorted arraylist of recurring expenses"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cExpense\u003e getSortedRecurringExpenseCategory() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e recList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                recList.add(e);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Comparator\u003cExpense\u003e comparator \u003d Comparator.comparing(Expense::getCategory);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Collections.sort(recList, comparator);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return recList;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Lists all recurring expenses in the expense list."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cExpense\u003e getRecurringExpense() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e recList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                recList.add(e);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return recList;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Returns the largest id."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param expenseList The list of expenses."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The largest id."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public int getLargestId(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense expense : expenseList) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expense.getId() \u003e max) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                max \u003d expense.getId();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return max;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Deletes an expense using its id."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param id The id of the expense to delete."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense deleteExpense(int id) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d findIndexWithId(id);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense expense \u003d getExpense(index);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseList.remove(index);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return expense;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Finds and returns expense index using its id."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param id The id of the expense to find."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public int findIndexWithId(int id) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Finds and returns the Expense object using its id."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param id The id of the expense object."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The expense object."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Expense findExpenseWithId(int id) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : this.expenseList) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                return e;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 1,
      "kyang96": 182,
      "matthewng1996": 84
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Loan.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class Loan extends Record {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Contact person;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean isLend;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean isSettled;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        description \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        amount \u003d 0.0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        person \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        isSettled \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * The constructor for Loan objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param description The description of the loan."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param amount      The amount of money lent to /borrowed from the Contact person."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isLend      If isLend is true, then it means you lend people money. Else, it means you borrow from people."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isSettled   If isSettled is true, then it means the loan has been settled."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param person      The Contact object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan(String description, LocalDate createdDate, double amount,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                boolean isLend, boolean isSettled, Contact person) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        super(description, createdDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isLend \u003d isLend;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isSettled \u003d isSettled;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the amount of loan."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The amount of loan."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the amount of the loan."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param amount The amount of the loan."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setAmount(double amount) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns true or false."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean getIsLend() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.isLend;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets isLend to true or false."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isLend States whether user is borrowing or lending."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setIsLend(boolean isLend) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isLend \u003d isLend;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Checks if user has settled the loan."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return True or false - Whether the user has settled the loan."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean getIsSettled() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return isSettled;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Allows user to mark loans as settled/unsettled."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param isSettled Marks loans as settled or unsettled."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setIsSettled(boolean isSettled) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.isSettled \u003d isSettled;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (isLend) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \"[\" + (isSettled ? \"Settled\" : \"Not Settled\") + \"]\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Lend] \" + description + \" Amount:$\" + amount"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \" Date:\" + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate())"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Contact: \" + person.toString() + \"]\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else { //isBorrow"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return \"[ID: \" + getId() + \"]\" + \"[\" + (isSettled ? \"Settled\" : \"Not Settled\") + \"]\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Borrow] \" + description + \" Amount:$\" + amount"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \" Date:\" + DateTimeFormatter.ofPattern(\"dd MMM yyyy\").format(getDate())"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \"[Contact: \" + person.toString() + \"]\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (!isLend \u0026\u0026 !isSettled) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"0\" + \",\" + \"0\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (!isLend \u0026\u0026 isSettled) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"0\" + \",\" + \"1\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (isLend \u0026\u0026 !isSettled) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"1\" + \",\" + \"0\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (isLend \u0026\u0026 isSettled) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return getId() + \",\" + getDescription() + \",\" + amount + \",\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(getDate())"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    + \",\" + \"1\" + \",\" + \"1\" + \",\" + person.getId();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the contact for loan entry."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param person contact for loan"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setPerson(Contact person) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.person \u003d person;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the contact for loan entry."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Contact getPerson() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return person;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "A0171206R": 159
    }
  },
  {
    "path": "src/main/java/wallet/model/record/LoanList.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class LoanList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean isModified \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ArrayList\u003cLoan\u003e loanList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LoanList(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        checkUnsettledLoan();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LoanList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d new ArrayList\u003cLoan\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the list of loans."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The list of loans."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cLoan\u003e getLoanList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.loanList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns true if list is modified, else false."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean getIsModified() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets status of whether list is modified."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setModified(boolean modified) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        isModified \u003d modified;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets a LoanList."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The list of loans."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setLoanList(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList \u003d loanList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Adds a Loan object to the list of loans."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan The Loan object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan(Loan loan) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setId(getLargestId(this.loanList) + 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList.add(loan);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Gets the Loan object based on index in list of loans."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the Loan object in the list of loans."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan getLoan(int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.loanList.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Edits the Loan object in the list of loans."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param index The index of the Loan object in the list of loans."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan  The Loan object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void editLoan(int index, Loan loan) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.loanList.set(index, loan);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns size of the list of loans."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return Size of the list of loans."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.loanList.size();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the largest id."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The list of loans."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The largest id."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getLargestId(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int max \u003d 0;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (loan.getId() \u003e max) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                max \u003d loan.getId();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return max;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Deletes an expense using its id."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the expense to delete."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan deleteLoan(int id) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int index \u003d findIndexWithId(id);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (index \u003e\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            Loan loan \u003d getLoan(index);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            loanList.remove(index);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            return loan;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Finds and returns expense index using its id."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the expense to find."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int findIndexWithId(int id) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan l : this.loanList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (l.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Finds and returns the Loan object using its id."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The id of the loan object."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The loan object."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Loan findLoanWithId(int id) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan l : this.loanList) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (l.getId() \u003d\u003d id) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return l;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Checks whether there are unsettled loans."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return false if there are no unsettled loans. True, otherwise."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean checkUnsettledLoan() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan l: this.loanList) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            if (!l.getIsSettled()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    //@@author matthewng1996"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns all loans sorted by date."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns a sorted Arraylist of loans."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cLoan\u003e sortByDate() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cLoan\u003e loanSortedByDate \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        loanSortedByDate \u003d this.loanList;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Comparator\u003cLoan\u003e comparator \u003d Comparator.comparing(Loan::getDate);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Collections.sort(loanSortedByDate, comparator);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return loanSortedByDate;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns only loans (lend) sorted by date."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns an arraylist of loans (lend) sorted by date"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cLoan\u003e sortByLend() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cLoan\u003e loanSortByLend \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Loan l : this.loanList) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (l.getIsLend()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                loanSortByLend.add(l);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Comparator\u003cLoan\u003e comparator \u003d Comparator.comparing(Loan::getDate);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Collections.sort(loanSortByLend, comparator);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return loanSortByLend;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Returns only loans (borrow) sorted by date."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns an arraylist of loans (borrow) sorted by date"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cLoan\u003e sortByBorrow() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cLoan\u003e loanSortByBorrow \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Loan l : this.loanList) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (!l.getIsLend()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                loanSortByBorrow.add(l);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Comparator\u003cLoan\u003e comparator \u003d Comparator.comparing(Loan::getDate);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Collections.sort(loanSortByBorrow, comparator);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return loanSortByBorrow;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 47,
      "A0171206R": 167
    }
  },
  {
    "path": "src/main/java/wallet/model/record/Record.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " * The Record Class that is the parent of Loans, Notes, Expenses."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public abstract class Record {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public Record() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a Record Object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param description The String description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param date        The LocalDate object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public Record(String description, LocalDate date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns a String description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return String description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the String description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param description The String description."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the LocalDate object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param date LocalDate object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the LocalDate object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return the LocalDate object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the id of the Record Object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param id The identity of the Record object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setId(int id) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.id;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Formats the record to write to save file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public abstract String writeToFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 31,
      "matthewng1996": 3,
      "A0171206R": 50
    }
  },
  {
    "path": "src/main/java/wallet/model/record/RecurrenceRate.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public enum RecurrenceRate {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    DAILY,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    WEEKLY,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    MONTHLY,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    NO;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Parses string input into corresponding recurrence rate."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param recurrence String input of recurrence rate."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return RecurrenceRate enum."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static RecurrenceRate getRecurrence(String recurrence) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        switch (recurrence.toLowerCase()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"daily\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return RecurrenceRate.DAILY;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"weekly\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return RecurrenceRate.WEEKLY;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"monthly\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return RecurrenceRate.MONTHLY;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        case \"no\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return RecurrenceRate.NO;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 28
    }
  },
  {
    "path": "src/main/java/wallet/reminder/Reminder.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.reminder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.thread.ReminderThread;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class Reminder {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean autoRemind;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int timeInSeconds;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ReminderThread thread;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * The constructor for the Reminder object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public Reminder() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        autoRemind \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        timeInSeconds \u003d 1800; //set default time interval of auto remind to be 30 minutes"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * autoReminds the user of undone tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * this method will run as a background process."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * users can also set the reminder interval timings."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * and also turn it off and on as they wish."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void autoRemindStart() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread \u003d new ReminderThread(autoRemind, timeInSeconds);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Kills the auto remind thread."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void autoRemindStop() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread.stop();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets whether there is a automatic reminder."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param autoRemind Whether automatic reminder is on/off."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setAutoRemind(boolean autoRemind) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.autoRemind \u003d autoRemind;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Checks if automatic reminder is turned on/off."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return whether automatic reminder is turned on/off."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public boolean getAutoRemind() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.autoRemind;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the time interval for automatic reminder."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param timeInSeconds THe time interval for the automatic reminder."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setTimeInSeconds(int timeInSeconds) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.timeInSeconds \u003d timeInSeconds;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 66
    }
  },
  {
    "path": "src/main/java/wallet/storage/BudgetStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class BudgetStorage extends Storage\u003cBudget\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_BUDGET \u003d \"./data/budget.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * loads the list of Budget."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return list of set budget."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cBudget\u003e loadFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cBudget\u003e budgetList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_BUDGET, \"rws\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (!data[0].isEmpty() \u0026\u0026 !data[1].isEmpty() \u0026\u0026 !data[2].isEmpty()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        \u0026\u0026 !data[3].isEmpty() \u0026\u0026 !data[4].isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    Budget budget \u003d new Budget(Double.parseDouble(data[0]),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            Integer.parseInt(data[1]), Integer.parseInt(data[2]),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            Boolean.parseBoolean(data[3]), Double.parseDouble(data[4]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    budgetList.add(budget);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"No saved budget found.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return budgetList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Writes budget list to file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param budgetList The list of budgets."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void writeListToFile(ArrayList\u003cBudget\u003e budgetList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_BUDGET, \"rws\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            for (Budget budget : budgetList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                raf.writeBytes(budget.writeToFile());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 68
    }
  },
  {
    "path": "src/main/java/wallet/storage/ContactStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ContactStorage extends Storage\u003cContact\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_CONTACT \u003d \"./data/contact.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_MISSING_FILE \u003d \"No saved contacts found.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_FILE_EOF \u003d \"End of file.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static final String MESSAGE_ERROR_WRITE_FILE \u003d \"IOException: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the contacts from contact.txt into a temporary ArrayList of Contact objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Contact objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cContact\u003e loadFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ArrayList\u003cContact\u003e contactList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_CONTACT, \"rws\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String[] data \u003d str.split(\",\", -1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Contact contact \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (data.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    //@@author Xdecosee"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (data[2].equals(\"\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        data[2] \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    if (data[3].equals(\"\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                        data[3] \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    //@@author"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    contact \u003d new Contact(data[1], data[2], data[3]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (contact !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    contact.setId(Integer.parseInt(data[0]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    contactList.add(contact);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_MISSING_FILE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_FILE_EOF);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return contactList;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Writes the contact list into contacts.txt."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param contactList The list of contacts."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeListToFile(ArrayList\u003cContact\u003e contactList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_CONTACT, \"rws\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            for (Contact contact : contactList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                raf.writeBytes(contact.writeToFile());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_WRITE_FILE + e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 15,
      "kyang96": 8,
      "A0171206R": 58
    }
  },
  {
    "path": "src/main/java/wallet/storage/CurrencyStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.currency.Currency;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " * This class deals with loading of Currency from currency.txt"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class CurrencyStorage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_CURRENCY \u003d \"/currency.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * This method loads the currency.txt list into currentList for use in currency conversion."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return returns a list of currencies"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ArrayList\u003cCurrency\u003e loadFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cCurrency\u003e currencyList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            InputStream is \u003d getClass().getResourceAsStream(DEFAULT_STORAGE_FILEPATH_CURRENCY);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            InputStreamReader isr \u003d new InputStreamReader(is);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(isr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (!data[0].isEmpty() \u0026\u0026 !data[1].isEmpty() \u0026\u0026 !data[2].isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (data[2].trim().equals(\"false\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Currency currency \u003d new Currency(data[0].trim().toLowerCase(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                Double.parseDouble(data[1]),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        currencyList.add(currency);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        Currency currency \u003d new Currency(data[0].trim().toLowerCase(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                Double.parseDouble(data[1]),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                                true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        currencyList.add(currency);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            isr.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"No saved currencies found.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return currencyList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 59
    }
  },
  {
    "path": "src/main/java/wallet/storage/ExpenseStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.exception.InsufficientParameters;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.exception.WrongParameterFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseStorage extends Storage\u003cExpense\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_EXPENSE \u003d \"./data/expense.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_DATA_FORMAT \u003d \"Error in format of data when reading from text file.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_FILE_NOT_FOUND \u003d \"No saved expenses found.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_WRITE_EXPENSE \u003d \"Error encountered when writing to text file.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the expenses from expense.txt into a temporary ArrayList of Expense objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Expense objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cExpense\u003e loadFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_EXPENSE, \"rws\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Expense expense \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (data.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expense \u003d new Expense(data[1], LocalDate.parse(data[3], formatter), Double.parseDouble(data[2]),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            Category.getCategory(data[4]), false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expense \u003d new Expense(data[1], LocalDate.parse(data[3], formatter), Double.parseDouble(data[2]),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                            Category.getCategory(data[4]), true, RecurrenceRate.getRecurrence(data[5]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (expense !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expense.setId(Integer.parseInt(data[0]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    expenseList.add(expense);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            throw new WrongParameterFormat(MESSAGE_ERROR_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException | ArrayIndexOutOfBoundsException iob) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            throw new InsufficientParameters(MESSAGE_ERROR_DATA_FORMAT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Writes the expense list into expense.txt."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void writeListToFile(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_EXPENSE, \"rws\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            for (Expense expense : expenseList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                raf.writeBytes(expense.writeToFile());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            throw new WrongParameterFormat(MESSAGE_ERROR_WRITE_EXPENSE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 79,
      "A0171206R": 5
    }
  },
  {
    "path": "src/main/java/wallet/storage/HelpStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "//@@author Xdecosee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.help.Help;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": " * The HelpStorage Class prints help section files."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "public class HelpStorage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String DEFAULT_HELP_FILENAME_PATHS \u003d \"/helppaths.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_ERROR_ACCESS_LIST \u003d \"Error in setting up help section.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Returns a list of help sections."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return A list of help sections."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public ArrayList\u003cHelp\u003e helpData() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cHelp\u003e choices \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            InputStream is \u003d getClass().getResourceAsStream(DEFAULT_HELP_FILENAME_PATHS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            InputStreamReader isr \u003d new InputStreamReader(is);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(isr);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                if (data.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    ArrayList\u003cString\u003e sectionData \u003d readData(data[1].trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    Help section \u003d new Help(data[0].trim(), sectionData);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                    choices.add(section);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            isr.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } catch (NullPointerException | IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(MESSAGE_ERROR_ACCESS_LIST);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return choices;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Retrieve help section content."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param filePath file path to a help section."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @return list with help section content."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private ArrayList\u003cString\u003e readData(String filePath) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cString\u003e sectionContent \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        InputStream is \u003d getClass().getResourceAsStream(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        InputStreamReader isr \u003d new InputStreamReader(is);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(isr);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String[] data \u003d str.split(\"\\\\|\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (data.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                String row \u003d String.format(\"%-20s %s\", data[0].trim(), data[1].trim());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                sectionContent.add(row);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                sectionContent.add(\"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                sectionContent.add(data[0].trim());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        isr.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        is.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        return sectionContent;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 86
    }
  },
  {
    "path": "src/main/java/wallet/storage/LoanStorage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.io.RandomAccessFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class LoanStorage extends Storage\u003cLoan\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH_LOAN \u003d \"./data/loan.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private ContactStorage contactStorage \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Loads the loans from loan.txt into a temporary ArrayList of Loan objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ArrayList of Loan objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ArrayList\u003cLoan\u003e loadFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ArrayList\u003cLoan\u003e loanList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        boolean isLend;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        boolean isSettled;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_LOAN, \"rws\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            while (raf.getFilePointer() !\u003d raf.length()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                str \u003d raf.readLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                String[] data \u003d str.split(\",\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Loan loan \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                isLend \u003d !data[4].equals(\"0\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                isSettled \u003d !data[5].equals(\"0\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ContactList contactList \u003d new ContactList(contactStorage.loadFile());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                int index \u003d contactList.findIndexWithId(Integer.parseInt(data[6]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                person \u003d contactList.getContact(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (data.length \u003d\u003d 7 \u0026\u0026 person !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan \u003d new Loan(data[1], LocalDate.parse(data[3], formatter), Double.parseDouble(data[2]),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                            isLend, isSettled, person);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (loan !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.setId(Integer.parseInt(data[0]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loanList.add(loan);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"No saved loans found.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"End of file.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return loanList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Writes the loan list into loan.txt."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loanList The Loan object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void writeListToFile(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            RandomAccessFile raf \u003d new RandomAccessFile(DEFAULT_STORAGE_FILEPATH_LOAN, \"rws\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.setLength(0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            for (Loan loan : loanList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                if (raf.getFilePointer() !\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    raf.writeBytes(\"\\r\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                raf.writeBytes(loan.writeToFile());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            raf.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Sets the ContactStorage object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param contactStorage The ContactStorage object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void setContactStorage(ContactStorage contactStorage) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.contactStorage \u003d contactStorage;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Returns the ContactStorage object."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @return The ContactStorage object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ContactStorage getContactStorage() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        return this.contactStorage;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 106
    }
  },
  {
    "path": "src/main/java/wallet/storage/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public abstract class Storage\u003cT\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Attempts to load the save file on the local computer and populate the list with its data."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The list loaded from save file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public abstract ArrayList\u003cT\u003e loadFile();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Attempts to write object list into the save file on the local computer."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param objectList The list of object to write."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public abstract void writeListToFile(ArrayList\u003cT\u003e objectList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 7,
      "-": 15
    }
  },
  {
    "path": "src/main/java/wallet/storage/StorageManager.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class StorageManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String MESSAGE_ERROR_MKDIR \u003d \"Error when trying to create directory.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static final String DEFAULT_STORAGE_DIRECTORY \u003d \"./data\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private ExpenseStorage expenseStorage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private LoanStorage loanStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private ContactStorage contactStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private BudgetStorage budgetStorage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Constructs a new StorageManager object with all storage classes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public StorageManager() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        createDir();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.expenseStorage \u003d new ExpenseStorage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.loanStorage \u003d new LoanStorage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.contactStorage \u003d new ContactStorage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.loanStorage.setContactStorage(this.contactStorage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        this.budgetStorage \u003d new BudgetStorage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Creates the directory for storing data if it does not exist."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void createDir() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        File file \u003d new File(DEFAULT_STORAGE_DIRECTORY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                file.mkdir();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } catch (SecurityException se) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.println(MESSAGE_ERROR_MKDIR);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Loads the Expense objects into an ArrayList of Expenses."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The ArrayList of Expenses."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cExpense\u003e loadExpense() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseStorage.loadFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Loads the Loan objects into an ArrayList of Loans."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The ArrayList of Loans."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cLoan\u003e loadLoan() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return loanStorage.loadFile();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Loads the Contact objects into an ArrayList of Contacts."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return The ArrayList of Contacts."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cContact\u003e loadContact() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return contactStorage.loadFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Loads the Budget object in the ArrayList of Budget objects."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @return the ArrayList of Budgets objects."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public ArrayList\u003cBudget\u003e loadBudget() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return budgetStorage.loadFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Checks if lists are modified and updates save file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public boolean save(Wallet wallet) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        boolean isModified \u003d false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getExpenseList().getIsModified()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseStorage.writeListToFile(wallet.getExpenseList().getExpenseList());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getExpenseList().setModified(false);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            isModified \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getLoanList().getIsModified()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            loanStorage.writeListToFile(wallet.getLoanList().getLoanList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getLoanList().setModified(false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            isModified \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getContactList().getIsModified()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            contactStorage.writeListToFile(wallet.getContactList().getContactList());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getContactList().setModified(false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            isModified \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (wallet.getBudgetList().getIsModified()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            budgetStorage.writeListToFile(wallet.getBudgetList().getBudgetList());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            wallet.getBudgetList().setModified(false);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            isModified \u003d true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 108,
      "matthewng1996": 1,
      "A0171206R": 2
    }
  },
  {
    "path": "src/main/java/wallet/thread/ChartThread.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.thread;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ChartThread implements Runnable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private Thread thread;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private ArrayList\u003cExpense\u003e expenseList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Custom thread."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public ChartThread(ArrayList\u003cExpense\u003e expenseArrayList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        thread \u003d new Thread(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        thread.start();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseList \u003d expenseArrayList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Runs the threat and stops when pie chart is completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        printPieChart(expenseList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        printBarGraph(expenseList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        stop();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Prints the pie chart given specified stats."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void printPieChart(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        char[] fill \u003d new char[5];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        float[] percentage \u003d new float[5];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        float radius \u003d 8;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        fill[0] \u003d \u0027%\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        fill[1] \u003d \u0027-\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        fill[2] \u003d \u0027@\u0027;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        fill[3] \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        fill[4] \u003d \u0027.\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        percentage[0] \u003d 0f;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        percentage[1] \u003d 0f;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        percentage[2] \u003d 0f;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        percentage[3] \u003d 0f;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        percentage[4] \u003d 0f;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int lastSymbolToBeDrawn \u003d -1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        float totalExpensesAmount \u003d 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        double[] categoryAmount \u003d new double[5];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Expense e : expenseList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            totalExpensesAmount +\u003d e.getAmount();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Expense e : expenseList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            Category category \u003d e.getCategory();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            switch (category) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            case FOOD:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                percentage[0] +\u003d e.getAmount() / totalExpensesAmount;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (percentage[0] !\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    lastSymbolToBeDrawn \u003d 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                categoryAmount[0] +\u003d e.getAmount();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            case BILLS:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                percentage[1] +\u003d e.getAmount() / totalExpensesAmount;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (percentage[1] !\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    lastSymbolToBeDrawn \u003d 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                categoryAmount[1] +\u003d e.getAmount();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            case SHOPPING:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                percentage[2] +\u003d e.getAmount() / totalExpensesAmount;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (percentage[2] !\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    lastSymbolToBeDrawn \u003d 2;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                categoryAmount[2] +\u003d e.getAmount();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            case TRANSPORT:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                percentage[3] +\u003d e.getAmount() / totalExpensesAmount;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (percentage[3] \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    lastSymbolToBeDrawn \u003d 3;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                categoryAmount[3] +\u003d e.getAmount();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            case OTHERS:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                percentage[4] +\u003d e.getAmount() / totalExpensesAmount;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                if (percentage[4] !\u003d 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    lastSymbolToBeDrawn \u003d 4;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                categoryAmount[4] +\u003d e.getAmount();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (!hasEmptyExpense(percentage)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            drawTable(categoryAmount, percentage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            for (float y \u003d -radius; y \u003c radius; y++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                char character \u003d \u0027-\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                for (float x \u003d -radius; x \u003c radius; x++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    if (x * x + y * y \u003c radius * radius) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        double angle \u003d Math.atan2(y, x) / Math.PI / 2 + .5f;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        if (angle \u003d\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.print(fill[lastSymbolToBeDrawn]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            character \u003d set(fill, percentage, angle);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                            System.out.print(character); //Prints circle content"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        character \u003d \u0027 \u0027;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        System.out.print(character); //Prints spaces"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(character); //Form new line"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(\"No expenses, no pie chart!\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * This method fills the pie chart."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param fill       Symbols to fill pie chart"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param percentage Array of percentages for each category"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param angle      Calculated angle for the pie chart"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return could return a space, a symbol or recursively run function for the next symbol."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static char set(char[] fill, float[] percentage, double angle) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (angle \u003c\u003d percentage[0]) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            return fill[0];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        char[] fillArray \u003d new char[fill.length - 1];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        float[] percentageArray \u003d new float[percentage.length - 1];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        angle -\u003d percentage[0];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (int i \u003d 0; i \u003c fillArray.length; i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            fillArray[i] \u003d fill[i + 1];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            percentageArray[i] \u003d percentage[i + 1];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return set(fillArray, percentageArray, angle);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * This method draws the table as a summary for the pie chart before drawing the pie chart."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param categoryAmount amount of expenses in each category."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param percentage     Percentage of total expenses in each category"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void drawTable(double[] categoryAmount, float[] percentage) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] category \u003d new String[5];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String[] categorySymbols \u003d new String[5];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        category[0] \u003d \"FOOD\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        category[1] \u003d \"BILLS\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        category[2] \u003d \"SHOPPING\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        category[3] \u003d \"TRANSPORT\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        category[4] \u003d \"OTHERS\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        categorySymbols[0] \u003d \"%\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        categorySymbols[1] \u003d \"-\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        categorySymbols[2] \u003d \"@\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        categorySymbols[3] \u003d \"*\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        categorySymbols[4] \u003d \".\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"--------------------------------------------------------\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                + \"------\\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                + \"|  #  |   Category  |   Expense Amount     |     %   |Symbol|\\n\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                + \"|-------------------------------------------------------------\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (int i \u003d 0; i \u003c percentage.length; i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (percentage[i] !\u003d 0) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.printf(\"| %-4d | %-10s | %-20s | %-7.2f |   %s  |\\n\","
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        ++index, category[i], categoryAmount[i], percentage[i] * 100, categorySymbols[i]);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"--------------------------------------------------------\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                + \"------\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Stops the threat from running."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        thread.interrupt();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * This method checks if expenses is empty before it decides to draw the pie chart."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param percentage Percentage of total expenses"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @return true if empty, false if an existing expense is found"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static boolean hasEmptyExpense(float[] percentage) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (float f : percentage) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (f \u003e 0) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Displays a bar graph showing how much money is spent for each day."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void printBarGraph(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int maxLength \u003d 20;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        TreeMap\u003cLocalDate, Double\u003e expenseMap \u003d generateExpenseMap(expenseList);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        double maxValue \u003d 0;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Double\u003e entry : expenseMap.entrySet()) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            maxValue \u003d Math.max(maxValue, entry.getValue());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        double barIncrement \u003d maxValue / maxLength;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"Here is a bar graph of money spent per day:\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Double\u003e entry : expenseMap.entrySet()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.print(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\").format(entry.getKey()) + \" \");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.printf(\"| $%-6.2f \", entry.getValue());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            int numOfBar \u003d (int) Math.ceil(entry.getValue() / barIncrement);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            String bar \u003d \"\";"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            for (int i \u003d 0; i \u003c numOfBar; i++) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                bar +\u003d \u0027#\u0027;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.println(\"|\" + bar + \"|\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Generate a TreeMap of expenses for total amount of money spent for each date."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static TreeMap\u003cLocalDate, Double\u003e generateExpenseMap(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        TreeMap\u003cLocalDate, Double\u003e expenseMap \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense expense : expenseList) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            LocalDate date \u003d expense.getDate();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Double total \u003d 0.0;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (expenseMap.get(date) !\u003d null) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                total \u003d expenseMap.get(date);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            total +\u003d expense.getAmount();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseMap.put(date, total);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        return expenseMap;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 220,
      "kyang96": 43
    }
  },
  {
    "path": "src/main/java/wallet/thread/CurrencyThread.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.thread;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.CurrencyCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.currency.Currency;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class CurrencyThread implements Runnable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private Wallet wallet;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private Thread thread;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private String givenCountry;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Custom thread."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public CurrencyThread(Wallet walletParam, String type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        thread \u003d new Thread(this);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        thread.start();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        wallet \u003d walletParam;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        givenCountry \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Runs the threat and stops when pie chart is completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Currency c : wallet.getCurrencyList().getCurrencyList()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (c.getCountry().toLowerCase().equals(givenCountry)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                updateExpenseAndLoans(wallet, c);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                System.out.println(CurrencyCommand.MESSAGE_SUCCESSFUL_CONVERSION + givenCountry);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            System.out.println(CurrencyCommand.MESSAGE_NO_CURRENCY + givenCountry);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        stop();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Stops the threat from running."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        thread.interrupt();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * This method updates the amount in expenses and loans but does not save it."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param wallet Wallet object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * @param newCurrency newly chosen currency for conversion"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void updateExpenseAndLoans(Wallet wallet, Currency newCurrency) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        if (newCurrency !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            for (Expense e : wallet.getExpenseList().getExpenseList()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                e.setAmount(e.getAmount()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        / wallet.getCurrencyList().getCurrentCurrency().getValue()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        * newCurrency.getValue());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            for (Loan l : wallet.getLoanList().getLoanList()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                l.setAmount(l.getAmount()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        / wallet.getCurrencyList().getCurrentCurrency().getValue()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                        * newCurrency.getValue());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            wallet.getCurrencyList().getCurrentCurrency().setCurrentCurrency(false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            newCurrency.setCurrentCurrency(true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            wallet.getCurrencyList().setCurrentCurrency(newCurrency);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 75
    }
  },
  {
    "path": "src/main/java/wallet/thread/ReminderThread.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "//@@author A0171206R"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.thread;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class ReminderThread implements Runnable {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private boolean autoRemind;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Thread thread;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private int timeInSeconds;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Constructs a ReminderThread object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param autoRemind    Whether there is an auto reminder."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param timeInSeconds The time in seconds."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public ReminderThread(boolean autoRemind, int timeInSeconds) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.autoRemind \u003d autoRemind;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        this.timeInSeconds \u003d timeInSeconds;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread \u003d new Thread(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread.start(); // Starting the thread"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Prints the lists of unsettled loans."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        while (LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getState()).getLoanList().checkUnsettledLoan() \u0026\u0026 autoRemind) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                ArrayList\u003cLoan\u003e loanList \u003d LogicManager.getWalletList().getWalletList()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        .get(LogicManager.getWalletList().getState()).getLoanList().getLoanList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(\"Remember to settle your loans soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanTableHeaders();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                for (Loan l : loanList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    if (!l.getIsLend() \u0026\u0026 !l.getIsSettled()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.printf(\"| %-4d |  %-7s  | %-40s | $%-7.2f | %-10s |   %-11s   | %-18s | %-19s |\\n\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                                l.getId(), \"No\", l.getDescription(), l.getAmount(), l.getDate(), \"Borrow from\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                                l.getPerson().getName(), l.getPerson().getPhoneNum());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    } else if (l.getIsLend() \u0026\u0026 !l.getIsSettled()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                        System.out.printf(\"| %-4d |  %-7s  | %-40s | $%-7.2f | %-10s |   %-11s   | %-18s | %-19s |\\n\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                                l.getId(), \"No\", l.getDescription(), l.getAmount(), l.getDate(), \"Lend to\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                                l.getPerson().getName(), l.getPerson().getPhoneNum());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Ui.printLoanTableClose();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                Thread.sleep(timeInSeconds * 1000);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                System.out.println(\"Auto reminder interrupted...\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (!LogicManager.getWalletList().getWalletList().get(LogicManager.getWalletList()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                .getState()).getLoanList().checkUnsettledLoan()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            thread.interrupt();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            LogicManager.getReminder().setAutoRemind(false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            autoRemind \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.println(\"Turning off auto reminders because all loans have been settled!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Stops the thread."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        autoRemind \u003d false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        thread.interrupt();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "A0171206R": 79
    }
  },
  {
    "path": "src/main/java/wallet/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package wallet.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.help.Help;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.thread.ChartThread;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Scanner object used for reading input from user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_NOTE \u003d \"Note the following when reading help sections:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_INDICATOR_REQUIRED \u003d \"\u003c\u003e indicates required parameters for command\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_INDICATOR_OPTIONAL \u003d \"[]  indicates optional parameters for command\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_AVAILABLE_SECTIONS \u003d \"The following help sections are available:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    private static final String MESSAGE_CHOOSE_SECTION \u003d \"Read a section by typing in: help \u003csection number\u003e\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Constructs a new ui.Ui object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    //@@author matthewng1996"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Prints the welcome message of the program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void welcomeMsg() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String logo \u003d \" __     __     ______     __         __         ______     ______  \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + \"/\\\\ \\\\  _ \\\\ \\\\   /\\\\  __ \\\\   /\\\\ \\\\       /\\\\ \\\\       /\\\\  ___\\\\   /\\\\__  _\\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + \"\\\\ \\\\ \\\\/ \\\".\\\\ \\\\  \\\\ \\\\  __ \\\\  \\\\ \\\\ \\\\____  \\\\ \\\\ \\\\____  \\\\ \\\\  __\\\\   \\\\/_/\\\\ \\\\/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + \" \\\\ \\\\__/\\\".~\\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_____\\\\  \\\\ \\\\_____\\\\  \\\\ \\\\_____\\\\    \\\\ \\\\_\\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                    + \"  \\\\/_/   \\\\/_/   \\\\/_/\\\\/_/   \\\\/_____/   \\\\/_____/   \\\\/_____/     \\\\/_/\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"Hello! Welcome to the WalletCLI Application!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the goodbye message when the user exits the program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public void byeMsg() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prompts the user for input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return The input of the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * Prints the separator lines for UI."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"_______________________________________________________________________________\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Displays the expense list in table format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void printExpenseTable(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"-----------------------------------------------------\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"---------------------------------------------------\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"|  ID  |              Description                 |\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"  Category  |    Date    |    Amount    | Recurring |\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"|---------------------------------------------------------------\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"---------------------------------------|\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        double total \u003d 0;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : expenseList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (e.isRecurring()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.printf(\"| %-4d | %-40s | %-10s | %-10s |  $%-9.2f  |  %-7s  |\\n\", e.getId(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        e.getDescription(), e.getCategory(), e.getDate(), e.getAmount(), e.getRecFrequency());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                System.out.printf(\"| %-4d | %-40s | %-10s | %-10s |  $%-9.2f  |  %-7s  |\\n\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                        e.getId(), e.getDescription(), e.getCategory(), e.getDate(), e.getAmount(), \"No\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            total +\u003d e.getAmount();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"-----------------------------------------------------\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"---------------------------------------------------\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.printf(\"Total amount spent: $%.2f\\n\", total);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Displays a single expense in table format."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * @param e Expense to be displayed."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void printExpense(Expense e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"-----------------------------------------------------\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"---------------------------------------------------\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"|  ID  |              Description                 |\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"  Category  |    Date    |    Amount    | Recurring |\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"|---------------------------------------------------------------\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"---------------------------------------|\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (e.isRecurring()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.printf(\"| %-4d | %-40s | %-10s | %-10s |  $%-9.2f  |  %-7s  |\\n\", e.getId(),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    e.getDescription(), e.getCategory(), e.getDate(), e.getAmount(), e.getRecFrequency());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            System.out.printf(\"| %-4d | %-40s | %-10s | %-10s |  $%-9.2f  |  %-7s  |\\n\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                    e.getId(), e.getDescription(), e.getCategory(), e.getDate(), e.getAmount(), \"No\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.println(\"-----------------------------------------------------\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                + \"---------------------------------------------------\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Displays a bar chart for percentage of total over budget."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void drawBarChart(double total, double budget) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int maxLength \u003d 20;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int barLength \u003d 20;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        if (budget !\u003d 0 \u0026\u0026 budget \u003e total) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            barLength \u003d (int) Math.ceil(total / budget * maxLength);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        double percentage \u003d total / budget * 100;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String bar \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (int i \u003d 0; i \u003c barLength; i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            bar +\u003d \u0027#\u0027;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (int i \u003d barLength; i \u003c maxLength; i++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            bar +\u003d \u0027 \u0027;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.printf(\"You have spent %.1f%% of your budget.\\n\", percentage);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.print(\"[\" + bar + \"] \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        System.out.printf(\"$%.2f/$%.2f\\n\", total, budget);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    //@@author matthewng1996"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void drawPieChart(ArrayList\u003cExpense\u003e expenseList) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ChartThread chartThread \u003d new ChartThread(expenseList);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.out.println(\"Please wait while we draw the pie chart...\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author Xdecosee"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Displays the contact list in table format."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static void printContactTable(ArrayList\u003cContact\u003e contactList) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        ArrayList\u003cContact\u003e contactListCopy \u003d contactList;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String dash \u003d \"-\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String lineBreak \u003d new String(new char[100]).replace(\"\\0\", dash);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String headerBreak \u003d new String(new char[98]).replace(\"\\0\", dash);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(lineBreak);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.printf(\"| %-4s | %-20s | %-20s | %-43s |\\n\", \"ID\", \"Name\", \"Phone\", \"Detail\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(\"|\" + headerBreak + \"|\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (Contact c : contactListCopy) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String id \u003d Integer.toString(c.getId()).trim();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String name \u003d c.getName();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String phone \u003d c.getPhoneNum();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            String detail \u003d c.getDetail();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (phone \u003d\u003d null) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                phone \u003d \"\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            if (detail \u003d\u003d null) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "                detail \u003d \"\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.printf(\"| %-4s | %-20s | %-20s | %-43s |\\n\", id, name, phone, detail);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(lineBreak);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Displays a contact in table format."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public static void printContact(Contact c) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String dash \u003d \"-\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String lineBreak \u003d new String(new char[100]).replace(\"\\0\", dash);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String headerBreak \u003d new String(new char[98]).replace(\"\\0\", dash);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(lineBreak);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.printf(\"| %-4s | %-20s | %-20s | %-43s |\\n\", \"ID\", \"Name\", \"Phone\", \"Detail\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(\"|\" + headerBreak + \"|\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String id \u003d Integer.toString(c.getId()).trim();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String name \u003d c.getName();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String phone \u003d c.getPhoneNum();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        String detail \u003d c.getDetail();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (phone \u003d\u003d null) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            phone \u003d \"\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (detail \u003d\u003d null) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            detail \u003d \"\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.printf(\"| %-4s | %-20s | %-20s | %-43s |\\n\", id, name, phone, detail);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(lineBreak);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Displays the loan list in table format."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void printLoanTable(ArrayList\u003cLoan\u003e loanList) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author A0171206R"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(ListCommand.MESSAGE_LIST_LOANS);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        printLoanTableHeaders();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            printLoanRow(loan);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        printLoanTableClose();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Default headers for Loan table."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void printLoanTableHeaders() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //@@author A0171206R"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"--------------------------------------------------------\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"-------------------------------------------------------\""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"-------------------------------------\\n\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"|  ID  |  Settled  |              Description                 |  Amount  |    Date    |   \""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"Borrow/Lend   |    Contact Name    |    Contact Number   |\\n\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"|-----------------------------------------------------\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"---------------------------------------------------------\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"------------------------------------|\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Prints the specified Loan object in table format."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param loan The Loan object."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void printLoanRow(Loan loan) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        if (!loan.getIsLend() \u0026\u0026 !loan.getIsSettled()) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.printf(\"| %-4d |  %-7s  | %-40s | $%-7.2f | %-10s |   %-11s   | %-18s | %-19s |\\n\","
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getId(), \"No\", loan.getDescription(), loan.getAmount(), loan.getDate(), \"Borrow from\","
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getPerson().getName(), loan.getPerson().getPhoneNum());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (!loan.getIsLend() \u0026\u0026 loan.getIsSettled()) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.printf(\"| %-4d |  %-7s  | %-40s | $%-7.2f | %-10s |   %-11s   | %-18s | %-19s |\\n\","
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getId(), \"Yes\", loan.getDescription(), loan.getAmount(), loan.getDate(), \"Borrow from\","
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getPerson().getName(), loan.getPerson().getPhoneNum());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (loan.getIsLend() \u0026\u0026 !loan.getIsSettled()) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.printf(\"| %-4d |  %-7s  | %-40s | $%-7.2f | %-10s |   %-11s   | %-18s | %-19s |\\n\","
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getId(), \"No\", loan.getDescription(), loan.getAmount(), loan.getDate(), \"Lend to\","
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getPerson().getName(), loan.getPerson().getPhoneNum());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        } else if (loan.getIsLend() \u0026\u0026 loan.getIsSettled()) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            System.out.printf(\"| %-4d |  %-7s  | %-40s | $%-7.2f | %-10s |   %-11s   | %-18s | %-19s |\\n\","
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getId(), \"Yes\", loan.getDescription(), loan.getAmount(), loan.getDate(), \"Lend to\","
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                    loan.getPerson().getName(), loan.getPerson().getPhoneNum());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Prints line to close of the Loans table."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void printLoanTableClose() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"----------------------------------------\""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"---------------------------------------------------\""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                + \"--------------------------------------------------------\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * Prints an error message with the given content."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     *"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * @param exceptionMessage The specifics of the error."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void printError(String exceptionMessage) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        System.out.println(\"OOPS!!! \" + exceptionMessage);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author Xdecosee"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Show User a list of available help sections."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param helpList list of available help sections."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void showHelp(ArrayList\u003cHelp\u003e helpList) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_AVAILABLE_SECTIONS);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        for (Help h : helpList) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            System.out.println(index + \".\" + h.getChoice());"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            index +\u003d 1;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_NOTE);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_INDICATOR_REQUIRED);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_INDICATOR_OPTIONAL);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        System.out.println(MESSAGE_CHOOSE_SECTION);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 94,
      "kyang96": 80,
      "matthewng1996": 27,
      "A0171206R": 75,
      "-": 37
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/DeleteCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.WalletList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * setUp() method to make dummy objects for testing delete logic."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        WalletList dummyWalletList \u003d new WalletList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Lunch\", LocalDate.now(), 3,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Dinner\", LocalDate.now(), 5,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Contact person3 \u003d new Contact(\"John\", \"Boyfriend\", \"9017 3121\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getContactList().addContact(person1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getContactList().addContact(person2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getContactList().addContact(person3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Loan loan2 \u003d new Loan(\"dinner\", createdDate, 10.0, true, false, person2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getLoanList().addLoan(loan1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getLoanList().addLoan(loan2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        dummyWalletList.getWalletList().add(testWallet);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LogicManager.setWalletList(dummyWalletList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void execute_expense_validId_success() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"expense\", 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d testWallet.getExpenseList().findExpenseWithId(1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(null, e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(1, testWallet.getExpenseList().getSize());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void execute_expense_invalidId_error() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"expense\", 4);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(2, testWallet.getExpenseList().getSize());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author A0171206R"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void execute_loan_validId_success() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"loan\", 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d testWallet.getLoanList().findLoanWithId(1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertEquals(null, l);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertEquals(1, testWallet.getLoanList().getSize());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author Xdecosee"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void execute_contact_validId_success() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"contact\", 3);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        assertEquals(2, testWallet.getContactList().getContactListSize());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * Testing execute function when deleting contact with invalid ID."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * @param input Test inputs."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ValueSource(ints \u003d {1, 4})"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void execute_contact_invalidId_error(int input) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        DeleteCommand command \u003d new DeleteCommand(\"contact\", input);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        assertEquals(3, testWallet.getContactList().getContactListSize());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 23,
      "kyang96": 63,
      "A0171206R": 16
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/DoneCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author A0171206R"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     * setUp() method to make dummy objects for testing done logic."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        testWallet.getContactList().addContact(person1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        testWallet.getContactList().addContact(person2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan2 \u003d new Loan(\"dinner\", createdDate, 10.0, true, false, person2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        testWallet.getLoanList().addLoan(loan1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        testWallet.getLoanList().addLoan(loan2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void execute_done_validId() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DoneCommand command \u003d new DoneCommand(1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d testWallet.getLoanList().findLoanWithId(1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d testWallet.getContactList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"loan should be settled\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(1, l.getId()),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"lunch\", l.getDescription()),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-24\"), l.getDate()),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(10.0, l.getAmount()),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, l.getIsLend()),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(true, l.getIsSettled()),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(1)), l.getPerson())"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "A0171206R": 55
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/EditCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class EditCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * setUp() method to make dummy objects for testing edit logic."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Lunch\", LocalDate.now(), 3,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Dinner\", LocalDate.now(), 5,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getContactList().addContact(person1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getContactList().addContact(person2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Loan loan2 \u003d new Loan(\"dinner\", createdDate, 10.0, true, false, person2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getLoanList().addLoan(loan1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getLoanList().addLoan(loan2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void execute_expense_validId_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d testWallet.getExpenseList().findExpenseWithId(1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expense.setDescription(\"Supper\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expense.setAmount(8);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        EditCommand command \u003d new EditCommand(expense);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d testWallet.getExpenseList().findExpenseWithId(1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should be updated with new values\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(1, e.getId()),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Supper\", e.getDescription()),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.now(), e.getDate()),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(8.0, e.getAmount()),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.FOOD, e.getCategory()),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(false, e.isRecurring()),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.NO, e.getRecFrequency())"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author A0171206R"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void execute_loan_validId_success() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d testWallet.getLoanList().findLoanWithId(1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setDescription(\"breakfast\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loan.setAmount(8);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        EditCommand command \u003d new EditCommand(loan);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        command.execute(testWallet);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d testWallet.getLoanList().findLoanWithId(1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d testWallet.getContactList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"loan should be updated with new values\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(1, l.getId()),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"breakfast\", l.getDescription()),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-24\"), l.getDate()),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(8.0, l.getAmount()),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, l.getIsLend()),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, l.getIsSettled()),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(1)), l.getPerson())"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 59,
      "A0171206R": 26
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/ListCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Sets up the data by adding existing data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String date1 \u003d \"10/03/2019\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String date2 \u003d \"15/05/2019\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String date3 \u003d \"01/11/2019\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String date4 \u003d \"05/05/2019\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LocalDate localDate1 \u003d LocalDate.parse(date1, formatter);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LocalDate localDate2 \u003d LocalDate.parse(date2, formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LocalDate localDate3 \u003d LocalDate.parse(date3, formatter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LocalDate localDate4 \u003d LocalDate.parse(date4, formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Lunch\", localDate1, 3,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Dinner\", localDate2, 5,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Phone\", localDate3, 10,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Category.OTHERS, true, null));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Card\", localDate4, 3,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                Category.TRANSPORT, true, null));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getContactList().addContact(new Contact(\"Dave\", \"friend\", \"12345678\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getContactList().addContact(new Contact(\"Mary\", \"friend\", \"41242131\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getContactList().addContact(new Contact(\"Maria\", \"stranger\", \"124314343\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getLoanList().addLoan(new Loan(\"for lunch\", localDate1, 10, true,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                false, testWallet.getContactList().getContact(0)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getLoanList().addLoan(new Loan(\"for lunch\", localDate3, 10, false,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                false, testWallet.getContactList().getContact(1)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getLoanList().addLoan(new Loan(\"for lunch\", localDate4, 10, true,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                false, testWallet.getContactList().getContact(2)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all expenses sorted by date."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortExpenseByDate() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(0));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(3));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(1));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(2));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"expense /sortby date\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(expenseListSorted, testWallet.getExpenseList().sortByDate());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all recurring expenses sorted by date."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortRecurringExpenseByDate() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e recurringExpenseListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        recurringExpenseListSorted.add(testWallet.getExpenseList().getExpense(1));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        recurringExpenseListSorted.add(testWallet.getExpenseList().getExpense(3));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"recurring /sortby date\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(recurringExpenseListSorted, testWallet.getExpenseList().getSortedRecurringExpenseDate());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all expenses sorted by category."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortExpenseByCategory() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(0));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(2));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(3));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        expenseListSorted.add(testWallet.getExpenseList().getExpense(1));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"expense /sortby category\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(expenseListSorted, testWallet.getExpenseList().sortByCategory());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all recurring expenses sorted by category."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortRecurringExpenseByCategory() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cExpense\u003e recurringExpenseListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        recurringExpenseListSorted.add(testWallet.getExpenseList().getExpense(3));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        recurringExpenseListSorted.add(testWallet.getExpenseList().getExpense(1));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"recurring /sortby category\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(recurringExpenseListSorted, testWallet.getExpenseList().getSortedRecurringExpenseCategory());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all loans sorted by date."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortLoanByDate() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cLoan\u003e loanListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        loanListSorted.add(testWallet.getLoanList().getLoan(0));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        loanListSorted.add(testWallet.getLoanList().getLoan(2));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        loanListSorted.add(testWallet.getLoanList().getLoan(1));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"loan /sortby date\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(loanListSorted, testWallet.getLoanList().sortByDate());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all loans with lend field sorted by date."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortLoanByLend() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cLoan\u003e loanListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        loanListSorted.add(testWallet.getLoanList().getLoan(0));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        loanListSorted.add(testWallet.getLoanList().getLoan(1));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"loan /sortby lend\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(loanListSorted, testWallet.getLoanList().sortByLend());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all loans with borrow field sorted by date."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortLoanByBorrow() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cLoan\u003e loanListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        loanListSorted.add(testWallet.getLoanList().getLoan(2));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"loan /sortby borrow\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(loanListSorted, testWallet.getLoanList().sortByBorrow());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * List all contacts sorted by alphabetical order."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void sortContactByName() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ArrayList\u003cContact\u003e contactListSorted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        contactListSorted.add(testWallet.getContactList().getContact(0));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        contactListSorted.add(testWallet.getContactList().getContact(2));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        contactListSorted.add(testWallet.getContactList().getContact(1));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand(\"contact /sortby name\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        listCommand.execute(testWallet);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(contactListSorted, testWallet.getContactList().sortByName());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 168
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/SetBudgetTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class SetBudgetTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * This method will add relevant expense and budget to the test wallet."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String date1 \u003d \"10/01/2019\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String date2 \u003d \"15/02/2019\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LocalDate localDate1 \u003d LocalDate.parse(date1, formatter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LocalDate localDate2 \u003d LocalDate.parse(date2, formatter);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Lunch\", localDate1, 3, Category.FOOD, false, null));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getExpenseList().addExpense(new Expense(\"Dinner\", localDate2, 5, Category.FOOD, false, null));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getBudgetList().addBudget(new Budget(100, 10, 2019, false, 0));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for addition of budget with negative amount."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeAddBudgetFail() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(-10, 3, 2019, false, 0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetCommand budgetCommand \u003d new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetCommand.execute(testWallet);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(3, testWallet.getBudgetList().getBudgetList().size());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for budget with proper parameters."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeAddBudgetSuccess() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(50, 3, 2019, false, 0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetCommand budgetCommand \u003d new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetCommand.execute(testWallet);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(3, testWallet.getBudgetList().getBudgetList().size());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for removing budget."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeRemoveBudget() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(0, 3, 2019, false, 0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetCommand budgetCommand \u003d new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetCommand.execute(testWallet);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(1, testWallet.getBudgetList().getBudgetList().size());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for editing existing budget."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeEditBudget() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(150, 10, 2019, false, 0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetCommand budgetCommand \u003d new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetCommand.execute(testWallet);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(150, budget.getAmount());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for adding expenses after having an existing budget."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeReduceBudgetFromExistingExpenses() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String date1 \u003d \"10/10/2019\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        LocalDate localDate1 \u003d LocalDate.parse(date1, formatter);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Expense expense \u003d new Expense(\"Breakfast\", localDate1, 10, Category.FOOD, false, null);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(expense);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        addCommand.execute(testWallet);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        for (Budget b : testWallet.getBudgetList().getBudgetList()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            if (b.getMonth() \u003d\u003d expense.getDate().getMonthValue() \u0026\u0026 b.getYear() \u003d\u003d expense.getDate().getYear()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                assertEquals(100, b.getAmount());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for adding budget after existing expenses, with user input as \"Yes\"."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeAddBudgetWithExistingExpensesWithUserInputYes() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(100, 1, 2019, false, 0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetCommand budgetCommand \u003d new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String input \u003d \"yes\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        double remainingBudget \u003d budget.getAmount()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "                - testWallet.getExpenseList().getMonthExpenses(budget.getMonth(), budget.getYear());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetCommand.execute(testWallet);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(97, budget.getAmount());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(97, remainingBudget);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for adding budget after existing expenses, with user input as \"No\"."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeAddBudgetWithExistingExpensesWithUserInputNo() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        Budget budget \u003d new Budget(100, 1, 2019, false, 0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetCommand budgetCommand \u003d new SetBudgetCommand(budget);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String input \u003d \"no\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        InputStream in \u003d new ByteArrayInputStream(input.getBytes());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        System.setIn(in);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        budgetCommand.execute(testWallet);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(100, budget.getAmount());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 136
    }
  },
  {
    "path": "src/test/java/wallet/logic/command/ViewCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ViewCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Set up test wallet by adding budget."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getBudgetList().addBudget(new Budget(1000, 10, 2019, false, 0));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for viewing existing budget via view command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void executeViewBudget() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ViewCommand viewCommand \u003d new ViewCommand(\"budget\", \"10/2019\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        viewCommand.execute(testWallet);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertEquals(1000, testWallet.getBudgetList().getBudgetList().get(0).getAmount());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void getCategoryMap_populatedExpenseList() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e1 \u003d new Expense(\"Lunch\", LocalDate.parse(\"2019-10-01\"), 3,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e2 \u003d new Expense(\"Dinner\", LocalDate.parse(\"2019-10-15\"), 5,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e3 \u003d new Expense(\"Lunch\", LocalDate.parse(\"2019-10-31\"), 10,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e4 \u003d new Expense(\"Shirt\", LocalDate.parse(\"2019-10-10\"), 20,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.SHOPPING, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e5 \u003d new Expense(\"Train Concession\", LocalDate.parse(\"2019-10-05\"), 50,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.TRANSPORT, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e6 \u003d new Expense(\"Phone Bill\", LocalDate.parse(\"2019-10-25\"), 40,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.BILLS, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e3);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e4);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e5);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e6);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        HashMap\u003cCategory, ArrayList\u003cExpense\u003e\u003e testMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e foodList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        foodList.add(e1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        foodList.add(e2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        foodList.add(e3);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e shoppingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        shoppingList.add(e4);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e transportList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        transportList.add(e5);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e billList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        billList.add(e6);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(Category.FOOD, foodList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(Category.SHOPPING, shoppingList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(Category.TRANSPORT, transportList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(Category.BILLS, billList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ViewCommand command \u003d new ViewCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        HashMap\u003cCategory, ArrayList\u003cExpense\u003e\u003e categoryMap \u003d command.getCategoryMap(expenseList, 10, 2019);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertTrue(testMap.equals(categoryMap));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void getCategoryMap_emptyExpenseList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e expenseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        HashMap\u003cCategory, ArrayList\u003cExpense\u003e\u003e testMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ViewCommand command \u003d new ViewCommand();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        HashMap\u003cCategory, ArrayList\u003cExpense\u003e\u003e categoryMap \u003d command.getCategoryMap(expenseList, 10, 2019);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertTrue(testMap.equals(categoryMap));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 40,
      "kyang96": 52
    }
  },
  {
    "path": "src/test/java/wallet/logic/parser/AddCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.WalletList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.currency.CurrencyList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class AddCommandParserTest {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parseExpense_validInput_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String input \u003d \"Lunch $10 Food /on 11/11/2019\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d parser.parseExpense(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain correct input values\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Lunch\", expense.getDescription()),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-11-11\"), expense.getDate()),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(10.0, expense.getAmount()),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.FOOD, expense.getCategory()),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(false, expense.isRecurring()),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.NO, expense.getRecFrequency())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parseExpense_validRecurringInput_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String input \u003d \"Phone Bill $49 Bills /on 05/10/2019 /r monthly\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d parser.parseExpense(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain correct input values\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Phone Bill\", expense.getDescription()),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-05\"), expense.getDate()),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(49.0, expense.getAmount()),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.BILLS, expense.getCategory()),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(true, expense.isRecurring()),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.MONTHLY, expense.getRecFrequency())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author A0171206R"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void parseLoan_validInput_success() throws ParseException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        WalletList dummyWalletList \u003d new WalletList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet dummyWallet \u003d new Wallet(new CurrencyList(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new BudgetList(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new LoanList(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Contact object"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        person.setId(1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d dummyWallet.getContactList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        dummyWalletList.getWalletList().add(dummyWallet);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.setWalletList(dummyWalletList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String input \u003d \"lunch $10 21/09/2019 /b /c 1\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d parser.parseLoan(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"Loan should contain correct input values\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"lunch\", loan.getDescription()),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(10.0, loan.getAmount()),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-09-21\"), loan.getDate()),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsLend()),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsSettled()),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(1)), loan.getPerson())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author Xdecosee"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * This method test a series of wrong contact command inputs."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ValueSource(strings \u003d {\"\", \" \", \"/d /p\"})"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void parseContact_invalidInput_true(String input) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact contact \u003d parser.parseContact(input);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        assertNull(contact, \"Return Contact should be null:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * This method test a series of correct contact command inputs."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ValueSource(strings \u003d {\"Mary /d /p  \", \"Mary Tan\", \"Mary /p 9728 1831 /d sister\", \"Test /p /p\"})"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void parseContact_validInput_success(String input) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        AddCommandParser parser \u003d new AddCommandParser();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact contact \u003d parser.parseContact(input);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact match \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (\"Mary /d /p  \".equals(input)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(\"Mary\", null, null);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"Mary Tan\".equals(input)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(\"Mary Tan\", null, null);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"Mary /p 9728 1831 /d sister\".equals(input)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(\"Mary\", \"sister\", \"9728 1831\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"Test /p /p\".equals(input)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(\"Test\", null, \"/p\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact finalMatch \u003d match;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        assertAll(\"Returned Contact should contain correct input values\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            () -\u003e assertEquals(finalMatch.getName(), contact.getName()),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            () -\u003e assertEquals(finalMatch.getDetail(), contact.getDetail()),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            () -\u003e assertEquals(finalMatch.getPhoneNum(), contact.getPhoneNum())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 47,
      "kyang96": 41,
      "matthewng1996": 1,
      "A0171206R": 44
    }
  },
  {
    "path": "src/test/java/wallet/logic/parser/DeleteCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.logic.command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class DeleteCommandParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parse_missingId_throwsArrayIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DeleteCommandParser parser \u003d new DeleteCommandParser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            DeleteCommand command \u003d parser.parse(\"expense\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parse_invalidId_throwsNumberFormatException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        DeleteCommandParser parser \u003d new DeleteCommandParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertThrows(NumberFormatException.class, () -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            DeleteCommand command \u003d parser.parse(\"expense abc\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 25
    }
  },
  {
    "path": "src/test/java/wallet/logic/parser/EditCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import org.junit.jupiter.params.ParameterizedTest;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import org.junit.jupiter.params.provider.ValueSource;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.logic.LogicManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.WalletList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.ContactList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.currency.CurrencyList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.BudgetList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.ExpenseList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.Loan;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.record.LoanList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class EditCommandParserTest {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parseExpense_validInput_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String input \u003d \"2 /d Supper /a 10 /c Others\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d parser.parseExpense(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain edited values\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(2, expense.getId()),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Supper\", expense.getDescription()),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(null, expense.getDate()),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(10.0, expense.getAmount()),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.OTHERS, expense.getCategory()),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(false, expense.isRecurring()),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(null, expense.getRecFrequency())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void parseExpense_validRecurringInput_success() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        String input \u003d \"2 /d Supper /a 10 /c Others /r Daily\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d parser.parseExpense(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain edited values\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(2, expense.getId()),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Supper\", expense.getDescription()),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(null, expense.getDate()),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(10.0, expense.getAmount()),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.OTHERS, expense.getCategory()),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(true, expense.isRecurring()),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.DAILY, expense.getRecFrequency())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author Xdecosee"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * This method test a series of wrong contact command inputs."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ValueSource(strings \u003d {\"\", \"  \", \"1\", \"garbage\"})"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void parseContact_invalidInput_true(String input) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact contact \u003d parser.parseContact(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        assertNull(contact, \"Return Contact should be null:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     * This method test a series of correct contact command inputs."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ParameterizedTest"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    @ValueSource(strings \u003d {\"6 /n /d /p\", \"6 /n   /d   /p  \","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        \"6 /n John /p 7183 /d brother 123@abc.com\", \"8 /n Test /d /d /doctor\"})"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    public void parseContact_validInput_success(String input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact contact \u003d parser.parseContact(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact match \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        if (\"6 /n /d /p\".equals(input)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(null, \"\", \"\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match.setId(6);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"6 /n   /d   /p  \".equals(input)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(null, \"\", \"\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match.setId(6);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"6 /n John /p 7183 /d brother 123@abc.com\".equals(input)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(\"John\", \"brother 123@abc.com\", \"7183\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match.setId(6);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        } else if (\"8 /n Test /d /d /doctor\".equals(input)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match \u003d new Contact(\"Test\", \"/d /doctor\", null);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            match.setId(8);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        Contact finalMatch \u003d match;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        assertAll(\"Returned Contact should contain correct input values\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            () -\u003e assertEquals(finalMatch.getId(), contact.getId()),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            () -\u003e assertEquals(finalMatch.getName(), contact.getName()),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            () -\u003e assertEquals(finalMatch.getDetail(), contact.getDetail()),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "            () -\u003e assertEquals(finalMatch.getPhoneNum(), contact.getPhoneNum())"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author A0171206R"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void parseLoan_validInput_success_case_description() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        WalletList dummyWalletList \u003d new WalletList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet dummyWallet \u003d new Wallet(new CurrencyList(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new BudgetList(),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new LoanList(),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Contact object"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d dummyWallet.getContactList();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Loan object"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LoanList loanList \u003d dummyWallet.getLoanList();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(loan1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        dummyWalletList.getWalletList().add(dummyWallet);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.setWalletList(dummyWalletList);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String input \u003d \"1 /d dinner\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d parser.parseLoan(input);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"Loan should contain correct input values\","
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"dinner\", loan.getDescription()),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(10.0, loan.getAmount()),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-24\"), loan.getDate()),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsLend()),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsSettled()),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(1)), loan.getPerson())"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void parseLoan_validInput_success_case_date() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        WalletList dummyWalletList \u003d new WalletList();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet dummyWallet \u003d new Wallet(new CurrencyList(),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new BudgetList(),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(),"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(),"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new LoanList(),"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Contact object"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d dummyWallet.getContactList();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person2);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Loan object"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LoanList loanList \u003d dummyWallet.getLoanList();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(loan1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        dummyWalletList.getWalletList().add(dummyWallet);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.setWalletList(dummyWalletList);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String input \u003d \"1 /t 25/10/2019\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d parser.parseLoan(input);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"Loan should contain correct input values\","
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"lunch\", loan.getDescription()),"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(10.0, loan.getAmount()),"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-25\"), loan.getDate()),"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsLend()),"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsSettled()),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(1)), loan.getPerson())"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void parseLoan_validInput_success_case_amount() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        WalletList dummyWalletList \u003d new WalletList();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet dummyWallet \u003d new Wallet(new CurrencyList(),"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new BudgetList(),"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(),"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new LoanList(),"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Contact object"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d dummyWallet.getContactList();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person1);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person2);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Loan object"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LoanList loanList \u003d dummyWallet.getLoanList();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(loan1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        dummyWalletList.getWalletList().add(dummyWallet);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.setWalletList(dummyWalletList);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String input \u003d \"1 /a 15\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d parser.parseLoan(input);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"Loan should contain correct input values\","
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"lunch\", loan.getDescription()),"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(15.0, loan.getAmount()),"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-24\"), loan.getDate()),"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsLend()),"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsSettled()),"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(1)), loan.getPerson())"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void parseLoan_validInput_success_case_isLend() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        WalletList dummyWalletList \u003d new WalletList();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet dummyWallet \u003d new Wallet(new CurrencyList(),"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new BudgetList(),"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(),"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(),"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new LoanList(),"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Contact object"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d dummyWallet.getContactList();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person1);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person2);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Loan object"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LoanList loanList \u003d dummyWallet.getLoanList();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(loan1);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        dummyWalletList.getWalletList().add(dummyWallet);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.setWalletList(dummyWalletList);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String input \u003d \"1 /l\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d parser.parseLoan(input);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"Loan should contain correct input values\","
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"lunch\", loan.getDescription()),"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(10.0, loan.getAmount()),"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-24\"), loan.getDate()),"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(true, loan.getIsLend()),"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsSettled()),"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(1)), loan.getPerson())"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void parseLoan_validInput_success_case_contact() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        EditCommandParser parser \u003d new EditCommandParser();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        WalletList dummyWalletList \u003d new WalletList();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Wallet dummyWallet \u003d new Wallet(new CurrencyList(),"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new BudgetList(),"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ExpenseList(),"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ContactList(),"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new LoanList(),"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "                new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Contact object"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person1 \u003d new Contact(\"Mary\", \"Friend\", \"1234 5678\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Contact person2 \u003d new Contact(\"Jane\", \"Girlfriend\", \"8765 4321\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        ContactList contactList \u003d dummyWallet.getContactList();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person1);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        contactList.addContact(person2);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        //dummy Loan object"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LocalDate createdDate \u003d LocalDate.parse(\"24/10/2019\", formatter);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan1 \u003d new Loan(\"lunch\", createdDate, 10.0, false, false, person1);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LoanList loanList \u003d dummyWallet.getLoanList();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(loan1);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        dummyWalletList.getWalletList().add(dummyWallet);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        LogicManager.setWalletList(dummyWalletList);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        String input \u003d \"1 /c 2\";"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan loan \u003d parser.parseLoan(input);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        assertAll(\"Loan should contain correct input values\","
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(\"lunch\", loan.getDescription()),"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(10.0, loan.getAmount()),"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(LocalDate.parse(\"2019-10-24\"), loan.getDate()),"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsLend()),"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(false, loan.getIsSettled()),"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            () -\u003e assertEquals(contactList.getContactList().get(contactList.findIndexWithId(2)), loan.getPerson())"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        );"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Xdecosee"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xdecosee": 54,
      "kyang96": 43,
      "matthewng1996": 1,
      "A0171206R": 222
    }
  },
  {
    "path": "src/test/java/wallet/logic/parser/SetBudgetParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.SetBudgetCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class SetBudgetParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for valid parsing of input into proper parameters."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void parseBudgetValidInputSuccess() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetParser setBudgetParser \u003d new SetBudgetParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String input \u003d \"$1000 01/2019\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        SetBudgetCommand setBudgetCommand \u003d setBudgetParser.parse(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        setBudgetCommand.execute(testWallet);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertAll(\"Budget should contain these values\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            () -\u003e assertEquals(1000, testWallet.getBudgetList().getBudgetList().get(0).getAmount()),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            () -\u003e assertEquals(1, testWallet.getBudgetList().getBudgetList().get(0).getMonth()),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            () -\u003e assertEquals(2019, testWallet.getBudgetList().getBudgetList().get(0).getYear())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 30
    }
  },
  {
    "path": "src/test/java/wallet/logic/parser/ViewCommandParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "//@@author matthewng1996"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "package wallet.logic.parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.command.ViewCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.model.record.Budget;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "public class ViewCommandParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    private static Wallet testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Set up testwallet by adding a budget."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public static void setUp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        testWallet.getBudgetList().addBudget(new Budget(100, 10, 2019, false, 0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     * Test for valid parsing of input into proper parameters."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    public void parseViewCommandValidInputBudgetSuccess() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ViewCommandParser viewCommandParser \u003d new ViewCommandParser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        String input \u003d \"view budget 10/2019\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        ViewCommand viewCommand \u003d viewCommandParser.parse(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        assertAll(\"Viewing budget should contain these values\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            () -\u003e assertEquals(\"view\", viewCommand.type[0]),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            () -\u003e assertEquals(\"budget\", viewCommand.type[1]),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "            () -\u003e assertEquals(\"10/2019\", viewCommand.type[2])"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewng1996": 39
    }
  },
  {
    "path": "src/test/java/wallet/model/record/ExpenseListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertAll;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    ExpenseList expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void addExpense_nonRecurringExpense_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d expenseList.getExpense(0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain correct input values\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Lunch\", expense.getDescription()),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.now(), expense.getDate()),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(3.0, expense.getAmount()),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.FOOD, expense.getCategory()),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(false, expense.isRecurring()),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.NO, expense.getRecFrequency())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void addExpense_recurringDailyExpense_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, Category.FOOD, true, RecurrenceRate.DAILY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d expenseList.getExpense(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain correct input values\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Lunch\", expense.getDescription()),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.now(), expense.getDate()),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(3.0, expense.getAmount()),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.FOOD, expense.getCategory()),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(true, expense.isRecurring()),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.DAILY, expense.getRecFrequency())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void editExpense_validExpense_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        e.setDescription(\"Dinner\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        e.setAmount(5);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.editExpense(0, e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d expenseList.getExpense(0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain correct edited values\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Dinner\", expense.getDescription()),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.now(), expense.getDate()),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(5.0, expense.getAmount()),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.FOOD, expense.getCategory()),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(false, expense.isRecurring()),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.NO, expense.getRecFrequency())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void findExpenseIndex_validExpense_success() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Lunch\", LocalDate.now(), 3, Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d expenseList.findExpenseIndex(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(0, index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void deleteExpense_validId_success() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Phone Bills\", LocalDate.now(), 40, Category.BILLS, true, RecurrenceRate.MONTHLY);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d expenseList.deleteExpense(1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Deleted expense should contain correct values\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Phone Bills\", expense.getDescription()),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.now(), expense.getDate()),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(40.0, expense.getAmount()),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.BILLS, expense.getCategory()),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(true, expense.isRecurring()),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.MONTHLY, expense.getRecFrequency())"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void deleteExpense_invalidId_nullReturned() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d expenseList.deleteExpense(10);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(null, expense);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void findIndexWithId_validId_success() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Formal Shirt\", LocalDate.now(), 40, Category.SHOPPING, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d expenseList.findIndexWithId(1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(0, index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void findIndexWithId_invalidId_success() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"T-Shirt\", LocalDate.now(), 10, Category.SHOPPING, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        int index \u003d expenseList.findIndexWithId(5);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(-1, index);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void findExpenseWithId_validId_success() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e \u003d new Expense(\"Electricity bills\", LocalDate.now(), 80.0,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.BILLS, true, RecurrenceRate.MONTHLY);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(e);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d expenseList.findExpenseWithId(1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertAll(\"Expense should contain correct values\","
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(\"Electricity bills\", expense.getDescription()),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(LocalDate.now(), expense.getDate()),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(80.0, expense.getAmount()),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(Category.BILLS, expense.getCategory()),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(true, expense.isRecurring()),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            () -\u003e assertEquals(RecurrenceRate.MONTHLY, expense.getRecFrequency())"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void findExpenseWithId_invalidId_nullReturned() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense expense \u003d expenseList.findExpenseWithId(-1);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertEquals(null, expense);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 128
    }
  },
  {
    "path": "src/test/java/wallet/model/record/ExpenseParserTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewng1996"
        },
        "content": "import wallet.logic.parser.ExpenseParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.Wallet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ExpenseParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    //@@author kyang96"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    private static Wallet testWallet;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet \u003d new Wallet();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void getRecurringRecords_populatedList_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseList expenseList \u003d new ExpenseList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(new Expense(\"Lunch\", LocalDate.now(), 5, Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(new Expense(\"Dinner\", LocalDate.now(), 10, Category.FOOD, false, RecurrenceRate.NO));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.addExpense(new Expense(\"Breakfast\", LocalDate.now(), 3,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, true, RecurrenceRate.WEEKLY));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (Expense e : ExpenseParser.getRecurringRecords(expenseList)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(LocalDate.now(), e.getDate());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(Category.FOOD, e.getCategory());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(true, e.isRecurring());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            assertEquals(RecurrenceRate.WEEKLY, e.getRecFrequency());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void updateRecurringRecords_dailyRecurring_success() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate currentDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate expenseDate \u003d currentDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testList.add(new Expense(\"Breakfast\", expenseDate, 3,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, true, RecurrenceRate.DAILY));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().setExpenseList(testList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseParser.updateRecurringRecords(testWallet);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseList expenseList \u003d testWallet.getExpenseList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseParser.updateRecurringRecords(testWallet);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (int i \u003d 0; i \u003c expenseList.getSize(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense e \u003d expenseList.getExpense(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (i !\u003d expenseList.getSize() - 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(Category.FOOD, e.getCategory());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(false, e.isRecurring());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(RecurrenceRate.NO, e.getRecFrequency());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(Category.FOOD, e.getCategory());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(true, e.isRecurring());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(RecurrenceRate.DAILY, e.getRecFrequency());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseDate \u003d expenseDate.plusDays(1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void updateRecurringRecords_weeklyRecurring_success() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate currentDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate expenseDate \u003d currentDate;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testList.add(new Expense(\"Breakfast\", expenseDate, 3,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, true, RecurrenceRate.WEEKLY));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().setExpenseList(testList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseParser.updateRecurringRecords(testWallet);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseList expenseList \u003d testWallet.getExpenseList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseParser.updateRecurringRecords(testWallet);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (int i \u003d 0; i \u003c expenseList.getSize(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense e \u003d expenseList.getExpense(i);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (i !\u003d expenseList.getSize() - 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(Category.FOOD, e.getCategory());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(false, e.isRecurring());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(RecurrenceRate.NO, e.getRecFrequency());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(Category.FOOD, e.getCategory());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(true, e.isRecurring());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(RecurrenceRate.WEEKLY, e.getRecFrequency());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseDate \u003d expenseDate.plusDays(7);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void updateRecurringRecords_monthlyRecurring_success() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate currentDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        LocalDate expenseDate \u003d currentDate.minusMonths(2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e testList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testList.add(new Expense(\"Breakfast\", expenseDate, 3,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, true, RecurrenceRate.MONTHLY));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testWallet.getExpenseList().setExpenseList(testList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseParser.updateRecurringRecords(testWallet);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseList expenseList \u003d testWallet.getExpenseList();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ExpenseParser.updateRecurringRecords(testWallet);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        for (int i \u003d 0; i \u003c expenseList.getSize(); i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            Expense e \u003d expenseList.getExpense(i);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            if (i !\u003d expenseList.getSize() - 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(Category.FOOD, e.getCategory());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(false, e.isRecurring());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(RecurrenceRate.NO, e.getRecFrequency());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(\"Breakfast\", e.getDescription());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(expenseDate, e.getDate());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(3.0, e.getAmount());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(Category.FOOD, e.getCategory());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(true, e.isRecurring());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                assertEquals(RecurrenceRate.MONTHLY, e.getRecFrequency());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kyang96"
        },
        "content": "            expenseDate \u003d expenseDate.plusMonths(1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 137,
      "matthewng1996": 1
    }
  },
  {
    "path": "src/test/java/wallet/model/record/LoanListTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "package wallet.model.record;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import wallet.model.contact.Contact;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "public class LoanListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    LoanList loanList \u003d new LoanList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    private Contact person \u003d new Contact(\"mary\", \"friend\", \"92737231\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_notSettled_borrow_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, false, false, person);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.getIsLend());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.getIsSettled());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(person, loan.getPerson());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_Settled_borrow_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, false, true, person);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.getIsLend());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.getIsSettled());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(person, loan.getPerson());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_notSettled_lend_success() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, true, false, person);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.getIsLend());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(false, loan.getIsSettled());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(person, loan.getPerson());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    public void addLoan_Settled_lend_success() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        Loan l \u003d new Loan(\"lunch\", LocalDate.now(), 100, true, true, person);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        loanList.addLoan(l);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        for (Loan loan : loanList.getLoanList()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(\"lunch\", loan.getDescription());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(100.0, loan.getAmount());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(LocalDate.now(), loan.getDate());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.getIsLend());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(true, loan.getIsSettled());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "            assertEquals(person, loan.getPerson());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "A0171206R"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "A0171206R"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "A0171206R": 68
    }
  },
  {
    "path": "src/test/java/wallet/thread/ChartThreadTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kyang96"
        },
        "content": "package wallet.thread;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.Expense;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import wallet.model.record.RecurrenceRate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kyang96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kyang96"
        },
        "content": "public class ChartThreadTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    ArrayList\u003cExpense\u003e expenseList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    TreeMap\u003cLocalDate, Double\u003e testMap \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     * Generate test data in expense list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kyang96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e1 \u003d new Expense(\"Lunch\", LocalDate.parse(\"2019-10-01\"), 3,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e2 \u003d new Expense(\"Dinner\", LocalDate.parse(\"2019-10-15\"), 5,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e3 \u003d new Expense(\"Lunch\", LocalDate.parse(\"2019-10-31\"), 10,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.FOOD, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e4 \u003d new Expense(\"Shirt\", LocalDate.parse(\"2019-10-10\"), 20,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.SHOPPING, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e5 \u003d new Expense(\"Train Concession\", LocalDate.parse(\"2019-10-01\"), 50,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.TRANSPORT, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        Expense e6 \u003d new Expense(\"Phone Bill\", LocalDate.parse(\"2019-10-25\"), 40,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kyang96"
        },
        "content": "                Category.BILLS, false, RecurrenceRate.NO);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e3);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e4);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e5);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        expenseList.add(e6);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(LocalDate.parse(\"2019-10-01\"), 53.0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(LocalDate.parse(\"2019-10-10\"), 20.0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(LocalDate.parse(\"2019-10-15\"), 5.0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(LocalDate.parse(\"2019-10-25\"), 40.0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap.put(LocalDate.parse(\"2019-10-31\"), 10.0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void generateExpenseMap_populatedExpenseList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        TreeMap\u003cLocalDate, Double\u003e expenseMap \u003d ChartThread.generateExpenseMap(expenseList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertTrue(testMap.equals(expenseMap));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    public void generateExpenseMap_emptyExpenseList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        ArrayList\u003cExpense\u003e emptyList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        TreeMap\u003cLocalDate, Double\u003e emptyMap \u003d ChartThread.generateExpenseMap(emptyList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        testMap \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kyang96"
        },
        "content": "        assertTrue(testMap.equals(emptyMap));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kyang96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kyang96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kyang96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kyang96": 63
    }
  }
]
